// NEONPRO Database Configuration
// Drizzle ORM + Supabase Integration
// Generated by VIBECODE SYSTEM V4.0 - Architectural Optimization

import { drizzle } from "drizzle-orm/postgres-js";
import postgres from "postgres";
import * as schema from "./schema";

// Supabase connection string
const connectionString = process.env.DATABASE_URL;

// Only initialize database connection if DATABASE_URL is available
// This prevents build-time errors when environment variables are not set
let db: any = null;

if (connectionString) {
  // Create postgres client with optimized settings for Supabase
  const client = postgres(connectionString, {
    prepare: false, // Required for Supabase connection pooler
    max: 10, // Connection pool size
    idle_timeout: 20,
    connect_timeout: 10,
  });

  // Create Drizzle database instance with schema
  db = drizzle({
    client,
    schema,
    logger: process.env.NODE_ENV === "development",
  });
} else {
  // Create a mock database for build time
  console.warn("DATABASE_URL not found, using mock database for build");
  db = {
    select: () => ({ from: () => ({ where: () => ({ limit: () => [] }) }) }),
    insert: () => ({ values: () => ({ returning: () => [] }) }),
    // Add other mock methods as needed
  };
}

export { db };

// Export types for type-safe operations
export type Database = typeof db;
export * from "./schema";
