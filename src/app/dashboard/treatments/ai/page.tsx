// NEONPRO AI Treatment Recommendations Page
// Phase 7 AI Integration - AI Treatment Recommendations Dashboard
// Generated by VIBECODE SYSTEM V4.0 - AI Integration

import React from 'react';
import { Metadata } from 'next';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { 
  Sparkles, 
  Brain, 
  TrendingUp, 
  Users, 
  Clock, 
  CheckCircle,
  AlertTriangle,
  BarChart3,
  History
} from 'lucide-react';
import TreatmentRecommendations from '@/components/ai/TreatmentRecommendations';

export const metadata: Metadata = {
  title: 'AI Treatment Recommendations | NEONPRO',
  description: 'AI-powered treatment recommendations for aesthetic medicine',
};

// Mock data for demonstration (replace with real data from database)
const mockStats = {
  totalRecommendations: 156,
  accuracyRate: 87,
  avgResponseTime: 1.8,
  patientsHelped: 89,
};

const mockRecentRecommendations = [
  {
    id: '1',
    patientName: 'Maria Silva',
    treatmentType: 'Facial Rejuvenation',
    status: 'approved',
    confidence: 0.92,
    createdAt: '2025-06-14T10:30:00Z',
  },
  {
    id: '2',
    patientName: 'Jo√£o Santos',
    treatmentType: 'Body Contouring',
    status: 'reviewed',
    confidence: 0.85,
    createdAt: '2025-06-14T09:15:00Z',
  },
  {
    id: '3',
    patientName: 'Ana Costa',
    treatmentType: 'Laser Treatment',
    status: 'generated',
    confidence: 0.78,
    createdAt: '2025-06-14T08:45:00Z',
  },
];

function StatCard({ 
  title, 
  value, 
  unit, 
  icon: Icon, 
  trend, 
  description 
}: {
  title: string;
  value: number;
  unit?: string;
  icon: React.ElementType;
  trend?: 'up' | 'down' | 'stable';
  description: string;
}) {
  return (
    <Card>
      <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
        <CardTitle className="text-sm font-medium">{title}</CardTitle>
        <Icon className="h-4 w-4 text-muted-foreground" />
      </CardHeader>
      <CardContent>
        <div className="text-2xl font-bold">
          {value}{unit}
        </div>
        <p className="text-xs text-muted-foreground">{description}</p>
      </CardContent>
    </Card>
  );
}

function RecommendationCard({ recommendation }: { recommendation: any }) {
  const getStatusColor = (status: string) => {
    switch (status) {
      case 'approved': return 'bg-green-100 text-green-800';
      case 'reviewed': return 'bg-blue-100 text-blue-800';
      case 'generated': return 'bg-yellow-100 text-yellow-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'approved': return <CheckCircle className="h-4 w-4" />;
      case 'reviewed': return <Clock className="h-4 w-4" />;
      case 'generated': return <AlertTriangle className="h-4 w-4" />;
      default: return null;
    }
  };

  return (
    <Card>
      <CardContent className="p-4">
        <div className="flex items-center justify-between mb-2">
          <h4 className="font-semibold">{recommendation.patientName}</h4>
          <Badge className={getStatusColor(recommendation.status)}>
            {getStatusIcon(recommendation.status)}
            <span className="ml-1 capitalize">{recommendation.status}</span>
          </Badge>
        </div>
        <p className="text-sm text-muted-foreground mb-2">
          {recommendation.treatmentType}
        </p>
        <div className="flex items-center justify-between text-xs text-muted-foreground">
          <span>Confidence: {Math.round(recommendation.confidence * 100)}%</span>
          <span>{new Date(recommendation.createdAt).toLocaleDateString()}</span>
        </div>
      </CardContent>
    </Card>
  );
}

export default function AITreatmentRecommendationsPage() {
  return (
    <div className="flex-1 space-y-6 p-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold tracking-tight flex items-center gap-2">
            <Brain className="h-8 w-8 text-blue-600" />
            AI Treatment Recommendations
          </h1>
          <p className="text-muted-foreground">
            Generate personalized treatment recommendations using advanced AI analysis
          </p>
        </div>
        <Button className="bg-blue-600 hover:bg-blue-700">
          <Sparkles className="mr-2 h-4 w-4" />
          New Recommendation
        </Button>
      </div>

      {/* Stats Overview */}
      <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
        <StatCard
          title="Total Recommendations"
          value={mockStats.totalRecommendations}
          icon={Brain}
          description="AI recommendations generated"
        />
        <StatCard
          title="Accuracy Rate"
          value={mockStats.accuracyRate}
          unit="%"
          icon={TrendingUp}
          description="Doctor approval rate"
        />
        <StatCard
          title="Avg Response Time"
          value={mockStats.avgResponseTime}
          unit="s"
          icon={Clock}
          description="Average generation time"
        />
        <StatCard
          title="Patients Helped"
          value={mockStats.patientsHelped}
          icon={Users}
          description="Unique patients with recommendations"
        />
      </div>

      {/* Main Content */}
      <Tabs defaultValue="generate" className="space-y-4">
        <TabsList>
          <TabsTrigger value="generate">Generate Recommendations</TabsTrigger>
          <TabsTrigger value="history">Recent History</TabsTrigger>
          <TabsTrigger value="analytics">Analytics</TabsTrigger>
        </TabsList>

        <TabsContent value="generate" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Generate New Recommendation</CardTitle>
              <CardDescription>
                Select a patient and generate AI-powered treatment recommendations
              </CardDescription>
            </CardHeader>
            <CardContent>
              {/* Patient Selection and Recommendation Generation */}
              <div className="space-y-4">
                <div className="p-4 border rounded-lg bg-blue-50">
                  <p className="text-sm text-blue-800 mb-2">
                    <strong>Demo Mode:</strong> For demonstration purposes, using sample patient data.
                  </p>
                  <TreatmentRecommendations
                    patientId="demo-patient-1"
                    clinicId="demo-clinic-1"
                    patientName="Demo Patient"
                    onRecommendationGenerated={(recommendation) => {
                      console.log('Recommendation generated:', recommendation);
                    }}
                  />
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="history" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <History className="h-5 w-5" />
                Recent Recommendations
              </CardTitle>
              <CardDescription>
                View and manage recent AI-generated treatment recommendations
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
                {mockRecentRecommendations.map((recommendation) => (
                  <RecommendationCard 
                    key={recommendation.id} 
                    recommendation={recommendation} 
                  />
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="analytics" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <BarChart3 className="h-5 w-5" />
                AI Performance Analytics
              </CardTitle>
              <CardDescription>
                Monitor AI recommendation performance and accuracy metrics
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="p-6 border rounded-lg text-center">
                  <BarChart3 className="h-12 w-12 mx-auto text-muted-foreground mb-4" />
                  <h3 className="text-lg font-semibold mb-2">Analytics Dashboard</h3>
                  <p className="text-muted-foreground">
                    Detailed analytics and performance metrics will be available here.
                    Track recommendation accuracy, user feedback, and system performance.
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
}
