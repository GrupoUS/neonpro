{
  "$schema": "https://raw.githubusercontent.com/oxc-project/oxc/main/npm/oxlint/configuration_schema.json",
  "extends": ["../../.oxlintrc.json"],
  "plugins": [
    "typescript",
    "oxc",
    "jsdoc",
    "promise"
  ],
  "rules": {
    // LGPD & Healthcare compliance
    "typescript/no-explicit-any": "error",
    "typescript/no-unsafe-assignment": "error",
    "typescript/no-unsafe-member-access": "error",
    "typescript/no-unsafe-call": "error",
    "typescript/no-unsafe-return": "error",
    "typescript/prefer-optional-chain": "error",
    "typescript/prefer-nullish-coalescing": "error",

    // Data validation crítica
    "no-implicit-coercion": "error",
    "no-implicit-globals": "error",
    "no-mixed-operators": "error",
    "no-new-wrappers": "error",
    "no-throw-literal": "error",
    "no-unmodified-loop-condition": "error",
    "no-unused-expressions": "error",
    "no-useless-call": "error",
    "no-useless-concat": "error",
    "no-useless-return": "error",

    // Promise handling para operações críticas
    "promise/prefer-await-to-then": "error",
    "promise/no-return-wrap": "error",
    "promise/param-names": "error",
    "promise/catch-or-return": "error",
    "promise/no-nesting": "error",

    // Documentação obrigatória para compliance
    "jsdoc/require-jsdoc": [
      "error",
      {
        "contexts": [
          "FunctionExpression",
          "FunctionDeclaration",
          "ClassDeclaration",
          "MethodDefinition",
          "PropertyDefinition"
        ],
        "require": {
          "FunctionExpression": true,
          "FunctionDeclaration": true,
          "ClassDeclaration": true,
          "MethodDefinition": true
        }
      }
    ],
    "jsdoc/require-description": "error",
    "jsdoc/require-param": "error",
    "jsdoc/require-returns": "error",
    "jsdoc/check-param-names": "error",

    // Data integrity
    "prefer-const": "error",
    "no-var": "error",
    "no-unused-vars": [
      "error",
      {
        "ignoreRestSiblings": false,
        "argsIgnorePattern": "^_"
      }
    ],

    // Logging controlado para auditoria
    "no-console": [
      "warn",
      {
        "allow": ["warn", "error", "info"]
      }
    ],
    "no-debugger": "error",

    // Performance para dados sensíveis
    "no-await-in-loop": "warn",
    "no-extra-bind": "error",
    "no-loop-func": "error",

    // Code quality para compliance
    "complexity": ["warn", 10],
    "max-depth": ["warn", 5],
    "max-lines": ["warn", 400],
    "max-lines-per-function": ["warn", 75]
  },
  "overrides": [
    {
      "files": ["src/lgpd/**/*.ts"],
      "rules": {
        "jsdoc/require-jsdoc": "error",
        "jsdoc/require-description": "error",
        "jsdoc/require-param": "error",
        "jsdoc/require-returns": "error",
        "typescript/no-explicit-any": "error",
        "no-console": "error"
      }
    },
    {
      "files": ["src/anvisa/**/*.ts"],
      "rules": {
        "jsdoc/require-jsdoc": "error",
        "typescript/no-explicit-any": "error",
        "no-console": "error"
      }
    },
    {
      "files": ["src/cfm/**/*.ts"],
      "rules": {
        "jsdoc/require-jsdoc": "error",
        "typescript/no-explicit-any": "error",
        "no-console": "error"
      }
    },
    {
      "files": ["src/patient-data/**/*.ts"],
      "rules": {
        "jsdoc/require-jsdoc": "error",
        "typescript/no-explicit-any": "error",
        "typescript/no-unsafe-assignment": "error",
        "typescript/no-unsafe-member-access": "error",
        "typescript/no-unsafe-call": "error",
        "typescript/no-unsafe-return": "error",
        "no-console": "error"
      }
    },
    {
      "files": ["src/validation/**/*.ts"],
      "rules": {
        "jsdoc/require-jsdoc": "error",
        "typescript/no-explicit-any": "error",
        "no-implicit-coercion": "error"
      }
    }
  ],
  "ignorePatterns": [
    "node_modules/**",
    "dist/**",
    "build/**",
    "coverage/**",
    "*.min.js",
    ".turbo/**"
  ]
}
