{
  "name": "NeonPro Healthcare Quality Gate",
  "version": "1.0.0",
  "timestamp": "2025-10-03T13:08:05.659Z",
  "tools": {
    "oxlint": {
      "name": "OXLint",
      "responsibility": "Primary healthcare compliance linter (90%)",
      "performance": "50-100x faster than ESLint",
      "rules": 570,
      "healthcareRules": [
        "lgpd-compliance",
        "anvisa-validation",
        "cfm-standards"
      ],
      "required": true,
      "threshold": 0
    },
    "biome": {
      "name": "Biome",
      "responsibility": "Ultra-fast formatter (10%)",
      "features": [
        "formatting",
        "linting",
        "import-sorting"
      ],
      "required": true,
      "threshold": 0
    },
    "eslint": {
      "name": "ESLint",
      "responsibility": "Security-focused validation (5%)",
      "healthcareRules": [
        "data-protection",
        "audit-logging",
        "access-control"
      ],
      "required": true,
      "threshold": 0
    },
    "typescript": {
      "name": "TypeScript",
      "responsibility": "Type safety and strict validation",
      "mode": "strict",
      "required": true,
      "threshold": 0
    },
    "vitest": {
      "name": "Vitest",
      "responsibility": "Healthcare testing framework",
      "coverage": {
        "global": {
          "branches": 95,
          "functions": 95,
          "lines": 95,
          "statements": 95
        },
        "healthcare": {
          "branches": 95,
          "functions": 95,
          "lines": 95,
          "statements": 95
        },
        "security": {
          "branches": 95,
          "functions": 95,
          "lines": 95,
          "statements": 95
        },
        "api": {
          "branches": 95,
          "functions": 95,
          "lines": 95,
          "statements": 95
        }
      },
      "required": true,
      "minCoverage": 90
    },
    "performance": {
      "name": "Performance",
      "responsibility": "Bun optimization targets",
      "targets": {
        "buildSpeed": 4,
        "memoryReduction": 0.22,
        "cacheHitRate": 0.9,
        "ttfbTarget": 100,
        "coldStart": 500,
        "warmStart": 50
      },
      "required": true,
      "threshold": 0.95
    }
  },
  "healthcareCompliance": {
    "lgpd": {
      "required": true,
      "validation": [
        "consent",
        "dataSubjectRights",
        "dataProtection",
        "auditTrail"
      ],
      "penalty": "HIGH"
    },
    "anvisa": {
      "required": true,
      "validation": [
        "medicalDevice",
        "qualityControl",
        "regulatoryRequirements"
      ],
      "penalty": "CRITICAL"
    },
    "cfm": {
      "required": true,
      "validation": [
        "professionalLicense",
        "scopePractice",
        "ethicalCompliance"
      ],
      "penalty": "HIGH"
    },
    "dataResidency": {
      "required": true,
      "country": "Brazil",
      "regions": [
        "Southeast"
      ],
      "penalty": "CRITICAL"
    }
  },
  "agents": {
    "@apex-dev": {
      "role": "Implementation Agent",
      "focus": [
        "feature-development",
        "bug-fixes",
        "optimization"
      ],
      "coordination": "RED-GREEN-REFACTOR workflow"
    },
    "@code-reviewer": {
      "role": "Quality Assurance Agent",
      "focus": [
        "performance",
        "code-standards",
        "security"
      ],
      "coordination": "50-100x OXLint validation"
    },
    "@test-auditor": {
      "role": "Testing Validation Agent",
      "focus": [
        "healthcare-compliance",
        "security-validation",
        "coverage"
      ],
      "coordination": "Vitest 90%+ coverage targets"
    },
    "@security-auditor": {
      "role": "Security Compliance Agent",
      "focus": [
        "lgpd",
        "anvisa",
        "cfm",
        "data-protection"
      ],
      "coordination": "ESLint security rule enforcement"
    },
    "@architect-review": {
      "role": "Architecture Validation Agent",
      "focus": [
        "design-patterns",
        "data-flows",
        "scalability"
      ],
      "coordination": "Bun-optimized architecture review"
    }
  },
  "results": {
    "oxlint": {
      "status": "failed",
      "error": "Command failed: bunx oxlint -c .oxlintrc.json --reporter=compact\nError: `--reporter` is not expected in this context\n",
      "compliant": false
    },
    "biome": {
      "status": "completed",
      "executionTime": "3181.45ms",
      "formatted": true,
      "compliant": true,
      "issues": ""
    },
    "eslint": {
      "status": "failed",
      "error": "spawnSync /bin/sh ENOBUFS (stdout or stderr buffer reached maxBuffer size limit)",
      "compliant": false
    },
    "typescript": {
      "status": "failed",
      "error": "Command failed: bun run type-check\n$ bun x tsc --noEmit\nerror: script \"type-check\" exited with code 1\n",
      "compliant": false
    },
    "vitest": {
      "status": "failed",
      "error": "Command failed: bun run test:coverage\n$ bun test --coverage\n\ntests/quality-control-frontmatter.test.ts:\n\n# Unhandled error between tests\n-------------------------------\n 9 |   // Extract frontmatter (between first and second ---)\n10 |   const frontmatterMatch = fileContent.match(/^---\\n(.*?)\\n---/s)\n11 |   // Ensure frontmatter is always a string and fail fast if not present\n12 |   const frontmatter = frontmatterMatch?.[1] ?? ''\n13 |   if (!frontmatter) {\n14 |     throw new Error(`Frontmatter not found in ${filePath}`)\n                                                               ^\nerror: Frontmatter not found in /home/vibecode/neonpro/.github/prompts/quality-control.prompt.md\n      at <anonymous> (/home/vibecode/neonpro/tests/quality-control-frontmatter.test.ts:14:59)\n-------------------------------\n\n\ntests/typescript-config.test.ts:\n(pass) TypeScript Configuration Validation > 1. Consistent moduleResolution across all packages > should validate moduleResolution in tsconfig files by checking content [6.52ms]\n(pass) TypeScript Configuration Validation > 1. Consistent moduleResolution across all packages > should validate moduleResolution inheritance in extended configs [0.36ms]\n(pass) TypeScript Configuration Validation > 2. Strict mode enabled in all tsconfig.json files > should validate strict mode in tsconfig files by checking content [0.16ms]\n(pass) TypeScript Configuration Validation > 2. Strict mode enabled in all tsconfig.json files > should validate strict-related compiler options in base config [0.07ms]\n(pass) TypeScript Configuration Validation > 2. Strict mode enabled in all tsconfig.json files > should validate database-specific strict options [0.05ms]\n(pass) TypeScript Configuration Validation > 3. Environment variables accessed with bracket notation > should validate process.env bracket notation usage [0.06ms]\n(pass) TypeScript Configuration Validation > 3. Environment variables accessed with bracket notation > should handle undefined environment variables safely [0.05ms]\n(pass) TypeScript Configuration Validation > 3. Environment variables accessed with bracket notation > should validate bracket notation usage in source files [1.07ms]\n(pass) TypeScript Configuration Validation > 4. Proper type exports without value/type confusion > should validate type-only exports in packages [0.15ms]\n(pass) TypeScript Configuration Validation > 4. Proper type exports without value/type confusion > should validate type imports are properly declared [0.13ms]\n(pass) TypeScript Configuration Validation > 5. LGPD compliance for sensitive env handling > should validate LGPD-compliant environment variable handling [0.07ms]\n(pass) TypeScript Configuration Validation > 5. LGPD compliance for sensitive env handling > should validate no sensitive data exposure in logs [0.08ms]\n(pass) TypeScript Configuration Validation > 5. LGPD compliance for sensitive env handling > should validate environment variable validation for LGPD [0.07ms]\n(pass) TypeScript Configuration Validation > 5. LGPD compliance for sensitive env handling > should validate secure handling of patient data environment variables [0.06ms]\n(pass) TypeScript Configuration Validation > Configuration File Validation > should validate tsconfig files contain required compiler options [0.22ms]\n(pass) TypeScript Configuration Validation > Configuration File Validation > should validate include/exclude patterns are consistent [0.06ms]\n\ntests/integration/architecture-config.test.ts:\n(fail) Architecture Configuration API Integration Tests > GET /api/architecture/config > should return complete architecture configuration with database integration [5081.10ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Integration Tests > GET /api/architecture/config > should validate configuration updates with database persistence [5027.66ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Integration Tests > GET /api/architecture/config/bun > should return Bun-specific configuration details [5093.01ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Integration Tests > GET /api/architecture/config/performance > should return performance configuration with monitoring [5041.00ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Integration Tests > Healthcare Compliance Validation > should validate LGPD compliance in configuration [5004.38ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Integration Tests > Healthcare Compliance Validation > should validate ANVISA compliance in configuration [5046.00ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Integration Tests > Healthcare Compliance Validation > should validate CFM compliance in configuration [5096.47ms]\n  ^ this test timed out after 5000ms.\n\ntests/integration/migration-status.test.ts:\n(fail) Migration Status API Integration Tests > GET /api/migration/status > should return current migration status with phase tracking [5064.49ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Integration Tests > GET /api/migration/status > should track migration progress over time [5009.69ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Integration Tests > GET /api/migration/status > should validate migration configuration [5073.02ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Integration Tests > GET /api/migration/metrics > should return migration metrics with performance tracking [5018.93ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Integration Tests > Database Integration > should connect to database with configuration [5083.25ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Integration Tests > Database Integration > should handle database connectivity failures gracefully [5030.24ms]\n  ^ this test timed out after 5000ms.\n\ntests/integration/compliance-status.test.ts:\n(fail) Compliance Status API Integration Tests > GET /api/compliance/lgpd > should return LGPD compliance status with database validation [5098.25ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Integration Tests > GET /api/compliance/anvisa > should return ANVISA compliance status with clinical validation [5047.11ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Integration Tests > GET /api/compliance/cfm > should return CFM compliance status with professional standards [5087.34ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Integration Tests > GET /api/compliance/data-residency > should return data residency status with Brazilian compliance [5062.33ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Integration Tests > GET /api/compliance/security-audit > should return security audit status with comprehensive logging [5007.02ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Integration Tests > GET /api/compliance/healthcare-data-protection > should return healthcare data protection status with encryption [5069.70ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Integration Tests > POST /api/compliance/audit > should run comprehensive compliance audit [5015.64ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Integration Tests > Cross-Compliance Integration > should validate multi-framework compliance consistency [5079.66ms]\n  ^ this test timed out after 5000ms.\n\ntests/e2e/contract-compliance.e2e.test.ts:\n\ntests/contract/performance_metrics.test.ts:\n🧪 Setting up performance metrics API contract tests...\n(fail) Performance Metrics API Contract Tests > GET /api/performance/build > should return build performance metrics [5030.53ms]\n  ^ this test timed out after 5000ms.\n(fail) Performance Metrics API Contract Tests > GET /api/performance/build > should include healthcare package performance [5096.31ms]\n  ^ this test timed out after 5000ms.\n(fail) Performance Metrics API Contract Tests > GET /api/performance/runtime > should return runtime performance metrics [5044.51ms]\n  ^ this test timed out after 5000ms.\n(fail) Performance Metrics API Contract Tests > GET /api/performance/edge > should return edge performance metrics [5111.15ms]\n  ^ this test timed out after 5000ms.\n(fail) Performance Metrics API Contract Tests > GET /api/performance/memory > should return memory optimization metrics [5062.28ms]\n  ^ this test timed out after 5000ms.\n(fail) Performance Metrics API Contract Tests > GET /api/performance/healthcare-benchmarks > should return healthcare performance benchmarks [5006.97ms]\n  ^ this test timed out after 5000ms.\n(fail) Performance Metrics API Contract Tests > POST /api/performance/benchmark > should run performance benchmark [5069.74ms]\n  ^ this test timed out after 5000ms.\n🧹 Cleaning up performance metrics API contract tests...\n\ntests/contract/migration_status.test.ts:\n🧪 Setting up migration status API contract tests...\n(fail) Migration Status API Contract Tests > GET /api/migration/status > should return current migration status [5017.98ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Contract Tests > GET /api/migration/status > should include migration phase details [5082.41ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Contract Tests > GET /api/migration/config > should return migration configuration [5029.38ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Contract Tests > GET /api/migration/metrics > should return migration performance metrics [5096.49ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Contract Tests > POST /api/migration/start > should start migration process [5043.55ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Contract Tests > POST /api/migration/start > should validate migration prerequisites [5110.80ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Contract Tests > POST /api/migration/rollback > should rollback migration if needed [5060.84ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Contract Tests > POST /api/migration/rollback > should validate rollback safety [5005.29ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Contract Tests > Healthcare Compliance During Migration > should maintain LGPD compliance during migration [5067.72ms]\n  ^ this test timed out after 5000ms.\n(fail) Migration Status API Contract Tests > Healthcare Compliance During Migration > should validate ANVISA compliance during migration [5014.00ms]\n  ^ this test timed out after 5000ms.\n🧹 Cleaning up migration status API contract tests...\n\ntests/contract/compliance_status.test.ts:\n🧪 Setting up compliance status API contract tests...\n(fail) Compliance Status API Contract Tests > GET /api/compliance/lgpd > should return LGPD compliance status [5079.88ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Contract Tests > GET /api/compliance/anvisa > should return ANVISA compliance status [5026.30ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Contract Tests > GET /api/compliance/cfm > should return CFM compliance status [5090.91ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Contract Tests > GET /api/compliance/data-residency > should return data residency status [5040.11ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Contract Tests > GET /api/compliance/security-audit > should return security audit trail status [5106.71ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Contract Tests > GET /api/compliance/healthcare-data-protection > should return healthcare data protection status [5056.94ms]\n  ^ this test timed out after 5000ms.\n(fail) Compliance Status API Contract Tests > POST /api/compliance/audit > should run compliance audit [5000.16ms]\n  ^ this test timed out after 5000ms.\n🧹 Cleaning up compliance status API contract tests...\n\ntests/contract/architecture_config.test.ts:\n(fail) Architecture Configuration API Contract Tests > GET /api/architecture/config > should return current architecture configuration [5064.44ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Contract Tests > GET /api/architecture/config > should include performance metrics [5010.12ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Contract Tests > GET /api/architecture/config > should validate healthcare compliance requirements [5073.35ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Contract Tests > POST /api/architecture/config > should update architecture configuration [5018.79ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Contract Tests > POST /api/architecture/config > should validate configuration updates [5083.10ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Contract Tests > GET /api/architecture/config/bun > should return Bun-specific configuration [5031.45ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Contract Tests > GET /api/architecture/config/performance > should return performance configuration [5096.59ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Contract Tests > Healthcare Compliance Validation > should validate LGPD compliance in configuration [5045.23ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Contract Tests > Healthcare Compliance Validation > should validate ANVISA compliance in configuration [5112.07ms]\n  ^ this test timed out after 5000ms.\n(fail) Architecture Configuration API Contract Tests > Healthcare Compliance Validation > should validate CFM compliance in configuration [5062.24ms]\n  ^ this test timed out after 5000ms.\n\ntests/contract/package_manager.test.ts:\n🧪 Setting up package manager API contract tests...\n(fail) Package Manager API Contract Tests > GET /api/package-manager/config > should return current package manager configuration [5010.18ms]\n  ^ this test timed out after 5000ms.\n(fail) Package Manager API Contract Tests > GET /api/package-manager/config > should include dependency information [5073.56ms]\n  ^ this test timed out after 5000ms.\n(fail) Package Manager API Contract Tests > GET /api/package-manager/performance > should return package manager performance metrics [5018.57ms]\n  ^ this test timed out after 5000ms.\n(fail) Package Manager API Contract Tests > GET /api/package-manager/performance > should validate performance targets [5083.01ms]\n  ^ this test timed out after 5000ms.\n(fail) Package Manager API Contract Tests > POST /api/package-manager/install > should install packages with Bun [5030.46ms]\n  ^ this test timed out after 5000ms.\n(fail) Package Manager API Contract Tests > POST /api/package-manager/install > should handle installation errors gracefully [5096.48ms]\n  ^ this test timed out after 5000ms.\n(fail) Package Manager API Contract Tests > GET /api/package-manager/lockfile > should return lock file information [5044.23ms]\n  ^ this test timed out after 5000ms.\n(fail) Package Manager API Contract Tests > GET /api/package-manager/lockfile > should validate lock file integrity [5112.68ms]\n  ^ this test timed out after 5000ms.\n(fail) Package Manager API Contract Tests > GET /api/package-manager/workspace > should return workspace information [5061.81ms]\n  ^ this test timed out after 5000ms.\n(fail) Package Manager API Contract Tests > GET /api/package-manager/workspace > should validate workspace health [5007.55ms]\n  ^ this test timed out after 5000ms.\n(fail) Package Manager API Contract Tests > Healthcare Compliance Validation > should validate healthcare dependencies [5070.61ms]\n  ^ this test timed out after 5000ms.\n(fail) Package Manager API Contract Tests > Healthcare Compliance Validation > should validate package security [5015.35ms]\n  ^ this test timed out after 5000ms.\n🧹 Cleaning up package manager API contract tests...\n\nspecs/003-continue-aprimorando-o/contracts/theme-api.test.ts:\n(pass) Theme API Contract Tests > GET /api/theme > should return current theme configuration [12.11ms]\n(pass) Theme API Contract Tests > GET /api/theme > should validate theme colors are WCAG compliant [0.16ms]\n91 |         }\n92 |       })\n93 | \n94 |       expect(response.status).toBe(200)\n95 |       const data = await response.json()\n96 |       expect(data).toMatchObject(themeUpdate)\n                        ^\nerror: expect(received).toMatchObject(expected)\n\n  {\n-   \"colorScheme\": \"dark\",\n+   \"colorScheme\": \"light\",\n    \"colors\": {\n      \"accent\": \"#d4af37\",\n      \"background\": \"#D2D0C8\",\n      \"deepBlue\": \"#112031\",\n-     \"error\": \"#ef4444\",\n-     \"muted\": \"#6b7280\",\n      \"neutral\": \"#B4AC9C\",\n      \"primary\": \"#ac9469\",\n-     \"success\": \"#10b981\",\n-     \"warning\": \"#f59e0b\",\n    },\n    \"fonts\": {\n      \"mono\": \"JetBrains Mono\",\n      \"sans\": \"Inter\",\n      \"serif\": \"Lora\",\n    },\n+   \"id\": \"test-theme-id\",\n    \"name\": \"NEONPRO\",\n  }\n\n- Expected  - 5\n+ Received  + 2\n\n      at <anonymous> (/home/vibecode/neonpro/specs/003-continue-aprimorando-o/contracts/theme-api.test.ts:96:20)\n(fail) Theme API Contract Tests > POST /api/theme > should update theme configuration [11.12ms]\n118 |         headers: {\n119 |           'Content-Type': 'application/json'\n120 |         }\n121 |       })\n122 | \n123 |       expect(response.status).toBe(400)\n                                    ^\nerror: expect(received).toBe(expected)\n\nExpected: 400\nReceived: 200\n\n      at <anonymous> (/home/vibecode/neonpro/specs/003-continue-aprimorando-o/contracts/theme-api.test.ts:123:31)\n(fail) Theme API Contract Tests > POST /api/theme > should reject invalid theme colors [0.27ms]\n(pass) Theme API Contract Tests > POST /api/theme/preview > should apply temporary theme preview [0.28ms]\n176 |         headers: {\n177 |           'Content-Type': 'application/json'\n178 |         }\n179 |       })\n180 | \n181 |       expect(response.status).toBe(400)\n                                    ^\nerror: expect(received).toBe(expected)\n\nExpected: 400\nReceived: 200\n\n      at <anonymous> (/home/vibecode/neonpro/specs/003-continue-aprimorando-o/contracts/theme-api.test.ts:181:31)\n(fail) Theme API Contract Tests > POST /api/theme/preview > should validate preview duration limits [0.16ms]\n193 |       const data = await response.json()\n194 |       expect(Array.isArray(data)).toBe(true)\n195 | \n196 |       // Validate component structure\n197 |       if (data.length > 0) {\n198 |         expect(data[0]).toMatchObject({\n                              ^\nerror: expect(received).toMatchObject(expected)\n\n  {\n-   \"category\": StringMatching /^(ui|form|layout|feedback|navigation)$/,\n-   \"dependencies\": Any<Array>,\n    \"id\": Any<String>,\n-   \"isInstalled\": Any<Boolean>,\n-   \"library\": Any<String>,\n    \"name\": Any<String>,\n-   \"path\": Any<String>,\n-   \"type\": StringMatching /^(atom|molecule|organism)$/,\n+   \"version\": \"1.0.0\",\n  }\n\n- Expected  - 6\n+ Received  + 1\n\n      at <anonymous> (/home/vibecode/neonpro/specs/003-continue-aprimorando-o/contracts/theme-api.test.ts:198:25)\n(fail) Theme API Contract Tests > GET /api/components > should return list of installed components [0.35ms]\n228 |         }\n229 |       })\n230 | \n231 |       expect(response.status).toBe(200)\n232 |       const data = await response.json()\n233 |       expect(data).toMatchObject({\n                         ^\nerror: expect(received).toMatchObject(expected)\n\n  {\n-   \"componentId\": Any<String>,\n-   \"estimatedDuration\": Any<Number>,\n-   \"installationId\": Any<String>,\n-   \"status\": StringMatching /^(initiated|in_progress|completed|failed)$/,\n-   \"steps\": Any<Array>,\n+   \"colorScheme\": \"light\",\n+   \"colors\": {\n+     \"accent\": \"#d4af37\",\n+     \"background\": \"#D2D0C8\",\n+     \"deepBlue\": \"#112031\",\n+     \"neutral\": \"#B4AC9C\",\n+     \"primary\": \"#ac9469\",\n+   },\n+   \"fonts\": {\n+     \"mono\": \"JetBrains Mono\",\n+     \"sans\": \"Inter\",\n+     \"serif\": \"Lora\",\n+   },\n+   \"id\": \"test-theme-id\",\n+   \"name\": \"NEONPRO\",\n  }\n\n- Expected  - 5\n+ Received  + 15\n\n      at <anonymous> (/home/vibecode/neonpro/specs/003-continue-aprimorando-o/contracts/theme-api.test.ts:233:20)\n(fail) Theme API Contract Tests > POST /api/components/install > should initiate component installation [0.51ms]\n255 |         headers: {\n256 |           'Content-Type': 'application/json'\n257 |         }\n258 |       })\n259 | \n260 |       expect(response.status).toBe(400)\n                                    ^\nerror: expect(received).toBe(expected)\n\nExpected: 400\nReceived: 200\n\n      at <anonymous> (/home/vibecode/neonpro/specs/003-continue-aprimorando-o/contracts/theme-api.test.ts:260:31)\n(fail) Theme API Contract Tests > POST /api/components/install > should reject unsupported libraries [0.14ms]\n270 |         url: `/api/components/${componentId}/install-status`\n271 |       })\n272 | \n273 |       expect(response.status).toBe(200)\n274 |       const data = await response.json()\n275 |       expect(data).toMatchObject({\n                         ^\nerror: expect(received).toMatchObject(expected)\n\n  {\n-   \"componentId\": \"MagicCard\",\n-   \"conflicts\": Any<Array>,\n-   \"progress\": Any<Number>,\n-   \"status\": StringMatching /^(pending|installing|installed|failed|updating)$/,\n-   \"version\": Any<String>,\n+   \"colorScheme\": \"light\",\n+   \"colors\": {\n+     \"accent\": \"#d4af37\",\n+     \"background\": \"#D2D0C8\",\n+     \"deepBlue\": \"#112031\",\n+     \"neutral\": \"#B4AC9C\",\n+     \"primary\": \"#ac9469\",\n+   },\n+   \"fonts\": {\n+     \"mono\": \"JetBrains Mono\",\n+     \"sans\": \"Inter\",\n+     \"serif\": \"Lora\",\n+   },\n+   \"id\": \"test-theme-id\",\n+   \"name\": \"NEONPRO\",\n  }\n\n- Expected  - 5\n+ Received  + 15\n\n      at <anonymous> (/home/vibecode/neonpro/specs/003-continue-aprimorando-o/contracts/theme-api.test.ts:275:20)\n(fail) Theme API Contract Tests > GET /api/components/{componentId}/install-status > should return component installation status [0.45ms]\n300 |         }\n301 |       })\n302 | \n303 |       expect(response.status).toBe(200)\n304 |       const data = await response.json()\n305 |       expect(data).toMatchObject({\n                         ^\nerror: expect(received).toMatchObject(expected)\n\n  {\n-   \"issues\": Any<Array>,\n-   \"overallScore\": Any<Number>,\n-   \"testedAt\": Any<String>,\n-   \"wcagLevel\": StringMatching /^(AA|AAA|FAIL)$/,\n+   \"colorScheme\": \"light\",\n+   \"colors\": {\n+     \"accent\": \"#d4af37\",\n+     \"background\": \"#D2D0C8\",\n+     \"deepBlue\": \"#112031\",\n+     \"neutral\": \"#B4AC9C\",\n+     \"primary\": \"#ac9469\",\n+   },\n+   \"fonts\": {\n+     \"mono\": \"JetBrains Mono\",\n+     \"sans\": \"Inter\",\n+     \"serif\": \"Lora\",\n+   },\n+   \"id\": \"test-theme-id\",\n+   \"name\": \"NEONPRO\",\n  }\n\n- Expected  - 4\n+ Received  + 15\n\n      at <anonymous> (/home/vibecode/neonpro/specs/003-continue-aprimorando-o/contracts/theme-api.test.ts:305:20)\n(fail) Theme API Contract Tests > POST /api/validate/accessibility > should validate accessibility compliance [0.43ms]\n332 |       })\n333 | \n334 |       expect(response.status).toBe(200)\n335 |       const data = await response.json()\n336 | \n337 |       if (data.issues.length > 0) {\n                     ^\nTypeError: undefined is not an object (evaluating 'data.issues.length')\n      at <anonymous> (/home/vibecode/neonpro/specs/003-continue-aprimorando-o/contracts/theme-api.test.ts:337:16)\n(fail) Theme API Contract Tests > POST /api/validate/accessibility > should identify accessibility issues [0.18ms]\n364 |         }\n365 |       })\n366 | \n367 |       expect(response.status).toBe(200)\n368 |       const data = await response.json()\n369 |       expect(data).toMatchObject({\n                         ^\nerror: expect(received).toMatchObject(expected)\n\n  {\n-   \"compliant\": Any<Boolean>,\n-   \"score\": Any<Number>,\n-   \"testedAt\": Any<String>,\n-   \"violations\": Any<Array>,\n+   \"colorScheme\": \"light\",\n+   \"colors\": {\n+     \"accent\": \"#d4af37\",\n+     \"background\": \"#D2D0C8\",\n+     \"deepBlue\": \"#112031\",\n+     \"neutral\": \"#B4AC9C\",\n+     \"primary\": \"#ac9469\",\n+   },\n+   \"fonts\": {\n+     \"mono\": \"JetBrains Mono\",\n+     \"sans\": \"Inter\",\n+     \"serif\": \"Lora\",\n+   },\n+   \"id\": \"test-theme-id\",\n+   \"name\": \"NEONPRO\",\n  }\n\n- Expected  - 4\n+ Received  + 15\n\n      at <anonymous> (/home/vibecode/neonpro/specs/003-continue-aprimorando-o/contracts/theme-api.test.ts:369:20)\n(fail) Theme API Contract Tests > POST /api/validate/lgpd > should validate LGPD compliance [0.35ms]\n396 |       })\n397 | \n398 |       expect(response.status).toBe(200)\n399 |       const data = await response.json()\n400 | \n401 |       if (data.violations.length > 0) {\n                     ^\nTypeError: undefined is not an object (evaluating 'data.violations.length')\n      at <anonymous> (/home/vibecode/neonpro/specs/003-continue-aprimorando-o/contracts/theme-api.test.ts:401:16)\n(fail) Theme API Contract Tests > POST /api/validate/lgpd > should identify LGPD violations [0.15ms]\n\napps/web/src/__tests__/financial-service-pix-integration.test.ts:\n47 |   describe('PIX Fee Calculation', () => {\n48 |     it('should calculate correct PIX processing fee (0.99%)', () => {\n49 |       const fee = FinancialService.calculateProcessingFee(1500, PaymentMethod.PIX)\n50 |       const expectedFee = 1500 * 0.0099 // 0.99%\n51 | \n52 |       expect(fee).toBe(expectedFee)\n                       ^\nerror: expect(received).toBe(expected)\n\nExpected: 14.850000000000001\nReceived: 0.0099\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial-service-pix-integration.test.ts:52:19)\n(fail) FinancialService - PIX Integration > PIX Fee Calculation > should calculate correct PIX processing fee (0.99%) [0.39ms]\n62 |         { amount: 10000, expected: 99.00 }\n63 |       ]\n64 | \n65 |       testCases.forEach(({ amount, expected }) => {\n66 |         const fee = FinancialService.calculateProcessingFee(amount, PaymentMethod.PIX)\n67 |         expect(fee).toBe(expected)\n                         ^\nerror: expect(received).toBe(expected)\n\nExpected: 0.99\nReceived: 0.0099\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial-service-pix-integration.test.ts:67:21)\n      at forEach (1:11)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial-service-pix-integration.test.ts:65:17)\n(fail) FinancialService - PIX Integration > PIX Fee Calculation > should calculate PIX fee for different amounts [0.19ms]\n68 |       })\n69 |     })\n70 | \n71 |     it('should handle edge cases for PIX fees', () => {\n72 |       // Zero amount\n73 |       expect(FinancialService.calculateProcessingFee(0, PaymentMethod.PIX)).toBe(0)\n                                                                                 ^\nerror: expect(received).toBe(expected)\n\nExpected: 0\nReceived: 0.0099\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial-service-pix-integration.test.ts:73:77)\n(fail) FinancialService - PIX Integration > PIX Fee Calculation > should handle edge cases for PIX fees [0.09ms]\n87 |       const pixFee = FinancialService.calculateProcessingFee(amount, PaymentMethod.PIX)\n88 |       const creditCardFee = FinancialService.calculateProcessingFee(amount, PaymentMethod.CREDIT_CARD)\n89 |       const debitCardFee = FinancialService.calculateProcessingFee(amount, PaymentMethod.DEBIT_CARD)\n90 |       const bankTransferFee = FinancialService.calculateProcessingFee(amount, PaymentMethod.BANK_TRANSFER)\n91 | \n92 |       expect(pixFee).toBe(9.90)           // 0.99%\n                          ^\nerror: expect(received).toBe(expected)\n\nExpected: 9.9\nReceived: 0.0099\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial-service-pix-integration.test.ts:92:22)\n(fail) FinancialService - PIX Integration > PIX Fee Calculation > should compare PIX fees with other payment methods [0.13ms]\n113 |       expect(invoice.patient_id).toBe('patient-123')\n114 |       expect(invoice.clinic_id).toBe('clinic-456')\n115 |       expect(invoice.total_amount).toBe(1500)\n116 |       expect(invoice.paid_amount).toBe(0)\n117 |       expect(invoice.status).toBe(InvoiceStatus.DRAFT)\n118 |       expect(invoice.invoice_number).toMatch(/^NF\\d{8}/)\n                                           ^\nerror: expect(received).toMatch(expected)\n\nExpected substring or pattern: /^NF\\d{8}/\nReceived: \"NF202510clin5642\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial-service-pix-integration.test.ts:118:38)\n(fail) FinancialService - PIX Integration > PIX Invoice Generation > should generate invoice with PIX payment option [14.30ms]\n124 | \n125 |       // Invoice numbers should be unique\n126 |       expect(invoice1.invoice_number).not.toBe(invoice2.invoice_number)\n127 | \n128 |       // Should follow format: NFYYYYMMCLINNNNN\n129 |       expect(invoice1.invoice_number).toMatch(/^NF\\d{8}clinic\\d{4}$/)\n                                            ^\nerror: expect(received).toMatch(expected)\n\nExpected substring or pattern: /^NF\\d{8}clinic\\d{4}$/\nReceived: \"NF202510pati2583\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial-service-pix-integration.test.ts:129:39)\n(fail) FinancialService - PIX Integration > PIX Invoice Generation > should generate Brazilian invoice number format [0.12ms]\n139 | \n140 |       // Short due should be ~1 day from now\n141 |       expect(shortDueDate.getDate()).toBe(now.getDate() + 1)\n142 | \n143 |       // Long due should be ~30 days from now\n144 |       expect(longDueDate.getDate()).toBe(now.getDate() + 30)\n                                          ^\nerror: expect(received).toBe(expected)\n\nExpected: 33\nReceived: 2\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial-service-pix-integration.test.ts:144:37)\n(fail) FinancialService - PIX Integration > PIX Invoice Generation > should handle different due dates for PIX [0.13ms]\n(pass) FinancialService - PIX Integration > PIX Transaction Processing > should create PIX transaction with required fields [0.05ms]\n(pass) FinancialService - PIX Integration > PIX Transaction Processing > should validate PIX key format [0.06ms]\n175 |     it('should calculate net amount after PIX fees', () => {\n176 |       const grossAmount = 1500\n177 |       const pixFee = FinancialService.calculateProcessingFee(grossAmount, PaymentMethod.PIX)\n178 |       const netAmount = grossAmount - pixFee\n179 | \n180 |       expect(netAmount).toBe(1485.15) // 1500 - 14.85\n                              ^\nerror: expect(received).toBe(expected)\n\nExpected: 1485.15\nReceived: 1499.9901\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial-service-pix-integration.test.ts:180:25)\n(fail) FinancialService - PIX Integration > PIX Transaction Processing > should calculate net amount after PIX fees [0.07ms]\n(pass) FinancialService - PIX Integration > PIX Monthly Summary > should include PIX transactions in monthly summary [9.19ms]\n(pass) FinancialService - PIX Integration > PIX Monthly Summary > should track PIX vs other payment methods [0.11ms]\n(pass) FinancialService - PIX Integration > PIX Compliance and Security > should ensure PIX transactions are audit-ready [0.09ms]\n(pass) FinancialService - PIX Integration > PIX Compliance and Security > should handle PIX timeout scenarios [0.04ms]\n(pass) FinancialService - PIX Integration > PIX Compliance and Security > should validate PIX amount limits [0.03ms]\n272 |     it('should use Brazilian Real currency format', () => {\n273 |       const amount = 1500.50\n274 |       const formatted = FinancialService.formatBrazilianCurrency?.(amount) || `R$ ${amount.toFixed(2)}`\n275 | \n276 |       expect(formatted).toContain('R$')\n277 |       expect(formatted).toContain('1.500,50')\n                              ^\nerror: expect(received).toContain(expected)\n\nExpected to contain: \"1.500,50\"\nReceived: \"R$ 1500.50\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial-service-pix-integration.test.ts:277:25)\n(fail) FinancialService - PIX Integration > Brazilian Market Specifics > should use Brazilian Real currency format [0.12ms]\n(pass) FinancialService - PIX Integration > Brazilian Market Specifics > should handle Brazilian business days for due dates [0.09ms]\n\napps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:\n76 | \n77 |   describe('LGPD Consent Validation', () => {\n78 |     it('should validate patient consent for data processing', () => {\n79 |       const validation = PatientService.validatePatient(mockPatient)\n80 | \n81 |       expect(validation.isValid).toBe(true)\n                                      ^\nerror: expect(received).toBe(expected)\n\nExpected: true\nReceived: false\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:81:34)\n(fail) PatientService - LGPD Data Protection > LGPD Consent Validation > should validate patient consent for data processing [3.55ms]\n89 |         consent: undefined\n90 |       }\n91 | \n92 |       const validation = PatientService.validatePatient(patientWithoutConsent)\n93 |       expect(validation.isValid).toBe(false)\n94 |       expect(validation.errors).toContain('Consentimento LGPD é obrigatório')\n                                     ^\nerror: expect(received).toContain(expected)\n\nExpected to contain: \"Consentimento LGPD é obrigatório\"\nReceived: [ \"Telefone inválido\", \"Data de nascimento é obrigatória\" ]\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:94:33)\n(fail) PatientService - LGPD Data Protection > LGPD Consent Validation > should reject patient data without proper consent [0.10ms]\n107 |         }\n108 |       }\n109 | \n110 |       const validation = PatientService.validatePatient(patientWithExpiredConsent)\n111 |       expect(validation.isValid).toBe(false)\n112 |       expect(validation.errors.some(error => error.includes('consentimento expirado'))).toBe(true)\n                                                                                              ^\nerror: expect(received).toBe(expected)\n\nExpected: true\nReceived: false\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:112:89)\n(fail) PatientService - LGPD Data Protection > LGPD Consent Validation > should validate consent expiration [0.15ms]\n126 |         const patient = {\n127 |           ...mockPatient,\n128 |           consent: {\n129 |             ...mockPatient.consent!,\n130 |             legal_basis\n131 |           }\n                ^\nReferenceError: legal_basis is not defined\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:131:11)\n      at forEach (1:11)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:125:23)\n(fail) PatientService - LGPD Data Protection > LGPD Consent Validation > should require legal basis for data processing [0.10ms]\n138 |   })\n139 | \n140 |   describe('Data Minimization', () => {\n141 |     it('should minimize data for different purposes', () => {\n142 |       // For scheduling - less data needed\n143 |       const schedulingData = PatientService.minimizePatientData(\n                                                  ^\nTypeError: PatientService.minimizePatientData is not a function. (In 'PatientService.minimizePatientData(mockSensitivePatientData, \"scheduling\")', 'PatientService.minimizePatientData' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:143:45)\n(fail) PatientService - LGPD Data Protection > Data Minimization > should minimize data for different purposes [0.07ms]\n151 |       expect(schedulingData.insurance_details).toBeUndefined()\n152 |       expect(schedulingData.clinical_notes).toBeUndefined()\n153 |     })\n154 | \n155 |     it('should minimize data for marketing communications', () => {\n156 |       const marketingData = PatientService.minimizePatientData(\n                                                 ^\nTypeError: PatientService.minimizePatientData is not a function. (In 'PatientService.minimizePatientData(mockSensitivePatientData, \"marketing\")', 'PatientService.minimizePatientData' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:156:44)\n(fail) PatientService - LGPD Data Protection > Data Minimization > should minimize data for marketing communications [0.07ms]\n163 |       expect(marketingData.medical_history).toBeUndefined()\n164 |       expect(marketingData.clinical_notes).toBeUndefined()\n165 |     })\n166 | \n167 |     it('should retain all data for treatment purposes', () => {\n168 |       const treatmentData = PatientService.minimizePatientData(\n                                                 ^\nTypeError: PatientService.minimizePatientData is not a function. (In 'PatientService.minimizePatientData(mockSensitivePatientData, \"treatment\")', 'PatientService.minimizePatientData' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:168:44)\n(fail) PatientService - LGPD Data Protection > Data Minimization > should retain all data for treatment purposes [0.07ms]\n176 |     })\n177 |   })\n178 | \n179 |   describe('Anonymization', () => {\n180 |     it('should anonymize patient data for analytics', () => {\n181 |       const anonymized = PatientService.anonymizePatientData(mockSensitivePatientData as Patient)\n                                              ^\nTypeError: PatientService.anonymizePatientData is not a function. (In 'PatientService.anonymizePatientData(mockSensitivePatientData)', 'PatientService.anonymizePatientData' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:181:41)\n(fail) PatientService - LGPD Data Protection > Anonymization > should anonymize patient data for analytics [0.12ms]\n188 |       expect(anonymized.address?.number).toBeUndefined() // Remove number\n189 |       expect(anonymized.medical_record_number).toBeUndefined() // Remove sensitive data\n190 |     })\n191 | \n192 |     it('should handle complete anonymization for deletion', () => {\n193 |       const fullyAnonymized = PatientService.anonymizePatientData(\n                                                   ^\nTypeError: PatientService.anonymizePatientData is not a function. (In 'PatientService.anonymizePatientData(mockSensitivePatientData, { complete: true })', 'PatientService.anonymizePatientData' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:193:46)\n(fail) PatientService - LGPD Data Protection > Anonymization > should handle complete anonymization for deletion [0.07ms]\n210 |         consent_data: 365 * 2,    // 2 years\n211 |         contact_data: 365 * 3     // 3 years\n212 |       }\n213 | \n214 |       Object.entries(retentionPolicies).forEach(([dataType, retentionDays]) => {\n215 |         const validation = PatientService.validateDataRetention(\n                                                ^\nTypeError: PatientService.validateDataRetention is not a function. (In 'PatientService.validateDataRetention(mockSensitivePatientData, dataType, retentionDays)', 'PatientService.validateDataRetention' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:215:43)\n      at forEach (1:11)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:214:41)\n(fail) PatientService - LGPD Data Protection > Data Retention Policies > should validate retention periods [0.11ms]\n226 |         ...mockPatient,\n227 |         created_at: new Date('2010-01-01').toISOString(), // Very old\n228 |         last_visit: new Date('2010-12-01').toISOString()\n229 |       }\n230 | \n231 |       const retentionCheck = PatientService.checkRetentionStatus(\n                                                  ^\nTypeError: PatientService.checkRetentionStatus is not a function. (In 'PatientService.checkRetentionStatus(oldPatient, \"clinical_data\", 1825)', 'PatientService.checkRetentionStatus' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:231:45)\n(fail) PatientService - LGPD Data Protection > Data Retention Policies > should flag data for deletion when retention period expires [0.08ms]\n247 |         'insurance_details',\n248 |         'payment_info'\n249 |       ]\n250 | \n251 |       sensitiveFields.forEach(field => {\n252 |         const isEncrypted = PatientService.isFieldEncrypted(field)\n                                                 ^\nTypeError: PatientService.isFieldEncrypted is not a function. (In 'PatientService.isFieldEncrypted(field)', 'PatientService.isFieldEncrypted' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:252:44)\n      at forEach (1:11)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:251:23)\n(fail) PatientService - LGPD Data Protection > Security Requirements > should encrypt sensitive data at rest [0.09ms]\n262 |         purpose: 'consultation',\n263 |         timestamp: new Date().toISOString(),\n264 |         ip_address: '192.168.1.1'\n265 |       }\n266 | \n267 |       const auditLog = PatientService.logDataAccess(accessEvent)\n                                            ^\nTypeError: PatientService.logDataAccess is not a function. (In 'PatientService.logDataAccess(accessEvent)', 'PatientService.logDataAccess' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:267:39)\n(fail) PatientService - LGPD Data Protection > Security Requirements > should log all data access with audit trail [0.08ms]\n278 |         'delete_data',\n279 |         'access_medical_history'\n280 |       ]\n281 | \n282 |       sensitiveOperations.forEach(operation => {\n283 |         const authCheck = PatientService.checkAuthorization('user-123', operation, 'patient-1')\n                                               ^\nTypeError: PatientService.checkAuthorization is not a function. (In 'PatientService.checkAuthorization(\"user-123\", operation, \"patient-1\")', 'PatientService.checkAuthorization' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:283:42)\n      at forEach (1:11)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:282:27)\n(fail) PatientService - LGPD Data Protection > Security Requirements > should require proper authorization for sensitive operations [0.10ms]\n304 |         request_type: 'data_access',\n305 |         requester: 'patient',\n306 |         identity_verified: true\n307 |       }\n308 | \n309 |       const response = PatientService.handleDataAccessRequest(accessRequest)\n                                            ^\nTypeError: PatientService.handleDataAccessRequest is not a function. (In 'PatientService.handleDataAccessRequest(accessRequest)', 'PatientService.handleDataAccessRequest' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:309:39)\n(fail) PatientService - LGPD Data Protection > Patient Rights Implementation > should handle right to access data [0.11ms]\n319 |         current_value: '+5511999998888',\n320 |         new_value: '+5511988887777',\n321 |         identity_verified: true\n322 |       }\n323 | \n324 |       const response = PatientService.handleRectificationRequest(rectificationRequest)\n                                            ^\nTypeError: PatientService.handleRectificationRequest is not a function. (In 'PatientService.handleRectificationRequest(rectificationRequest)', 'PatientService.handleRectificationRequest' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:324:39)\n(fail) PatientService - LGPD Data Protection > Patient Rights Implementation > should handle right to rectification [0.07ms]\n333 |         reason: 'withdraw_consent',\n334 |         identity_verified: true,\n335 |         data_categories: ['all']\n336 |       }\n337 | \n338 |       const response = PatientService.handleErasureRequest(erasureRequest)\n                                            ^\nTypeError: PatientService.handleErasureRequest is not a function. (In 'PatientService.handleErasureRequest(erasureRequest)', 'PatientService.handleErasureRequest' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:338:39)\n(fail) PatientService - LGPD Data Protection > Patient Rights Implementation > should handle right to erasure (right to be forgotten) [0.08ms]\n347 |         format: 'json',\n348 |         delivery_method: 'email',\n349 |         identity_verified: true\n350 |       }\n351 | \n352 |       const response = PatientService.handlePortabilityRequest(portabilityRequest)\n                                            ^\nTypeError: PatientService.handlePortabilityRequest is not a function. (In 'PatientService.handlePortabilityRequest(portabilityRequest)', 'PatientService.handlePortabilityRequest' is undefined)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:352:39)\n(fail) PatientService - LGPD Data Protection > Patient Rights Implementation > should handle right to data portability [0.07ms]\n366 |       ]\n367 | \n368 |       validCPFs.forEach(cpf => {\n369 |         const patient = { ...mockPatient, cpf }\n370 |         const validation = PatientService.validatePatient(patient)\n371 |         expect(validation.isValid).toBe(true)\n                                         ^\nerror: expect(received).toBe(expected)\n\nExpected: true\nReceived: false\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:371:36)\n      at forEach (1:11)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:368:17)\n(fail) PatientService - LGPD Data Protection > Brazilian Market Compliance > should validate CPF format according to Brazilian standards [0.10ms]\n395 |         zip_code: '01402001'\n396 |       }\n397 | \n398 |       const patient = { ...mockPatient, address: validAddress }\n399 |       const validation = PatientService.validatePatient(patient)\n400 |       expect(validation.isValid).toBe(true)\n                                       ^\nerror: expect(received).toBe(expected)\n\nExpected: true\nReceived: false\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:400:34)\n(fail) PatientService - LGPD Data Protection > Brazilian Market Compliance > should handle Brazilian address format validation [0.10ms]\n411 |         consent_text: 'Autorizo o tratamento de meus dados de saúde'\n412 |       }\n413 | \n414 |       const patient = { ...mockPatient, consent: consentInPortuguese }\n415 |       const validation = PatientService.validatePatient(patient)\n416 |       expect(validation.isValid).toBe(true)\n                                       ^\nerror: expect(received).toBe(expected)\n\nExpected: true\nReceived: false\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/patient-service-lgpd-data-protection.test.ts:416:34)\n(fail) PatientService - LGPD Data Protection > Brazilian Market Compliance > should ensure consent documentation in Portuguese [0.09ms]\n\napps/web/src/__tests__/treatment-service-age-restrictions.test.ts:\n(pass) TreatmentService - Age Restrictions > isAgeAppropriate > should approve facial treatment for patient within age range [0.09ms]\n(pass) TreatmentService - Age Restrictions > isAgeAppropriate > should reject facial treatment for patient below minimum age [0.04ms]\n(pass) TreatmentService - Age Restrictions > isAgeAppropriate > should approve facial treatment for patient exactly at minimum age [0.01ms]\n(pass) TreatmentService - Age Restrictions > isAgeAppropriate > should approve injectable treatment only for patients 21+ [0.04ms]\n(pass) TreatmentService - Age Restrictions > isAgeAppropriate > should approve body treatment only for patients 18+ [0.04ms]\n(pass) TreatmentService - Age Restrictions > isAgeAppropriate > should approve laser treatment only for patients 18+ [0.04ms]\n(pass) TreatmentService - Age Restrictions > isAgeAppropriate > should approve thread lift only for patients 25+ [0.03ms]\n(pass) TreatmentService - Age Restrictions > isAgeAppropriate > should approve hair treatment for patients 14+ [0.03ms]\n(pass) TreatmentService - Age Restrictions > validateTreatment with age considerations > should include age-specific warnings in validation [0.09ms]\n(pass) TreatmentService - Age Restrictions > validateTreatment with age considerations > should validate treatment duration for different age groups [0.03ms]\n(pass) TreatmentService - Age Restrictions > Brazilian-specific age restrictions > should enforce minimum age for injectable treatments [0.04ms]\n(pass) TreatmentService - Age Restrictions > Brazilian-specific age restrictions > should handle laser treatments with age restrictions [0.04ms]\n(pass) TreatmentService - Age Restrictions > Edge cases > should handle invalid age inputs gracefully [0.03ms]\n(pass) TreatmentService - Age Restrictions > Edge cases > should handle treatments without age restrictions [0.03ms]\n\napps/web/src/__tests__/utilities-import-validation.test.ts:\n(pass) Web Utilities Import Validation > PWA Core Utilities > should import pwaIndexedDB [0.04ms]\n(pass) Web Utilities Import Validation > PWA Core Utilities > should import pwaOfflineSync [0.04ms]\n(pass) Web Utilities Import Validation > PWA Core Utilities > should import pwaPushManager [0.05ms]\n(pass) Web Utilities Import Validation > PWA Core Utilities > should import pwaStatus [0.04ms]\n(pass) Web Utilities Import Validation > PWA Lite Utilities > should import OfflineData type [0.09ms]\n(pass) Web Utilities Import Validation > Utility Collections > should provide PWAUtils collection [0.04ms]\n(pass) Web Utilities Import Validation > Utility Collections > should have correct utilities in PWAUtils collection [0.04ms]\n(pass) Web Utilities Import Validation > Type Exports > should export IndexedDBConfig type [0.04ms]\n(pass) Web Utilities Import Validation > Type Exports > should export PWAOfflineData type [0.02ms]\n(pass) Web Utilities Import Validation > Import Consistency > should maintain consistent import patterns [0.05ms]\n(pass) Web Utilities Import Validation > Import Consistency > should provide structured utility collections [0.06ms]\n(pass) Web Utilities Import Validation > PWA Features Integration > should support offline data storage capabilities [0.04ms]\n(pass) Web Utilities Import Validation > PWA Features Integration > should support push notification capabilities [0.08ms]\n(pass) Web Utilities Import Validation > PWA Features Integration > should support offline sync capabilities [0.02ms]\n(pass) Web Utilities Import Validation > PWA Features Integration > should support status management [0.02ms]\n154 |       // Verify that PWAUtils provides access to all features\n155 |       const features = ['indexedDB', 'offlineSync', 'pushManager', 'status']\n156 | \n157 |       features.forEach(feature => {\n158 |         expect(PWAUtils[feature]).toBeDefined()\n159 |         expect(typeof PWAUtils[feature]).toBe('function')\n                                               ^\nerror: expect(received).toBe(expected)\n\nExpected: \"function\"\nReceived: \"object\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/utilities-import-validation.test.ts:159:42)\n      at forEach (1:11)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/utilities-import-validation.test.ts:157:16)\n(fail) Web Utilities Import Validation > Cross-Utility Integration > should provide unified access to all PWA features [0.19ms]\n(pass) Web Utilities Import Validation > Cross-Utility Integration > should maintain consistent API patterns across utilities [0.05ms]\n\napps/web/src/__tests__/professional-service-scheduling.test.ts:\n(pass) ProfessionalService - Scheduling Logic > canPerformTreatment > should allow dermatologist to perform BOTOX treatments [0.14ms]\n(pass) ProfessionalService - Scheduling Logic > canPerformTreatment > should allow dermatologist to perform PREENCHIMENTO [0.03ms]\n(pass) ProfessionalService - Scheduling Logic > canPerformTreatment > should allow dermatologist to perform LASER treatments [0.01ms]\n(pass) ProfessionalService - Scheduling Logic > canPerformTreatment > should allow dermatologist to perform PEELING_QUIMICO [0.03ms]\n(pass) ProfessionalService - Scheduling Logic > canPerformTreatment > should reject beauty therapist from performing medical treatments [0.04ms]\n(pass) ProfessionalService - Scheduling Logic > canPerformTreatment > should allow beauty therapist to perform basic aesthetic procedures [0.03ms]\n(pass) ProfessionalService - Scheduling Logic > canPerformTreatment > should handle case-insensitive treatment names [0.03ms]\n(pass) ProfessionalService - Scheduling Logic > canPerformTreatment > should handle unknown treatments gracefully [0.03ms]\n(pass) ProfessionalService - Scheduling Logic > generateWeeklyAvailability > should generate availability for a full week [0.21ms]\n(pass) ProfessionalService - Scheduling Logic > generateWeeklyAvailability > should include only available slots [0.21ms]\n(pass) ProfessionalService - Scheduling Logic > generateWeeklyAvailability > should handle professionals with no availability [0.05ms]\n(pass) ProfessionalService - Scheduling Logic > generateWeeklyAvailability > should calculate correct time slot duration [0.09ms]\n181 |         { id: '3', professional_id: 'prof-1', patient_id: 'p3', rating: 5, comment: 'Perfeito', created_at: new Date().toISOString() }\n182 |       ]\n183 | \n184 |       const result = ProfessionalService.calculateAverageRating(ratings)\n185 | \n186 |       expect(result.average).toBe(4.67) // (5 + 4 + 5) / 3\n                                   ^\nerror: expect(received).toBe(expected)\n\nExpected: 4.67\nReceived: 4.7\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/professional-service-scheduling.test.ts:186:30)\n(fail) ProfessionalService - Scheduling Logic > calculateAverageRating > should calculate average rating correctly [0.23ms]\n(pass) ProfessionalService - Scheduling Logic > calculateAverageRating > should handle empty ratings array [0.03ms]\n(pass) ProfessionalService - Scheduling Logic > calculateAverageRating > should handle single rating [0.05ms]\n(pass) ProfessionalService - Scheduling Logic > validateProfessional > should validate complete professional data [0.11ms]\n233 |         ...mockProfessional,\n234 |         cpf: '123.456.789-09'\n235 |       }\n236 | \n237 |       const result = ProfessionalService.validateProfessional(invalidCPF)\n238 |       expect(result.isValid).toBe(false)\n                                   ^\nerror: expect(received).toBe(expected)\n\nExpected: false\nReceived: true\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/professional-service-scheduling.test.ts:238:30)\n(fail) ProfessionalService - Scheduling Logic > validateProfessional > should validate CPF format [0.09ms]\n(pass) ProfessionalService - Scheduling Logic > validateProfessional > should validate professional license [0.04ms]\n(pass) ProfessionalService - Scheduling Logic > validateProfessional > should validate commission rate range [0.04ms]\n(pass) ProfessionalService - Scheduling Logic > validateProfessional > should accept valid commission rates [0.04ms]\n(pass) ProfessionalService - Scheduling Logic > Scheduling Conflicts > should detect overlapping appointments in same time slot [0.05ms]\n(pass) ProfessionalService - Scheduling Logic > Scheduling Conflicts > should respect professional availability preferences [0.10ms]\n(pass) ProfessionalService - Scheduling Logic > Brazilian Market Specifics > should validate professional license formats [0.05ms]\n(pass) ProfessionalService - Scheduling Logic > Brazilian Market Specifics > should handle specialty-specific requirements [0.06ms]\n(pass) ProfessionalService - Scheduling Logic > Brazilian Market Specifics > should validate phone number format for Brazil [0.09ms]\n\napps/web/src/__tests__/emergency-contact-config.test.ts:\n\n# Unhandled error between tests\n-------------------------------\n1 | (function (entry, fetcher)\n              ^\nSyntaxError: Export named 'ScreenReaderAnnouncer' not found in module '/home/vibecode/neonpro/packages/ui/src/index.ts'.\n      at loadAndEvaluateModule (1:11)\n      at link (1:11)\n      at linkAndEvaluateModule (1:11)\n      at loadAndEvaluateModule (2:1)\n-------------------------------\n\n\napps/web/src/test/test-basic-setup.test.ts:\n🔧 DOM environment setup starting...\n🔧 JSDOM created successfully\n🔧 Setting up global scope...\n🔧 Global scope setup complete\n🔧 Setting up globalThis scope...\n🔧 globalThis scope setup complete\n🔧 DOM environment setup complete\n🔧 DOM environment setup complete\n(pass) Basic Test Setup > should pass a basic test [0.06ms]\n(pass) Basic Test Setup > should have healthcare globals defined [0.04ms]\n\napps/api/edge/__tests__/rls-guard-middleware.test.ts:\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:46:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:45:63)\n(fail) Edge API - RLS Guard Middleware > Authentication Validation > should reject requests without authorization header [21.93ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:59:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:58:75)\n(fail) Edge API - RLS Guard Middleware > Authentication Validation > should reject requests with invalid authorization header format [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:83:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:72:57)\n(fail) Edge API - RLS Guard Middleware > Authentication Validation > should reject requests with invalid JWT token [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:112:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:96:69)\n(fail) Edge API - RLS Guard Middleware > Authentication Validation > should reject requests without clinic_id in user metadata [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:161:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:134:56)\n(fail) Edge API - RLS Guard Middleware > RLS Enforcement > should include clinic_id in database queries [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:215:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:177:51)\n(fail) Edge API - RLS Guard Middleware > RLS Enforcement > should prevent cross-clinic data access [0.15ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:237:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:229:58)\n(fail) Edge API - RLS Guard Middleware > RLS Enforcement > should handle authentication errors gracefully [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:286:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/rls-guard-middleware.test.ts:259:57)\n(fail) Edge API - RLS Guard Middleware > Security Headers > should maintain security headers in responses [0.14ms]\n\napps/api/edge/__tests__/migration-state.test.ts:\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:45:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:44:70)\n(fail) Edge API - GET /migration/state > Authentication > should return 401 when no authorization header is provided [0.28ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:55:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:54:68)\n(fail) Edge API - GET /migration/state > Authentication > should return 401 when authorization header is malformed [0.12ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:79:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:68:60)\n(fail) Edge API - GET /migration/state > Authentication > should return 401 when user authentication fails [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:108:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:92:74)\n(fail) Edge API - GET /migration/state > Authentication > should return 401 when clinic_id is missing from user metadata [0.19ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:186:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:142:52)\n(fail) Edge API - GET /migration/state > Data Fetching > should return migration state when found [0.22ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:223:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:200:60)\n(fail) Edge API - GET /migration/state > Data Fetching > should return 404 when migration state not found [0.18ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:258:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:235:55)\n(fail) Edge API - GET /migration/state > Data Fetching > should return 500 when database query fails [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:293:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:270:57)\n(fail) Edge API - GET /migration/state > Data Fetching > should filter by clinic_id from user metadata [0.15ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:326:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:303:49)\n(fail) Edge API - GET /migration/state > Data Fetching > should order by created_at descending [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:359:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:336:58)\n(fail) Edge API - GET /migration/state > Data Fetching > should limit results to 1 record (most recent) [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:425:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:390:52)\n(fail) Edge API - GET /migration/state > Migration State Fields > should include migration progress fields [0.22ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:474:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:440:40)\n(fail) Edge API - GET /migration/state > Migration State Fields > should include timing fields [0.17ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:525:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:488:68)\n(fail) Edge API - GET /migration/state > Migration State Fields > should include metadata field for additional information [0.19ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:574:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:544:52)\n(fail) Edge API - GET /migration/state > Performance > should include response time in response [0.16ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:616:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:585:56)\n(fail) Edge API - GET /migration/state > Performance > should target TTFB <150ms (performance test) [0.16ms]\n629 |   })\n630 | \n631 |   describe('Security', () => {\n632 |     it('should use anon client only (no service role key)', async () => {\n633 |       // This test verifies that the Edge runtime doesn't have access to service role keys\n634 |       expect(process.env['SUPABASE_SERVICE_ROLE_KEY']).toBeUndefined()\n                                                             ^\nerror: expect(received).toBeUndefined()\n\nReceived: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im93bmtveHJ5c3dva2NkYW5yZGdqIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzMwMzYwOSwiZXhwIjoyMDY4ODc5NjA5fQ.pRkzJNwqPnKbPFcaEFQK9qh4jHfCU3lq9qyNvZ2m2aU\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:634:56)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-state.test.ts:632:61)\n(fail) Edge API - GET /migration/state > Security > should use anon client only (no service role key) [0.17ms]\n\napps/api/edge/__tests__/cache-middleware.test.ts:\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:92:35)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:64:59)\n(fail) Edge API - Caching Middleware > Cache Functionality > should cache GET /architecture/config responses [0.44ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:151:35)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:121:59)\n(fail) Edge API - Caching Middleware > Cache Functionality > should cache GET /performance/metrics responses [0.18ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:180:35)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:178:42)\n(fail) Edge API - Caching Middleware > Cache Functionality > should not cache POST requests [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:218:35)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:196:44)\n(fail) Edge API - Caching Middleware > Cache Functionality > should not cache error responses [0.17ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:297:35)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:266:71)\n(fail) Edge API - Caching Middleware > Cache Performance > should return cached responses faster than database queries [0.24ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:359:35)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:331:51)\n(fail) Edge API - Caching Middleware > Cache Performance > should respect cache TTL (Time To Live) [0.16ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:464:35)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/cache-middleware.test.ts:411:79)\n(fail) Edge API - Caching Middleware > Cache Key Generation > should generate different cache keys for different clinic_id values [0.22ms]\n\napps/api/edge/__tests__/migration-start.test.ts:\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:50:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:49:70)\n(fail) Edge API - POST /migration/start > Authentication > should return 401 when no authorization header is provided [0.25ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:73:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:72:68)\n(fail) Edge API - POST /migration/start > Authentication > should return 401 when authorization header is malformed [0.15ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:107:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:96:60)\n(fail) Edge API - POST /migration/start > Authentication > should return 401 when user authentication fails [0.17ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:146:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:130:74)\n(fail) Edge API - POST /migration/start > Authentication > should return 401 when clinic_id is missing from user metadata [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:191:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:190:57)\n(fail) Edge API - POST /migration/start > Request Validation > should return 400 when migrationId is missing [0.15ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:219:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:218:66)\n(fail) Edge API - POST /migration/start > Request Validation > should return 400 when migrationId is not a valid UUID [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:262:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:247:55)\n(fail) Edge API - POST /migration/start > Request Validation > should accept valid request with all fields [0.19ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:299:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:285:59)\n(fail) Edge API - POST /migration/start > Request Validation > should accept valid request with minimal fields [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:351:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:337:56)\n(fail) Edge API - POST /migration/start > Node tRPC Forwarding > should forward request to Node tRPC endpoint [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:404:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:388:52)\n(fail) Edge API - POST /migration/start > Node tRPC Forwarding > should handle Node tRPC success response [0.17ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:443:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:431:50)\n(fail) Edge API - POST /migration/start > Node tRPC Forwarding > should handle Node tRPC error response [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:467:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:464:49)\n(fail) Edge API - POST /migration/start > Node tRPC Forwarding > should handle Node tRPC network error [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:526:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:512:65)\n(fail) Edge API - POST /migration/start > LGPD Compliance Logging > should log audit trail for successful migration start [0.20ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:571:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:560:61)\n(fail) Edge API - POST /migration/start > LGPD Compliance Logging > should log audit trail for failed migration start [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:631:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:617:52)\n(fail) Edge API - POST /migration/start > Performance > should include response time in response [0.15ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:662:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:647:71)\n(fail) Edge API - POST /migration/start > Performance > should target TTFB <150ms for forwarding (performance test) [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:718:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/migration-start.test.ts:683:61)\n(fail) Edge API - POST /migration/start > Security > should use anon client only (no service role key) [0.20ms]\n\napps/api/edge/__tests__/package-manager-config.test.ts:\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:46:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:45:70)\n(fail) Edge API - GET /package-manager/config > Authentication > should return 401 when no authorization header is provided [0.34ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:61:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:60:68)\n(fail) Edge API - GET /package-manager/config > Authentication > should return 401 when authorization header is malformed [0.10ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:87:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:76:60)\n(fail) Edge API - GET /package-manager/config > Authentication > should return 401 when user authentication fails [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:118:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:102:74)\n(fail) Edge API - GET /package-manager/config > Authentication > should return 401 when clinic_id is missing from user metadata [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:175:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:154:70)\n(fail) Edge API - GET /package-manager/config > Data Fetching > should return 404 when package manager config is not found [0.21ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:212:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:191:55)\n(fail) Edge API - GET /package-manager/config > Data Fetching > should return 500 when database query fails [0.15ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:263:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:228:64)\n(fail) Edge API - GET /package-manager/config > Data Fetching > should return package manager config data when found [0.18ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:313:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:283:57)\n(fail) Edge API - GET /package-manager/config > Security > should filter by clinic_id for RLS compliance [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:359:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:327:61)\n(fail) Edge API - GET /package-manager/config > Security > should use anon client only (no service role key) [0.16ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:407:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:406:52)\n(fail) Edge API - GET /package-manager/config > Performance > should include response time in response [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:422:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/package-manager-config.test.ts:420:77)\n(fail) Edge API - GET /package-manager/config > Performance > should target TTFB <150ms for config retrieval (performance test) [0.13ms]\n\napps/api/edge/__tests__/realtime-cache-invalidation.test.ts:\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:151:39)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:149:68)\n(fail) Edge API - Realtime Cache Invalidation > Cache Invalidation on Realtime Events > should invalidate cache when architecture config changes [0.45ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:215:39)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:213:67)\n(fail) Edge API - Realtime Cache Invalidation > Cache Invalidation on Realtime Events > should invalidate cache when performance metrics change [0.20ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:277:39)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:275:66)\n(fail) Edge API - Realtime Cache Invalidation > Cache Invalidation on Realtime Events > should invalidate cache when compliance status changes [0.18ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:341:39)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:339:64)\n(fail) Edge API - Realtime Cache Invalidation > Cache Invalidation on Realtime Events > should invalidate cache when migration state changes [0.17ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:405:39)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:403:71)\n(fail) Edge API - Realtime Cache Invalidation > Cache Invalidation on Realtime Events > should invalidate cache when package manager config changes [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:471:39)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:469:67)\n(fail) Edge API - Realtime Cache Invalidation > Cache Invalidation Edge Cases > should not invalidate cache for unrelated table changes [0.15ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:531:39)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:529:73)\n(fail) Edge API - Realtime Cache Invalidation > Cache Invalidation Edge Cases > should not invalidate cache for different clinic data changes [0.16ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:591:39)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:589:63)\n(fail) Edge API - Realtime Cache Invalidation > Cache Invalidation Edge Cases > should handle concurrent realtime events gracefully [0.21ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:696:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:665:87)\n(fail) Edge API - Realtime Cache Invalidation > Realtime Subscription Management > should handle requests without realtime subscriptions (not implemented yet) [0.15ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:742:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/realtime-cache-invalidation.test.ts:711:65)\n(fail) Edge API - Realtime Cache Invalidation > Realtime Subscription Management > should handle realtime subscription errors gracefully [0.15ms]\n\napps/api/edge/__tests__/architecture-config.test.ts:\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:36:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:35:70)\n(fail) Edge API - GET /architecture/config > Authentication > should return 401 when no authorization header is provided [0.25ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:46:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:45:68)\n(fail) Edge API - GET /architecture/config > Authentication > should return 401 when authorization header is malformed [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:70:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:59:60)\n(fail) Edge API - GET /architecture/config > Authentication > should return 401 when user authentication fails [0.12ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:99:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:83:74)\n(fail) Edge API - GET /architecture/config > Authentication > should return 401 when clinic_id is missing from user metadata [0.11ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:154:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:133:67)\n(fail) Edge API - GET /architecture/config > Data Fetching > should return 404 when architecture config is not found [0.18ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:188:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:167:55)\n(fail) Edge API - GET /architecture/config > Data Fetching > should return 500 when database query fails [0.18ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:228:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:200:56)\n(fail) Edge API - GET /architecture/config > Data Fetching > should return architecture config when found [0.16ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:263:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:242:57)\n(fail) Edge API - GET /architecture/config > Data Fetching > should filter by clinic_id from user metadata [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:303:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:275:52)\n(fail) Edge API - GET /architecture/config > Performance > should include response time in response [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:343:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:314:56)\n(fail) Edge API - GET /architecture/config > Performance > should target TTFB <150ms (performance test) [0.13ms]\n356 |   })\n357 | \n358 |   describe('Security', () => {\n359 |     it('should use anon client only (no service role key)', async () => {\n360 |       // This test verifies that the Edge runtime doesn't have access to service role keys\n361 |       expect(process.env['SUPABASE_SERVICE_ROLE_KEY']).toBeUndefined()\n                                                             ^\nerror: expect(received).toBeUndefined()\n\nReceived: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im93bmtveHJ5c3dva2NkYW5yZGdqIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzMwMzYwOSwiZXhwIjoyMDY4ODc5NjA5fQ.pRkzJNwqPnKbPFcaEFQK9qh4jHfCU3lq9qyNvZ2m2aU\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:361:56)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/architecture-config.test.ts:359:61)\n(fail) Edge API - GET /architecture/config > Security > should use anon client only (no service role key) [0.13ms]\n\napps/api/edge/__tests__/no-secrets-validation.test.ts:\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/no-secrets-validation.test.ts:76:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/no-secrets-validation.test.ts:46:56)\n(fail) Edge API - No Secrets Validation > Anon Client Only Validation > should only use anon key for Supabase client [0.43ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/no-secrets-validation.test.ts:130:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/no-secrets-validation.test.ts:98:59)\n(fail) Edge API - No Secrets Validation > Anon Client Only Validation > should not use service role key in Edge runtime [0.23ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/no-secrets-validation.test.ts:183:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/no-secrets-validation.test.ts:148:57)\n(fail) Edge API - No Secrets Validation > Anon Client Only Validation > should not expose sensitive data in responses [0.19ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/no-secrets-validation.test.ts:233:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/no-secrets-validation.test.ts:198:69)\n(fail) Edge API - No Secrets Validation > Anon Client Only Validation > should handle responses without exposing internal details [0.19ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/no-secrets-validation.test.ts:285:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/no-secrets-validation.test.ts:256:70)\n(fail) Edge API - No Secrets Validation > Anon Client Only Validation > should validate JWT token without exposing signing secrets [0.15ms]\n(pass) Edge API - No Secrets Validation > Edge Runtime Constraints > should work within Edge runtime constraints [0.06ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/no-secrets-validation.test.ts:340:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/no-secrets-validation.test.ts:310:44)\n(fail) Edge API - No Secrets Validation > Edge Runtime Constraints > should not use Node.js-only APIs [0.15ms]\n\napps/api/edge/__tests__/audit-forwarder.test.ts:\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/audit-forwarder.test.ts:87:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/audit-forwarder.test.ts:56:65)\n(fail) Edge API - Audit Forwarder > LGPD Compliance Logging > should log audit trail for successful migration start [0.55ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/audit-forwarder.test.ts:150:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/audit-forwarder.test.ts:116:61)\n(fail) Edge API - Audit Forwarder > LGPD Compliance Logging > should log audit trail for failed migration start [0.16ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/audit-forwarder.test.ts:192:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/audit-forwarder.test.ts:169:53)\n(fail) Edge API - Audit Forwarder > LGPD Compliance Logging > should log audit trail for network errors [0.18ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/audit-forwarder.test.ts:264:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/audit-forwarder.test.ts:230:52)\n(fail) Edge API - Audit Forwarder > Audit Data Structure > should include all required audit fields [0.19ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/audit-forwarder.test.ts:336:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/audit-forwarder.test.ts:294:55)\n(fail) Edge API - Audit Forwarder > Audit Data Structure > should handle complex audit data structures [0.18ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/audit-forwarder.test.ts:407:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/audit-forwarder.test.ts:363:59)\n(fail) Edge API - Audit Forwarder > Error Handling > should handle audit logging failures gracefully [0.16ms]\n\napps/api/edge/__tests__/performance-metrics.test.ts:\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:45:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:44:70)\n(fail) Edge API - GET /performance/metrics > Authentication > should return 401 when no authorization header is provided [0.38ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:55:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:54:68)\n(fail) Edge API - GET /performance/metrics > Authentication > should return 401 when authorization header is malformed [0.12ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:79:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:68:60)\n(fail) Edge API - GET /performance/metrics > Authentication > should return 401 when user authentication fails [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:108:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:92:74)\n(fail) Edge API - GET /performance/metrics > Authentication > should return 401 when clinic_id is missing from user metadata [0.13ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:183:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:142:56)\n(fail) Edge API - GET /performance/metrics > Data Fetching > should return performance metrics when found [0.21ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:219:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:197:55)\n(fail) Edge API - GET /performance/metrics > Data Fetching > should return 500 when database query fails [0.17ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:253:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:231:57)\n(fail) Edge API - GET /performance/metrics > Data Fetching > should filter by clinic_id from user metadata [0.19ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:285:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:263:57)\n(fail) Edge API - GET /performance/metrics > Data Fetching > should order metrics by created_at descending [0.15ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:317:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:295:47)\n(fail) Edge API - GET /performance/metrics > Data Fetching > should limit results to 100 records [0.14ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:358:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:329:52)\n(fail) Edge API - GET /performance/metrics > Performance > should include response time in response [0.20ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:399:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:369:56)\n(fail) Edge API - GET /performance/metrics > Performance > should target TTFB <150ms (performance test) [0.20ms]\n412 |   })\n413 | \n414 |   describe('Security', () => {\n415 |     it('should use anon client only (no service role key)', async () => {\n416 |       // This test verifies that the Edge runtime doesn't have access to service role keys\n417 |       expect(process.env['SUPABASE_SERVICE_ROLE_KEY']).toBeUndefined()\n                                                             ^\nerror: expect(received).toBeUndefined()\n\nReceived: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im93bmtveHJ5c3dva2NkYW5yZGdqIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzMwMzYwOSwiZXhwIjoyMDY4ODc5NjA5fQ.pRkzJNwqPnKbPFcaEFQK9qh4jHfCU3lq9qyNvZ2m2aU\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:417:56)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/performance-metrics.test.ts:415:61)\n(fail) Edge API - GET /performance/metrics > Security > should use anon client only (no service role key) [0.21ms]\n\napps/api/edge/__tests__/ttfb-logging.test.ts:\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/ttfb-logging.test.ts:180:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/ttfb-logging.test.ts:105:69)\n(fail) Edge API - TTFB Logging Middleware > TTFB Measurement > should measure TTFB from startTime to response completion [0.58ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/ttfb-logging.test.ts:332:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/ttfb-logging.test.ts:206:50)\n(fail) Edge API - TTFB Logging Middleware > TTFB Measurement > should include correct metric metadata [0.15ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/ttfb-logging.test.ts:435:19)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/ttfb-logging.test.ts:351:64)\n(fail) Edge API - TTFB Logging Middleware > TTFB Measurement > should calculate TTFB correctly for different routes [0.27ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/ttfb-logging.test.ts:529:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/ttfb-logging.test.ts:457:64)\n(fail) Edge API - TTFB Logging Middleware > Error Handling > should not block response when Supabase insert fails [0.16ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/ttfb-logging.test.ts:614:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/ttfb-logging.test.ts:550:54)\n(fail) Edge API - TTFB Logging Middleware > Error Handling > should handle missing clinic_id gracefully [0.12ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/ttfb-logging.test.ts:694:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/ttfb-logging.test.ts:629:57)\n(fail) Edge API - TTFB Logging Middleware > Performance Impact > should not significantly impact response time [0.13ms]\n\napps/api/edge/__tests__/compliance-status.test.ts:\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:45:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:44:70)\n(fail) Edge API - GET /compliance/status > Authentication > should return 401 when no authorization header is provided [0.46ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:55:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:54:68)\n(fail) Edge API - GET /compliance/status > Authentication > should return 401 when authorization header is malformed [0.17ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:79:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:68:60)\n(fail) Edge API - GET /compliance/status > Authentication > should return 401 when user authentication fails [0.19ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:108:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:92:74)\n(fail) Edge API - GET /compliance/status > Authentication > should return 401 when clinic_id is missing from user metadata [0.19ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:177:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:142:54)\n(fail) Edge API - GET /compliance/status > Data Fetching > should return compliance status when found [0.27ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:212:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:191:62)\n(fail) Edge API - GET /compliance/status > Data Fetching > should return 404 when compliance status not found [0.20ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:245:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:224:55)\n(fail) Edge API - GET /compliance/status > Data Fetching > should return 500 when database query fails [0.21ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:278:17)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:257:57)\n(fail) Edge API - GET /compliance/status > Data Fetching > should filter by clinic_id from user metadata [0.17ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:341:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:309:49)\n(fail) Edge API - GET /compliance/status > Healthcare Compliance Fields > should include LGPD compliance fields [0.20ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:387:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:355:51)\n(fail) Edge API - GET /compliance/status > Healthcare Compliance Fields > should include ANVISA compliance fields [0.21ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:434:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:401:48)\n(fail) Edge API - GET /compliance/status > Healthcare Compliance Fields > should include CFM compliance fields [0.20ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:479:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:451:52)\n(fail) Edge API - GET /compliance/status > Performance > should include response time in response [0.25ms]\n212 |   }\n213 |   fetch = (request, ...rest) => {\n214 |     return this.#dispatch(request, rest[1], rest[0], request.method);\n215 |   };\n216 |   request = (input, requestInit, Env, executionCtx) => {\n217 |     if (input instanceof Request) {\n                               ^\nTypeError: Right hand side of instanceof is not an object\n      at request (/home/vibecode/neonpro/node_modules/.pnpm/hono@4.9.9/node_modules/hono/dist/hono-base.js:217:26)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:519:34)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:490:56)\n(fail) Edge API - GET /compliance/status > Performance > should target TTFB <150ms (performance test) [0.44ms]\n532 |   })\n533 | \n534 |   describe('Security', () => {\n535 |     it('should use anon client only (no service role key)', async () => {\n536 |       // This test verifies that the Edge runtime doesn't have access to service role keys\n537 |       expect(process.env['SUPABASE_SERVICE_ROLE_KEY']).toBeUndefined()\n                                                             ^\nerror: expect(received).toBeUndefined()\n\nReceived: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im93bmtveHJ5c3dva2NkYW5yZGdqIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzMwMzYwOSwiZXhwIjoyMDY4ODc5NjA5fQ.pRkzJNwqPnKbPFcaEFQK9qh4jHfCU3lq9qyNvZ2m2aU\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:537:56)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/edge/__tests__/compliance-status.test.ts:535:61)\n(fail) Edge API - GET /compliance/status > Security > should use anon client only (no service role key) [0.26ms]\n\napps/api/src/__tests__/security-integration-service.end-to-end.test.ts:\n(pass) SecurityIntegrationService End-to-End Tests > Configuration Interface > should accept correct configuration interface names [0.20ms]\n(pass) SecurityIntegrationService End-to-End Tests > Configuration Interface > should require all mandatory configuration properties [0.07ms]\n(pass) SecurityIntegrationService End-to-End Tests > Configuration Interface > should validate sessionTimeout is a positive number [0.06ms]\n(pass) SecurityIntegrationService End-to-End Tests > Configuration Interface > should validate maxConcurrentSessions is a positive number [0.06ms]\n(pass) SecurityIntegrationService End-to-End Tests > Configuration Interface > should validate securityLevel is one of allowed values [0.09ms]\n(pass) SecurityIntegrationService End-to-End Tests > JWT Service Integration > should validate token with correct format [0.18ms]\n(pass) SecurityIntegrationService End-to-End Tests > JWT Service Integration > should handle invalid tokens properly [0.08ms]\n(pass) SecurityIntegrationService End-to-End Tests > JWT Service Integration > should handle JWT service errors [0.09ms]\n(pass) SecurityIntegrationService End-to-End Tests > Session Service Integration > should get session with metadata [2.35ms]\n(pass) SecurityIntegrationService End-to-End Tests > Session Service Integration > should handle session not found [0.08ms]\n(pass) SecurityIntegrationService End-to-End Tests > Session Service Integration > should log security events correctly [0.12ms]\n(pass) SecurityIntegrationService End-to-End Tests > Session Service Integration > should handle session service errors gracefully [0.08ms]\n(pass) SecurityIntegrationService End-to-End Tests > Compliance Service Integration > should validate healthcare compliance [0.11ms]\n(pass) SecurityIntegrationService End-to-End Tests > Compliance Service Integration > should handle compliance failures [0.09ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should handle complete authentication workflow [0.11ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should handle authentication failure workflow [0.08ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should handle session timeout workflow [0.10ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should handle concurrent session limit [0.16ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should enforce security level requirements [0.08ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should handle healthcare-specific security requirements [0.08ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should handle audit logging for healthcare compliance [0.09ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should validate data encryption requirements [0.09ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should handle emergency access scenarios [0.10ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should enforce data retention policies [0.08ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should handle cross-border data transfer compliance [0.10ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should validate access control mechanisms [0.15ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should handle security configuration updates [0.10ms]\n(pass) SecurityIntegrationService End-to-End Tests > End-to-End Security Workflow > should provide comprehensive security metrics [0.18ms]\n(pass) SecurityIntegrationService End-to-End Tests > Error Handling and Edge Cases > should handle malformed tokens gracefully [0.09ms]\n(pass) SecurityIntegrationService End-to-End Tests > Error Handling and Edge Cases > should handle service unavailability with fallback [0.08ms]\n(pass) SecurityIntegrationService End-to-End Tests > Error Handling and Edge Cases > should validate session timeout boundaries [0.14ms]\n(pass) SecurityIntegrationService End-to-End Tests > Error Handling and Edge Cases > should handle configuration validation errors [0.05ms]\n\napps/api/src/__tests__/chat-api.test.ts:\n\napps/api/src/__tests__/health-endpoints-integration.test.ts:\n10 | import nodeHealth from '../node/health'\n11 | \n12 | describe('Health Endpoints Integration', () => {\n13 |   describe('Edge Runtime Health Check', () => {\n14 |     it('should return 200 status code', async () => {\n15 |       const req = new Request('http://localhost/api/health')\n                       ^\nTypeError: undefined is not a constructor (evaluating 'new Request(\"http://localhost/api/health\")')\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:15:19)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:14:41)\n(fail) Health Endpoints Integration > Edge Runtime Health Check > should return 200 status code [0.11ms]\n17 | \n18 |       expect(res.status).toBe(200)\n19 |     })\n20 | \n21 |     it('should return correct JSON structure', async () => {\n22 |       const req = new Request('http://localhost/api/health')\n                       ^\nTypeError: undefined is not a constructor (evaluating 'new Request(\"http://localhost/api/health\")')\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:22:19)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:21:48)\n(fail) Health Endpoints Integration > Edge Runtime Health Check > should return correct JSON structure [0.11ms]\n30 |       expect(data).toHaveProperty('region')\n31 |       expect(data).toHaveProperty('responseTime')\n32 |     })\n33 | \n34 |     it('should return runtime as \"edge\"', async () => {\n35 |       const req = new Request('http://localhost/api/health')\n                       ^\nTypeError: undefined is not a constructor (evaluating 'new Request(\"http://localhost/api/health\")')\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:35:19)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:34:43)\n(fail) Health Endpoints Integration > Edge Runtime Health Check > should return runtime as \"edge\" [0.10ms]\n40 |       expect(data.status).toBe('healthy')\n41 |       expect(data.version).toBe('1.0.0')\n42 |     })\n43 | \n44 |     it('should not expose sensitive data', async () => {\n45 |       const req = new Request('http://localhost/api/health')\n                       ^\nTypeError: undefined is not a constructor (evaluating 'new Request(\"http://localhost/api/health\")')\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:45:19)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:44:44)\n(fail) Health Endpoints Integration > Edge Runtime Health Check > should not expose sensitive data [0.11ms]\n51 |       expect(data).not.toHaveProperty('password')\n52 |     })\n53 | \n54 |     it('should respond quickly (performance check)', async () => {\n55 |       const startTime = Date.now()\n56 |       const req = new Request('http://localhost/api/health')\n                       ^\nTypeError: undefined is not a constructor (evaluating 'new Request(\"http://localhost/api/health\")')\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:56:19)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:54:54)\n(fail) Health Endpoints Integration > Edge Runtime Health Check > should respond quickly (performance check) [0.10ms]\n64 |     })\n65 |   })\n66 | \n67 |   describe('Node Runtime Health Check', () => {\n68 |     it('should return 200 status code', async () => {\n69 |       const req = new Request('http://localhost/api/health/node')\n                       ^\nTypeError: undefined is not a constructor (evaluating 'new Request(\"http://localhost/api/health/node\")')\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:69:19)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:68:41)\n(fail) Health Endpoints Integration > Node Runtime Health Check > should return 200 status code [0.09ms]\n71 | \n72 |       expect(res.status).toBe(200)\n73 |     })\n74 | \n75 |     it('should return correct JSON structure', async () => {\n76 |       const req = new Request('http://localhost/api/health/node')\n                       ^\nTypeError: undefined is not a constructor (evaluating 'new Request(\"http://localhost/api/health/node\")')\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:76:19)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:75:48)\n(fail) Health Endpoints Integration > Node Runtime Health Check > should return correct JSON structure [0.11ms]\n86 |       expect(data).toHaveProperty('serviceRoleConfigured')\n87 |       expect(data).toHaveProperty('responseTime')\n88 |     })\n89 | \n90 |     it('should return runtime as \"node\"', async () => {\n91 |       const req = new Request('http://localhost/api/health/node')\n                       ^\nTypeError: undefined is not a constructor (evaluating 'new Request(\"http://localhost/api/health/node\")')\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:91:19)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:90:43)\n(fail) Health Endpoints Integration > Node Runtime Health Check > should return runtime as \"node\" [0.10ms]\n 96 |       expect(data.status).toBe('healthy')\n 97 |       expect(data.version).toBe('1.0.0')\n 98 |     })\n 99 | \n100 |     it('should verify service role without exposing key', async () => {\n101 |       const req = new Request('http://localhost/api/health/node')\n                        ^\nTypeError: undefined is not a constructor (evaluating 'new Request(\"http://localhost/api/health/node\")')\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:101:19)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:100:59)\n(fail) Health Endpoints Integration > Node Runtime Health Check > should verify service role without exposing key [0.10ms]\n106 |       expect(data).not.toHaveProperty('serviceRoleKey')\n107 |       expect(data).not.toHaveProperty('SUPABASE_SERVICE_ROLE_KEY')\n108 |     })\n109 | \n110 |     it('should not expose sensitive data', async () => {\n111 |       const req = new Request('http://localhost/api/health/node')\n                        ^\nTypeError: undefined is not a constructor (evaluating 'new Request(\"http://localhost/api/health/node\")')\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:111:19)\n      at <anonymous> (/home/vibecode/neonpro/apps/api/src/__tests__/health-endpoints-integration.test.ts:110:44)\n(fail) Health Endpoints Integration > Node Runtime Health Check > should not expose sensitive data [0.11ms]\n\npackages/database/src/__tests__/client.test.ts:\n(pass) Database Client > loadDatabaseConfig > should load configuration from environment variables [0.14ms]\n(pass) Database Client > loadDatabaseConfig > should validate required keys in production environment [0.07ms]\n(pass) Database Client > loadDatabaseConfig > should allow missing keys in development environment [0.07ms]\n(pass) Database Client > loadDatabaseConfig > should log audit information without sensitive data [0.09ms]\n(pass) Database Client > createSupabaseClient > should create a Supabase client with configuration [0.15ms]\n(pass) Database Client > createSupabaseClient > should merge provided config with environment defaults [0.08ms]\n(pass) Database Client > createSupabaseClient > should throw error if URL is missing [0.07ms]\n(pass) Database Client > createSupabaseClient > should throw error if key is missing [0.08ms]\n(pass) Database Client > createSupabaseClient > should log audit information without sensitive data [0.07ms]\n66 |   const isServer = typeof window === 'undefined' &&\n67 |                   (typeof process !== 'undefined' ||\n68 |                    (typeof globalThis !== 'undefined' && 'process' in globalThis));\n69 | \n70 |   if (!isServer) {\n71 |     throw new Error('createSupabaseAdminClient can only be used in server environments');\n                                                                                            ^\nerror: createSupabaseAdminClient can only be used in server environments\n      at createSupabaseAdminClient (/home/vibecode/neonpro/packages/database/src/client-service.ts:71:88)\n      at <anonymous> (/home/vibecode/neonpro/packages/database/src/__tests__/client.test.ts:331:22)\n(fail) Database Client > createSupabaseAdminClient > should create admin client with service role key [0.26ms]\n(pass) Database Client > createSupabaseAdminClient > should throw error in client environment [0.07ms]\n(pass) Database Client > createSupabaseAdminClient > should throw error if service role key is missing [0.06ms]\n(pass) Database Client > createSupabaseAdminClient > should log audit information without sensitive data [0.08ms]\n(pass) Database Client > createClient Service Key Precedence > should prioritize service key when provided in any environment [1.69ms]\n(pass) Database Client > createClient Service Key Precedence > should use service key in production when both keys are provided [0.07ms]\n(pass) Database Client > createClient Service Key Precedence > should use service key when explicitly provided regardless of environment [0.09ms]\n(pass) Database Client > createClient Service Key Precedence > should handle operator precedence issue correctly [0.05ms]\n\npackages/database/src/__tests__/migrate.test.ts:\n\n# Unhandled error between tests\n-------------------------------\nerror: Cannot find module '../migrate' from '/home/vibecode/neonpro/packages/database/src/__tests__/migrate.test.ts'\n-------------------------------\n\n\npackages/core/dist/__tests__/healthcare.test.js:\n(pass) AppointmentService > list > should fetch appointments for a clinic [0.26ms]\n(pass) AppointmentService > list > should throw error when database query fails [0.15ms]\n\npackages/core/dist/__tests__/auth.test.js:\n(pass) Authentication Core > authenticate > should validate valid JWT tokens [0.33ms]\n(pass) Authentication Core > authenticate > should reject invalid tokens [0.76ms]\n(pass) Authentication Core > authenticate > should handle missing tokens [0.08ms]\n(pass) Authentication Core > authenticate > should handle Bearer prefix [0.14ms]\n(pass) Authentication Core > extractClinicId > should extract clinic ID from valid token [0.10ms]\n(pass) Authentication Core > extractClinicId > should return null for invalid token [0.04ms]\n(pass) Authentication Core > extractClinicId > should return null for token without clinic_id [0.05ms]\n\npackages/core/src/__tests__/healthcare.test.ts:\n(pass) AppointmentService > list > should fetch appointments for a clinic [0.11ms]\n(pass) AppointmentService > list > should throw error when database query fails [1.86ms]\n\npackages/core/src/__tests__/auth.test.ts:\n(pass) Authentication Core > authenticate > should validate valid JWT tokens [0.14ms]\n(pass) Authentication Core > authenticate > should reject invalid tokens [0.12ms]\n(pass) Authentication Core > authenticate > should handle missing tokens [0.02ms]\n(pass) Authentication Core > authenticate > should handle Bearer prefix [0.10ms]\n(pass) Authentication Core > extractClinicId > should extract clinic ID from valid token [0.03ms]\n(pass) Authentication Core > extractClinicId > should return null for invalid token\n(pass) Authentication Core > extractClinicId > should return null for token without clinic_id\n\npackages/core/src/__tests__/exports.test.ts:\n(pass) Barrel exports > should export appointment types [0.04ms]\n(pass) Barrel exports > should export appointment hooks and services [0.02ms]\n(pass) Barrel exports > should export appointment utils\n(pass) Barrel exports > should export financeiro types [0.01ms]\n(pass) Barrel exports > should export financeiro services and utils [0.01ms]\n(pass) Barrel exports > should export profissionais types [0.02ms]\n(pass) Barrel exports > should export profissionais hooks, services and utils [0.01ms]\n(pass) Barrel exports > should export tratamentos types [0.02ms]\n(pass) Barrel exports > should export tratamentos hooks, services and utils [0.02ms]\n\npackages/types/dist/__tests__/schemas.test.js:\n(pass) Types and Schemas > AppointmentSchema > should validate valid appointment data [0.47ms]\n(pass) Types and Schemas > AppointmentSchema > should reject invalid UUID format [0.51ms]\n(pass) Types and Schemas > AppointmentSchema > should reject invalid status [0.20ms]\n(pass) Types and Schemas > CreateAppointmentSchema > should validate appointment creation with future dates [0.42ms]\n(pass) Types and Schemas > UserSchema > should validate valid user data [0.41ms]\n(pass) Types and Schemas > UserSchema > should reject invalid email format [0.09ms]\n\npackages/types/src/__tests__/schemas.test.ts:\n(pass) Types and Schemas > AppointmentSchema > should validate valid appointment data [0.15ms]\n(pass) Types and Schemas > AppointmentSchema > should reject invalid UUID format [0.12ms]\n(pass) Types and Schemas > AppointmentSchema > should reject invalid status [0.09ms]\n(pass) Types and Schemas > CreateAppointmentSchema > should validate appointment creation with future dates [0.12ms]\n(pass) Types and Schemas > UserSchema > should validate valid user data [0.12ms]\n(pass) Types and Schemas > UserSchema > should reject invalid email format [0.12ms]\n\napps/web/src/__tests__/healthcare-core/security-compliance.test.ts:\n12 |           // Missing processedBy and processedAt properties\n13 |         }\n14 | \n15 |         const result = processDataSubjectRequest(request)\n16 |         expect(result).toBeDefined()\n17 |       }).toThrow('Property \\'processedBy\\' does not exist')\n              ^\nerror: expect(received).toThrow(expected)\n\nExpected substring: \"Property 'processedBy' does not exist\"\nReceived message: \"processDataSubjectRequest is not defined\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/security-compliance.test.ts:17:10)\n(fail) Healthcare Core Security & Compliance > LGPD Compliance > should properly handle data subject requests with complete properties [0.24ms]\n26 |           // Missing status and nextAssessmentDate properties\n27 |         }\n28 | \n29 |         const result = processComplianceAssessment(assessment)\n30 |         expect(result).toBeDefined()\n31 |       }).toThrow('Property \\'status\\' does not exist')\n              ^\nerror: expect(received).toThrow(expected)\n\nExpected substring: \"Property 'status' does not exist\"\nReceived message: \"processComplianceAssessment is not defined\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/security-compliance.test.ts:31:10)\n(fail) Healthcare Core Security & Compliance > LGPD Compliance > should handle compliance assessments with complete properties [0.14ms]\n50 |           // Missing assistantRequired property\n51 |         }\n52 | \n53 |         const result = validateAestheticAppointment(appointment)\n54 |         expect(result).toBeDefined()\n55 |       }).toThrow('Property \\'assistantRequired\\' is missing')\n              ^\nerror: expect(received).toThrow(expected)\n\nExpected substring: \"Property 'assistantRequired' is missing\"\nReceived message: \"validateAestheticAppointment is not defined\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/security-compliance.test.ts:55:10)\n(fail) Healthcare Core Security & Compliance > Security Validation > should validate aesthetic appointments with required fields [0.15ms]\n60 |       expect(() => {\n61 |         const supabaseUrl = 'test-url' // Unused variable\n62 |         const supabaseKey = 'test-key' // Unused variable\n63 |         const result = secureDatabaseConnection()\n64 |         expect(result).toBeDefined()\n65 |       }).toThrow('is declared but its value is never read')\n              ^\nerror: expect(received).toThrow(expected)\n\nExpected substring: \"is declared but its value is never read\"\nReceived message: \"secureDatabaseConnection is not defined\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/security-compliance.test.ts:65:10)\n(fail) Healthcare Core Security & Compliance > Security Validation > should handle unused security parameters safely [0.11ms]\n81 |           sessionsRequired: 3\n82 |         }\n83 | \n84 |         const result = validateProcedureType(procedure)\n85 |         expect(result).toBeDefined()\n86 |       }).toThrow('Type \\'undefined\\' is not assignable to type \\'string\\'')\n              ^\nerror: expect(received).toThrow(expected)\n\nExpected substring: \"Type 'undefined' is not assignable to type 'string'\"\nReceived message: \"validateProcedureType is not defined\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/security-compliance.test.ts:86:10)\n(fail) Healthcare Core Security & Compliance > Data Validation > should validate procedure types correctly [0.13ms]\n94 |         const filters = {} // Unused\n95 |         const clinicId = 'test-clinic' // Unused\n96 | \n97 |         const result = coordinateProfessionalTeam()\n98 |         expect(result).toBeDefined()\n99 |       }).toThrow('is declared but its value is never read')\n              ^\nerror: expect(received).toThrow(expected)\n\nExpected substring: \"is declared but its value is never read\"\nReceived message: \"coordinateProfessionalTeam is not defined\"\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/security-compliance.test.ts:99:10)\n(fail) Healthcare Core Security & Compliance > Data Validation > should handle professional coordination with all parameters [0.12ms]\n\napps/web/src/__tests__/healthcare-core/patient-management-lgpd.test.tsx:\n\n# Unhandled error between tests\n-------------------------------\nerror: Cannot find module '@/lib/i18n/use-translation.ts' from '/home/vibecode/neonpro/apps/web/src/components/healthcare/accessible-patient-registration.tsx'\n-------------------------------\n\n\napps/web/src/__tests__/healthcare-core/type-safety.test.ts:\n2 | \n3 | describe('Healthcare Core Type Safety', () => {\n4 |   describe('Export Conflicts', () => {\n5 |     it('should not have duplicate TreatmentPlan exports', async () => {\n6 |       const healthcare = await import('@neonpro/core')\n7 |       expect(healthcare).toHaveProperty('TreatmentPlan')\n                             ^\nerror: expect(received).toHaveProperty(path)\n\nExpected path: \"TreatmentPlan\"\n\nUnable to find property\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/type-safety.test.ts:7:26)\n(fail) Healthcare Core Type Safety > Export Conflicts > should not have duplicate TreatmentPlan exports [4.36ms]\n 7 |       expect(healthcare).toHaveProperty('TreatmentPlan')\n 8 |     })\n 9 | \n10 |     it('should not have duplicate TreatmentRecommendation exports', async () => {\n11 |       const healthcare = await import('@neonpro/core')\n12 |       expect(healthcare).toHaveProperty('TreatmentRecommendation')\n                              ^\nerror: expect(received).toHaveProperty(path)\n\nExpected path: \"TreatmentRecommendation\"\n\nUnable to find property\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/type-safety.test.ts:12:26)\n(fail) Healthcare Core Type Safety > Export Conflicts > should not have duplicate TreatmentRecommendation exports [0.11ms]\n(pass) Healthcare Core Type Safety > Zod Schema Validation > should properly validate analytics schemas with correct arguments [47.45ms]\n(pass) Healthcare Core Type Safety > Undefined Property Errors > should handle undefined string properties safely [0.04ms]\n(pass) Healthcare Core Type Safety > Undefined Property Errors > should handle missing object properties [0.04ms]\n(pass) Healthcare Core Type Safety > Unused Variable Errors > should not have unused variables in aesthetic-scheduling service [0.04ms]\n\napps/web/src/__tests__/healthcare-core/service-validation.test.ts:\n12 |         basePrice: 150,\n13 |         recoveryPeriodDays: 7,\n14 |         sessionsRequired: 3\n15 |       }\n16 | \n17 |       const result = validateAestheticProcedure(procedure)\n                          ^\nReferenceError: validateAestheticProcedure is not defined\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/service-validation.test.ts:17:22)\n(fail) Healthcare Core Service Validation > Aesthetic Scheduling Service > should handle procedure validation with all required properties [0.11ms]\n40 |         recoveryBuffer: 30,\n41 |         postProcedureInstructions: ['Rest for 24 hours'],\n42 |         assistantRequired: false // Added to fix missing property\n43 |       }\n44 | \n45 |       const result = scheduleAestheticAppointment(appointment)\n                          ^\nReferenceError: scheduleAestheticAppointment is not defined\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/service-validation.test.ts:45:22)\n(fail) Healthcare Core Service Validation > Aesthetic Scheduling Service > should handle appointment scheduling with complete data [0.09ms]\n45 |       const result = scheduleAestheticAppointment(appointment)\n46 |       expect(result).toBeDefined()\n47 |     })\n48 | \n49 |     it('should handle unused parameters in scheduling functions', () => {\n50 |       const result = getSchedulingPreferences()\n                          ^\nReferenceError: getSchedulingPreferences is not defined\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/service-validation.test.ts:50:22)\n(fail) Healthcare Core Service Validation > Aesthetic Scheduling Service > should handle unused parameters in scheduling functions [0.06ms]\n52 |     })\n53 |   })\n54 | \n55 |   describe('Financial Management Service', () => {\n56 |     it('should handle financial data without unused parameters', () => {\n57 |       const result = generateFinancialReport()\n                          ^\nReferenceError: generateFinancialReport is not defined\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/service-validation.test.ts:57:22)\n(fail) Healthcare Core Service Validation > Financial Management Service > should handle financial data without unused parameters [0.06ms]\n59 |     })\n60 |   })\n61 | \n62 |   describe('Inventory Management Service', () => {\n63 |     it('should handle inventory operations without unused parameters', () => {\n64 |       const result = updateInventoryLevels()\n                          ^\nReferenceError: updateInventoryLevels is not defined\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/service-validation.test.ts:64:22)\n(fail) Healthcare Core Service Validation > Inventory Management Service > should handle inventory operations without unused parameters [0.05ms]\n66 |     })\n67 |   })\n68 | \n69 |   describe('Patient Engagement Service', () => {\n70 |     it('should handle patient engagement without unused parameters', () => {\n71 |       const result = sendPatientNotification()\n                          ^\nReferenceError: sendPatientNotification is not defined\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/service-validation.test.ts:71:22)\n(fail) Healthcare Core Service Validation > Patient Engagement Service > should handle patient engagement without unused parameters [0.06ms]\n73 |     })\n74 |   })\n75 | \n76 |   describe('Treatment Planning Service', () => {\n77 |     it('should handle treatment planning without unused parameters', () => {\n78 |       const result = createTreatmentPlan()\n                          ^\nReferenceError: createTreatmentPlan is not defined\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/service-validation.test.ts:78:22)\n(fail) Healthcare Core Service Validation > Treatment Planning Service > should handle treatment planning without unused parameters [0.05ms]\n80 |     })\n81 |   })\n82 | \n83 |   describe('Multi-Professional Coordination Service', () => {\n84 |     it('should handle professional coordination without unused parameters', () => {\n85 |       const result = coordinateMultiProfessionalTeam()\n                          ^\nReferenceError: coordinateMultiProfessionalTeam is not defined\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/healthcare-core/service-validation.test.ts:85:22)\n(fail) Healthcare Core Service Validation > Multi-Professional Coordination Service > should handle professional coordination without unused parameters [0.06ms]\n\napps/web/src/__tests__/integration/font-loading.test.ts:\n\n# Unhandled error between tests\n-------------------------------\nerror: Cannot find module '@/lib/fonts/performance' from '/home/vibecode/neonpro/apps/web/src/__tests__/integration/font-loading.test.ts'\n-------------------------------\n\n\napps/web/src/__tests__/integration/component-compatibility.test.ts:\n\n# Unhandled error between tests\n-------------------------------\nerror: Cannot find module '@/components/ui/magic-card' from '/home/vibecode/neonpro/apps/web/src/__tests__/integration/component-compatibility.test.ts'\n-------------------------------\n\n\napps/web/src/__tests__/integration/accessibility.test.ts:\n\n# Unhandled error between tests\n-------------------------------\nerror: Cannot find module '@/lib/accessibility/wcag-audit' from '/home/vibecode/neonpro/apps/web/src/__tests__/integration/accessibility.test.ts'\n-------------------------------\n\n\napps/web/src/__tests__/integration/theme-switching.test.ts:\n\n# Unhandled error between tests\n-------------------------------\n1 | (function (entry, fetcher)\n              ^\nSyntaxError: Export named 'toHaveNoViolations' not found in module '/home/vibecode/neonpro/node_modules/vitest-axe/dist/index.js'.\n      at loadAndEvaluateModule (1:11)\n      at linkAndEvaluateModule (1:11)\n      at loadAndEvaluateModule (2:1)\n      at processTicksAndRejections (7:39)\n-------------------------------\n\n\napps/web/src/__tests__/integration/theme-consistency.test.tsx:\n\n# Unhandled error between tests\n-------------------------------\n1 | (function (entry, fetcher)\n              ^\nSyntaxError: Export named 'toHaveNoViolations' not found in module '/home/vibecode/neonpro/node_modules/vitest-axe/dist/index.js'.\n      at loadAndEvaluateModule (1:11)\n      at linkAndEvaluateModule (1:11)\n      at loadAndEvaluateModule (2:1)\n      at processTicksAndRejections (7:39)\n-------------------------------\n\n\napps/web/src/__tests__/unit/theme-accessibility.test.ts:\n29 | \n30 |   describe('Color Contrast Validation', () => {\n31 |     it('should pass AA compliance for NEONPRO primary on white background', () => {\n32 |       const result = validateColorContrast('#AC9469', '#FFFFFF');\n33 | \n34 |       expect(result.meetsMinimum).toBe(true);\n                                       ^\nerror: expect(received).toBe(expected)\n\nExpected: true\nReceived: false\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/unit/theme-accessibility.test.ts:34:35)\n(fail) WCAG 2.1 AA Compliance > Color Contrast Validation > should pass AA compliance for NEONPRO primary on white background [0.38ms]\n(pass) WCAG 2.1 AA Compliance > Color Contrast Validation > should pass AA compliance for white text on NEONPRO deep blue [0.07ms]\n(pass) WCAG 2.1 AA Compliance > Color Contrast Validation > should validate black text on white background (perfect contrast) [0.06ms]\n(pass) WCAG 2.1 AA Compliance > Color Contrast Validation > should fail compliance for insufficient contrast [0.03ms]\n63 | \n64 |   describe('Theme Accessibility Validation', () => {\n65 |     it('should validate complete NEONPRO theme accessibility', () => {\n66 |       const result = validateThemeAccessibility(neonproColorScheme);\n67 | \n68 |       expect(result.isCompliant).toBe(true);\n                                      ^\nerror: expect(received).toBe(expected)\n\nExpected: true\nReceived: false\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/unit/theme-accessibility.test.ts:68:34)\n(fail) WCAG 2.1 AA Compliance > Theme Accessibility Validation > should validate complete NEONPRO theme accessibility [0.41ms]\n(pass) WCAG 2.1 AA Compliance > Theme Accessibility Validation > should detect accessibility violations in poor color scheme [0.10ms]\n(pass) WCAG 2.1 AA Compliance > Theme Accessibility Validation > should provide recommendations for good contrast [0.14ms]\n(pass) WCAG 2.1 AA Compliance > Accessibility Report Generation > should generate comprehensive accessibility report [0.18ms]\n(pass) WCAG 2.1 AA Compliance > Accessibility Report Generation > should include LGPD compliance in report [0.07ms]\n116 |       const result = validateConstitutionalCompliance(neonproColorScheme);\n117 | \n118 |       expect(result.lgpdCompliant).toBe(true);\n119 |       expect(result.anvisaCompliant).toBe(true);\n120 |       expect(result.cfmCompliant).toBe(true);\n121 |       expect(result.wcagCompliant).toBe(true);\n                                         ^\nerror: expect(received).toBe(expected)\n\nExpected: true\nReceived: false\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/unit/theme-accessibility.test.ts:121:36)\n(fail) WCAG 2.1 AA Compliance > Constitutional Compliance > should validate Brazilian healthcare constitutional compliance [0.14ms]\n(pass) WCAG 2.1 AA Compliance > Constitutional Compliance > should handle non-compliant schemes for constitutional requirements [0.05ms]\n146 |       const brandRelatedViolations = result.violations.filter(v =>\n147 |         v.description.includes('NEONPRO') || v.criterion.includes('Brazilian')\n148 |       );\n149 | \n150 |       // Should not have critical brand color violations\n151 |       expect(brandRelatedViolations.filter(v => v.level === 'error')).toHaveLength(0);\n                                                                            ^\nerror: expect(received).toHaveLength(expected)\n\nExpected length: 0\nReceived length: 1\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/unit/theme-accessibility.test.ts:151:71)\n(fail) WCAG 2.1 AA Compliance > Brazilian Aesthetic Clinic Specific Tests > should validate NEONPRO brand color combinations [0.11ms]\n153 | \n154 |     it('should ensure mobile-first accessibility for 95% mobile usage', () => {\n155 |       // Test that color contrasts work well on mobile devices\n156 |       const result = validateThemeAccessibility(neonproColorScheme);\n157 | \n158 |       expect(result.score).toBeGreaterThanOrEqual(85); // High standard for mobile\n                                 ^\nerror: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 85\nReceived: 50\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/unit/theme-accessibility.test.ts:158:28)\n(fail) WCAG 2.1 AA Compliance > Brazilian Aesthetic Clinic Specific Tests > should ensure mobile-first accessibility for 95% mobile usage [0.08ms]\n(pass) WCAG 2.1 AA Compliance > Brazilian Aesthetic Clinic Specific Tests > should validate focus states for accessibility [0.06ms]\n\napps/web/src/__tests__/financial/tuss-sus-integration.test.ts:\n74 |         validCategories: ['MEDICAL', 'SURGICAL', 'DIAGNOSTIC'],\n75 |         suggestedCodes: ['10101012', '20101014'], // Suggested medical codes\n76 |         regulatoryNotes: 'Aesthetic procedures require specific TUSS classification'\n77 |       })\n78 | \n79 |       await expect(mockTUSSValidator.validateProcedureCodes(aestheticProcedure)).resolves.toEqual({\n                                                                                               ^\nerror: expect(received).toEqual(expected)\n\n  {\n    \"error\": \"INVALID_TUSS_CODE_FOR_AESTHETIC_PROCEDURE\",\n+   \"regulatoryNotes\": \"Aesthetic procedures require specific TUSS classification\",\n+   \"suggestedCodes\": [\n+     \"10101012\",\n+     \"20101014\",\n+   ],\n    \"valid\": false,\n+   \"validCategories\": [\n+     \"MEDICAL\",\n+     \"SURGICAL\",\n+     \"DIAGNOSTIC\",\n+   ],\n  }\n\n- Expected  - 0\n+ Received  + 10\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:79:91)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:62:91)\n(fail) Financial Operations - TUSS/SUS Integration > RED PHASE - Failing Tests for TUSS/SUS Integration > should fail when TUSS codes are not properly validated for aesthetic procedures [0.91ms]\n 99 |         certificateExpired: true,\n100 |         regulatoryCompliance: 'NON_COMPLIANT',\n101 |         lastSync: null\n102 |       })\n103 | \n104 |       await expect(mockSUSIntegration.validateSUSProcedure(susProcedure)).resolves.toEqual({\n                                                                                         ^\nerror: expect(received).toEqual(expected)\n\n  {\n+   \"certificateExpired\": true,\n    \"error\": \"SUS_INTEGRATION_NOT_CONFIGURED\",\n+   \"lastSync\": null,\n+   \"regulatoryCompliance\": \"NON_COMPLIANT\",\n+   \"susConnection\": \"DISCONNECTED\",\n    \"valid\": false,\n  }\n\n- Expected  - 0\n+ Received  + 4\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:104:84)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:85:93)\n(fail) Financial Operations - TUSS/SUS Integration > RED PHASE - Failing Tests for TUSS/SUS Integration > should fail when SUS integration is not properly configured for public healthcare [0.13ms]\n130 |         invalidCodes: ['30101015'],\n131 |         claimRejected: true,\n132 |         rejectionReason: 'INVALID_PROCEDURE_CODE_FOR_INSURANCE_COVERAGE'\n133 |       })\n134 | \n135 |       await expect(mockFinancialService.processInsuranceClaim(insuranceClaim)).resolves.toEqual({\n                                                                                              ^\nerror: expect(received).toEqual(expected)\n\n  {\n+   \"claimRejected\": true,\n    \"error\": \"INSURANCE_CLAIM_TUSS_VALIDATION_FAILED\",\n+   \"invalidCodes\": [\n+     \"30101015\",\n+   ],\n+   \"rejectionReason\": \"INVALID_PROCEDURE_CODE_FOR_INSURANCE_COVERAGE\",\n    \"success\": false,\n  }\n\n- Expected  - 0\n+ Received  + 5\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:135:89)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:110:88)\n(fail) Financial Operations - TUSS/SUS Integration > RED PHASE - Failing Tests for TUSS/SUS Integration > should fail when insurance claims are not properly processed with TUSS codes [0.14ms]\n156 |         auditLogMissing: true,\n157 |         complianceIssues: ['MISSING_TUSS_CODE_ASSIGNMENT', 'INSURANCE_CALCULATION_ERROR'],\n158 |         regulatoryRisk: 'HIGH'\n159 |       })\n160 | \n161 |       await expect(mockFinancialService.generateInvoice(financialTransaction)).resolves.toEqual({\n                                                                                              ^\nerror: expect(received).toEqual(expected)\n\n  {\n+   \"auditLogMissing\": true,\n+   \"complianceIssues\": [\n+     \"MISSING_TUSS_CODE_ASSIGNMENT\",\n+     \"INSURANCE_CALCULATION_ERROR\",\n+   ],\n    \"error\": \"FINANCIAL_AUDIT_TRAIL_NOT_IMPLEMENTED\",\n+   \"regulatoryRisk\": \"HIGH\",\n    \"success\": false,\n  }\n\n- Expected  - 0\n+ Received  + 6\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:161:89)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:141:91)\n(fail) Financial Operations - TUSS/SUS Integration > RED PHASE - Failing Tests for TUSS/SUS Integration > should fail when financial transactions are not properly audited for compliance [0.13ms]\n184 |           }\n185 |         ],\n186 |         recommendations: ['USE_ALTERNATIVE_CODES', 'SEPARATE_PROCEDURES']\n187 |       })\n188 | \n189 |       await expect(mockTUSSValidator.checkCodeCompatibility(procedureCompatibility)).resolves.toEqual({\n                                                                                                    ^\nerror: expect(received).toEqual(expected)\n\n  {\n    \"compatible\": false,\n+   \"conflicts\": [\n+     {\n+       \"code1\": \"20101014\",\n+       \"code2\": \"30101015\",\n+       \"conflictType\": \"OVERLAPPING_PROCEDURES\",\n+       \"severity\": \"HIGH\",\n+     },\n+   ],\n    \"error\": \"TUSS_CODE_INCOMPATIBILITY_DETECTED\",\n+   \"recommendations\": [\n+     \"USE_ALTERNATIVE_CODES\",\n+     \"SEPARATE_PROCEDURES\",\n+   ],\n  }\n\n- Expected  - 0\n+ Received  + 12\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:189:95)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:167:92)\n(fail) Financial Operations - TUSS/SUS Integration > RED PHASE - Failing Tests for TUSS/SUS Integration > should fail when TUSS code compatibility is not checked with existing procedures [0.14ms]\n211 |         manualProcessingRequired: true,\n212 |         reportGenerated: false,\n213 |         submissionStatus: 'FAILED'\n214 |       })\n215 | \n216 |       await expect(mockSUSIntegration.manageSUSReporting(susReport)).resolves.toEqual({\n                                                                                    ^\nerror: expect(received).toEqual(expected)\n\n  {\n    \"error\": \"SUS_REPORTING_AUTOMATION_NOT_IMPLEMENTED\",\n+   \"manualProcessingRequired\": true,\n+   \"reportGenerated\": false,\n+   \"submissionStatus\": \"FAILED\",\n    \"success\": false,\n  }\n\n- Expected  - 0\n+ Received  + 3\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:216:79)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:195:94)\n(fail) Financial Operations - TUSS/SUS Integration > RED PHASE - Failing Tests for TUSS/SUS Integration > should fail when SUS reporting is not properly automated for regulatory compliance [0.28ms]\n238 |         newVersionAvailable: '2024_01',\n239 |         complianceIssues: ['USING_DEPRECATED_TUSS_CODES'],\n240 |         actionRequired: 'UPDATE_TUSS_TABLE_AND_REVALIDATE'\n241 |       })\n242 | \n243 |       await expect(mockTUSSValidator.validateBillingRules(billingValidation)).resolves.toEqual({\n                                                                                             ^\nerror: expect(received).toEqual(expected)\n\n  {\n+   \"actionRequired\": \"UPDATE_TUSS_TABLE_AND_REVALIDATE\",\n+   \"complianceIssues\": [\n+     \"USING_DEPRECATED_TUSS_CODES\",\n+   ],\n    \"error\": \"TUSS_TABLE_UPDATE_VALIDATION_FAILED\",\n+   \"newVersionAvailable\": \"2024_01\",\n+   \"outdatedCodes\": [\n+     \"10101012\",\n+     \"20101014\",\n+   ],\n    \"valid\": false,\n  }\n\n- Expected  - 0\n+ Received  + 9\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:243:88)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:222:87)\n(fail) Financial Operations - TUSS/SUS Integration > RED PHASE - Failing Tests for TUSS/SUS Integration > should fail when billing rules are not validated against TUSS table updates [0.13ms]\n266 |         tussValidation: 'NOT_PERFORMED',\n267 |         paymentAuthorized: false,\n268 |         regulatoryCompliance: 'AT_RISK'\n269 |       })\n270 | \n271 |       await expect(mockFinancialService.managePaymentProcessing(paymentProcessing)).resolves.toEqual({\n                                                                                                   ^\nerror: expect(received).toEqual(expected)\n\n  {\n    \"error\": \"PAYMENT_PROCESSING_TUSS_INTEGRATION_MISSING\",\n+   \"paymentAuthorized\": false,\n+   \"regulatoryCompliance\": \"AT_RISK\",\n    \"success\": false,\n+   \"tussValidation\": \"NOT_PERFORMED\",\n  }\n\n- Expected  - 0\n+ Received  + 3\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:271:94)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:249:91)\n(fail) Financial Operations - TUSS/SUS Integration > RED PHASE - Failing Tests for TUSS/SUS Integration > should fail when payment processing is not integrated with TUSS code validation [0.13ms]\n291 |         coveragePercentage: 0,\n292 |         patientResponsibility: 200.00,\n293 |         requiresAuthorization: true\n294 |       })\n295 | \n296 |       await expect(mockSUSIntegration.checkSUSCoverage(susCoverageRequest)).resolves.toEqual({\n                                                                                           ^\nerror: expect(received).toEqual(expected)\n\n  {\n+   \"coveragePercentage\": 0,\n    \"covered\": false,\n+   \"eligibilityStatus\": \"UNKNOWN\",\n    \"error\": \"SUS_COVERAGE_CHECK_NOT_IMPLEMENTED\",\n+   \"patientResponsibility\": 200,\n+   \"requiresAuthorization\": true,\n  }\n\n- Expected  - 0\n+ Received  + 4\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:296:86)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:277:98)\n(fail) Financial Operations - TUSS/SUS Integration > RED PHASE - Failing Tests for TUSS/SUS Integration > should fail when SUS coverage checking is not properly implemented for public patients [0.16ms]\n326 |           insuranceCoverage: 560.00,\n327 |           patientResponsibility: 240.00\n328 |         }\n329 |       })\n330 | \n331 |       await expect(mockHealthcareBilling.calculateProcedureCost(billingCalculation)).resolves.toEqual({\n                                                                                                    ^\nerror: expect(received).toEqual(expected)\n\n  {\n+   \"calculationErrors\": [\n+     \"INVALID_MODIFIER_APPLICATION\",\n+     \"INSURANCE_CALCULATION_ERROR\",\n+   ],\n    \"error\": \"BILLING_CALCULATION_VALIDATION_FAILED\",\n+   \"suggestedCorrection\": {\n+     \"baseValue\": 800,\n+     \"finalValue\": 800,\n+     \"insuranceCoverage\": 560,\n+     \"modifier\": 1,\n+     \"patientResponsibility\": 240,\n+   },\n    \"valid\": false,\n  }\n\n- Expected  - 0\n+ Received  + 11\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:331:95)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:302:87)\n(fail) Financial Operations - TUSS/SUS Integration > RED PHASE - Failing Tests for TUSS/SUS Integration > should fail when healthcare billing calculations are not properly validated [0.15ms]\n351 |         reportGenerated: false,\n352 |         missingData: ['TUSS_CODE_ANALYSIS', 'REVENUE_BY_PROCEDURE_TYPE'],\n353 |         dataQuality: 'POOR'\n354 |       })\n355 | \n356 |       await expect(mockHealthcareBilling.generateBillingReport(reportRequest)).resolves.toEqual({\n                                                                                              ^\nerror: expect(received).toEqual(expected)\n\n  {\n+   \"dataQuality\": \"POOR\",\n    \"error\": \"FINANCIAL_REPORT_TUSS_BREAKDOWN_MISSING\",\n+   \"missingData\": [\n+     \"TUSS_CODE_ANALYSIS\",\n+     \"REVENUE_BY_PROCEDURE_TYPE\",\n+   ],\n+   \"reportGenerated\": false,\n    \"success\": false,\n  }\n\n- Expected  - 0\n+ Received  + 6\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:356:89)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:339:89)\n(fail) Financial Operations - TUSS/SUS Integration > Integration Tests > should fail when financial reports are not generated with TUSS code breakdown [0.13ms]\n376 |         planApproved: false,\n377 |         insuranceAuthorization: 'PENDING',\n378 |         patientCreditAnalysis: 'NOT_PERFORMED'\n379 |       })\n380 | \n381 |       await expect(mockHealthcareBilling.managePaymentPlans(paymentPlan)).resolves.toEqual({\n                                                                                         ^\nerror: expect(received).toEqual(expected)\n\n  {\n    \"error\": \"PAYMENT_PLAN_INSURANCE_INTEGRATION_FAILED\",\n+   \"insuranceAuthorization\": \"PENDING\",\n+   \"patientCreditAnalysis\": \"NOT_PERFORMED\",\n+   \"planApproved\": false,\n    \"success\": false,\n  }\n\n- Expected  - 0\n+ Received  + 3\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:381:84)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:362:94)\n(fail) Financial Operations - TUSS/SUS Integration > Integration Tests > should fail when payment plans are not properly managed with insurance integration [0.13ms]\n(pass) Financial Operations - TUSS/SUS Integration > Performance Tests > should fail when TUSS code validation takes longer than 1 second [1501.03ms]\n428 |       const promises = claimSubmissions.map(claim => mockSUSIntegration.submitSUSClaim(claim))\n429 |       await Promise.allSettled(promises)\n430 |       const endTime = Date.now()\n431 | \n432 |       const processingTime = endTime - startTime\n433 |       expect(processingTime).toBeGreaterThan(30000) // Should process 100 claims in < 30s\n                                   ^\nerror: expect(received).toBeGreaterThan(expected)\n\nExpected: > 30000\nReceived: 1\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:433:30)\n(fail) Financial Operations - TUSS/SUS Integration > Performance Tests > should fail when SUS integration cannot handle 100 concurrent claim submissions [1.12ms]\n453 |         securityIssues: ['PAYMENT_CARD_NOT_ENCRYPTED', 'PATIENT_DATA_NOT_MASKED'],\n454 |         encryptionRequired: true,\n455 |         complianceStatus: 'NON_COMPLIANT'\n456 |       })\n457 | \n458 |       await expect(validateFinancialEncryption(financialData)).resolves.toEqual({\n                                                                              ^\nerror: expect(received).toEqual(expected)\n\n  {\n+   \"complianceStatus\": \"NON_COMPLIANT\",\n    \"encrypted\": false,\n+   \"encryptionRequired\": true,\n    \"securityIssues\": [\n      \"PAYMENT_CARD_NOT_ENCRYPTED\",\n+     \"PATIENT_DATA_NOT_MASKED\",\n    ],\n  }\n\n- Expected  - 0\n+ Received  + 3\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:458:73)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:438:89)\n(fail) Financial Operations - TUSS/SUS Integration > Security Tests > should fail when financial data is not properly encrypted for TUSS processing [0.23ms]\n475 |         vulnerabilities: ['PLAINTEXT_PASSWORD', 'CERTIFICATE_NOT_PASSWORD_PROTECTED'],\n476 |         encryptionRequired: true,\n477 |         securityScore: 2 // Out of 10\n478 |       })\n479 | \n480 |       await expect(validateCredentialSecurity(susCredentials)).resolves.toEqual({\n                                                                              ^\nerror: expect(received).toEqual(expected)\n\n  {\n+   \"encryptionRequired\": true,\n    \"secure\": false,\n+   \"securityScore\": 2,\n    \"vulnerabilities\": [\n      \"PLAINTEXT_PASSWORD\",\n+     \"CERTIFICATE_NOT_PASSWORD_PROTECTED\",\n    ],\n  }\n\n- Expected  - 0\n+ Received  + 3\n\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:480:73)\n      at <anonymous> (/home/vibecode/neonpro/apps/web/src/__tests__/financial/tuss-sus-integration.test.ts:464:81)\n(fail) Financial Operations - TUSS/SUS Integration > Security Tests > should fail when SUS integration credentials are not properly secured [0.18ms]\n\napps/web/src/__tests__/scheduling/real-time-appointment-system.test.ts:\n============================================================\nBun v1.2.23 (cf136713) Linux x64\nWSL Kernel v6.6.87 | glibc v2.39\nCPU: sse42 popcnt avx avx2 avx512\nArgs: \"bun\" \"test\" \"--coverage\"\nFeatures: Bun.stderr(2) Bun.stdin(2) Bun.stdout(2) bunfig dotenv(2) fetch(67) jsc transpiler_cache(30) tsconfig(13) tsconfig_paths(9) \nBuiltins: \"node:assert\" \"node:buffer\" \"node:child_process\" \"node:crypto\" \"node:events\" \"node:fs\" \"node:http\" \"node:https\" \"node:module\" \"node:net\" \"node:os\" \"node:path\" \"node:process\" \"node:stream\" \"node:tls\" \"node:tty\" \"node:url\" \"node:util\" \"node:vm\" \"node:zlib\" \"ws\" \nElapsed: 315688ms | User: 1424ms | Sys: 1259ms\nRSS: 0.26GB | Peak: 0.24GB | Commit: 0.26GB | Faults: 186 | Machine: 56.86GB\n\npanic(main thread): unreachable\noh no: Bun has crashed. This indicates a bug in Bun, not your code.\n\nTo send a redacted crash report to Bun's team,\nplease file a GitHub issue using the link below:\n\n https://bun.report/1.2.23/lt1cf136714Bu0kQwmsi2Cqy0n+Cu5nk/C25l+6Dohqx6D6wiv6D62hv6D09yztE_890thEA0eNorzStKTUzOSEzKSQUAG3AEew\n\nerror: script \"test:coverage\" was terminated by signal SIGILL (Illegal instruction)\nIllegal instruction (core dumped)\n",
      "compliant": false
    },
    "performance": {
      "status": "failed",
      "error": "Cannot access 'performance' before initialization.",
      "compliant": false
    }
  },
  "summary": {
    "totalTools": 6,
    "passedTools": 1,
    "failedTools": 5,
    "errors": 5,
    "warnings": 0,
    "overallCompliant": false
  },
  "errors": [
    "OXLint execution failed",
    "ESLint execution failed",
    "TypeScript execution failed",
    "Vitest execution failed",
    "Performance benchmarking failed"
  ],
  "warnings": [],
  "recommendations": [
    "🔧 Address all critical errors before deployment",
    "🎯 Focus on failing quality gates for compliance",
    "🏥 Validate healthcare compliance with LGPD, ANVISA, CFM",
    "⚡ Optimize performance for Bun runtime efficiency",
    "🧪 Maintain 90%+ test coverage for healthcare features"
  ]
}