{
  "actions": [
    {
      "action": "review",
      "module": "highlight.js",
      "resolves": [
        {
          "id": 1086450,
          "path": "packages__devops>docker>highlight.js",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "marked",
      "resolves": [
        {
          "id": 1088022,
          "path": "packages__devops>docker>dox>marked",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1095051,
          "path": "packages__devops>docker>dox>marked",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1095052,
          "path": "packages__devops>docker>dox>marked",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "got",
      "resolves": [
        {
          "id": 1088948,
          "path": "packages__devops>kubernetes-client>openid-client>got",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "ejs",
      "resolves": [
        {
          "id": 1089270,
          "path": "packages__devops>docker>ejs",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1098366,
          "path": "packages__devops>docker>ejs",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "slug",
      "resolves": [
        {
          "id": 1090537,
          "path": "packages__devops>docker>toc>slug",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "markdown-it",
      "resolves": [
        {
          "id": 1092663,
          "path": "packages__devops>docker>markdown-it",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "xlsx",
      "resolves": [
        {
          "id": 1094599,
          "path": ".>xlsx",
          "dev": false,
          "bundled": false,
          "optional": false
        },
        {
          "id": 1096911,
          "path": ".>xlsx",
          "dev": false,
          "bundled": false,
          "optional": false
        }
      ]
    },
    {
      "action": "review",
      "module": "hawk",
      "resolves": [
        {
          "id": 1095062,
          "path": "packages__devops>docker>less>request>hawk",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "request",
      "resolves": [
        {
          "id": 1096727,
          "path": "packages__devops>docker>less>request",
          "dev": false,
          "bundled": false,
          "optional": false
        },
        {
          "id": 1096727,
          "path": "packages__devops>kubernetes-client>request",
          "dev": false,
          "bundled": false,
          "optional": false
        }
      ]
    },
    {
      "action": "review",
      "module": "tough-cookie",
      "resolves": [
        {
          "id": 1097682,
          "path": "packages__devops>docker>less>request>tough-cookie",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1097682,
          "path": "packages__devops>kubernetes-client>request>tough-cookie",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "ajv",
      "resolves": [
        {
          "id": 1097685,
          "path": "packages__devops>docker>less>request>har-validator>ajv",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "undici",
      "resolves": [
        {
          "id": 1101610,
          "path": "packages__devops>@vercel/node>undici",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1104501,
          "path": "packages__devops>@vercel/node>undici",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "path-to-regexp",
      "resolves": [
        {
          "id": 1101846,
          "path": "packages__devops>@vercel/node>path-to-regexp",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "esbuild",
      "resolves": [
        {
          "id": 1102341,
          "path": "apps__api>vitest>vite>esbuild",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1102341,
          "path": "packages__devops>@vercel/node>esbuild",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "jsonpath-plus",
      "resolves": [
        {
          "id": 1102423,
          "path": "packages__devops>kubernetes-client>@kubernetes/client-node>jsonpath-plus",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1102895,
          "path": "packages__devops>kubernetes-client>@kubernetes/client-node>jsonpath-plus",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "cookie",
      "resolves": [
        {
          "id": 1103907,
          "path": "packages__monitoring>lighthouse>@sentry/node>cookie",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "hoek",
      "resolves": [
        {
          "id": 1105092,
          "path": "packages__devops>docker>less>request>hawk>hoek",
          "dev": false,
          "bundled": false,
          "optional": false
        },
        {
          "id": 1105121,
          "path": "packages__devops>docker>less>request>hawk>hoek",
          "dev": false,
          "bundled": false,
          "optional": false
        }
      ]
    },
    {
      "action": "review",
      "module": "form-data",
      "resolves": [
        {
          "id": 1106509,
          "path": "packages__devops>docker>less>request>form-data",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106509,
          "path": "packages__devops>kubernetes-client>request>form-data",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "tmp",
      "resolves": [
        {
          "id": 1106849,
          "path": ".>@turbo/gen>node-plop>inquirer>external-editor>tmp",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "lodash",
      "resolves": [
        {
          "id": 1106900,
          "path": "packages__devops>docker>dox>jsdoctypeparser>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106900,
          "path": "packages__devops>docker>toc>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106913,
          "path": "packages__devops>docker>dox>jsdoctypeparser>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106913,
          "path": "packages__devops>docker>toc>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106914,
          "path": "packages__devops>docker>dox>jsdoctypeparser>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106914,
          "path": "packages__devops>docker>toc>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106918,
          "path": "packages__devops>docker>dox>jsdoctypeparser>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106918,
          "path": "packages__devops>docker>toc>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106919,
          "path": "packages__devops>docker>dox>jsdoctypeparser>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106919,
          "path": "packages__devops>docker>toc>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106920,
          "path": "packages__devops>docker>dox>jsdoctypeparser>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106923,
          "path": "packages__devops>docker>dox>jsdoctypeparser>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1106923,
          "path": "packages__devops>docker>toc>lodash",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    }
  ],
  "advisories": {
    "1086450": {
      "findings": [
        {
          "version": "9.18.5",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/highlightjs/highlight.js/security/advisories/GHSA-7wwv-vh3v-89cq\n- https://github.com/highlightjs/highlight.js/commit/373b9d862401162e832ce77305e49b859e110f9c\n- https://www.npmjs.com/package/@highlightjs/cdn-assets\n- https://www.npmjs.com/package/highlight.js\n- https://github.com/advisories/GHSA-7wwv-vh3v-89cq",
      "created": "2020-12-04T16:47:20.000Z",
      "id": 1086450,
      "npm_advisory_id": null,
      "overview": "### Impact: Potential ReDOS vulnerabilities (exponential and polynomial RegEx backtracking)\n\n[oswasp](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS): \n\n> The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\n\nIf are you are using Highlight.js to highlight user-provided data you are possibly vulnerable.  On the client-side (in a browser or Electron environment) risks could include lengthy freezes or crashes... On the server-side infinite freezes could occur... effectively preventing users from accessing your app or service (ie, Denial of Service).\n\nThis is an issue with grammars shipped with the parser (and potentially 3rd party grammars also), not the parser itself. If you are using Highlight.js with any of the following grammars you are vulnerable.  If you are using `highlightAuto` to detect the language (and have any of these grammars registered) you are vulnerable. Exponential grammars (C, Perl, JavaScript) are auto-registered when using the common grammar subset/library `require('highlight.js/lib/common')` as of 10.4.0 - see https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.4.0/build/highlight.js\n\nAll versions prior to 10.4.1 are vulnerable, including version 9.18.5. \n\n**Grammars with exponential backtracking issues:**\n\n  - c-like (c, cpp, arduino)\n  - handlebars (htmlbars)\n  - gams\n  - perl\n  - jboss-cli\n  - r\n  - erlang-repl\n  - powershell\n  - routeros\n  - livescript (10.4.0 and 9.18.5 included this fix)\n  - javascript & typescript (10.4.0 included partial fixes)\n\nAnd of course any aliases of those languages have the same issue. ie: `hpp` is no safer than `cpp`.\n\n**Grammars with polynomial backtracking issues:**\n\n- kotlin\n- gcode\n- d\n- aspectj\n- moonscript\n- coffeescript/livescript\n- csharp\n- scilab\n- crystal\n- elixir\n- basic\n- ebnf\n- ruby\n- fortran/irpf90\n- livecodeserver\n- yaml\n- x86asm\n- dsconfig\n- markdown\n- ruleslanguage\n- xquery\n- sqf\n\nAnd again: any aliases of those languages have the same issue. ie: `ruby` and `rb` share the same ruby issues.\n\n\n### Patches\n\n- Version 10.4.1 resolves these vulnerabilities.  Please upgrade.\n\n### Workarounds / Mitigations\n\n- Discontinue use the affected grammars. (or perhaps use only those with poly vs exponential issues)\n- Attempt cherry-picking the grammar fixes into older versions...\n- Attempt using newer CDN versions of any affected languages.  (ie using an older CDN version of the library with newer CDN grammars).  Your mileage may vary.\n\n### References\n\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue: https://github.com/highlightjs/highlight.js/issues\n* Email us at [security@highlightjs.com](mailto:security@highlightjs.com)",
      "reported_by": null,
      "title": "ReDOS vulnerabities: multiple grammars",
      "metadata": null,
      "cves": [],
      "access": "public",
      "severity": "moderate",
      "module_name": "highlight.js",
      "vulnerable_versions": ">=9.0.0 <10.4.1",
      "github_advisory_id": "GHSA-7wwv-vh3v-89cq",
      "recommendation": "Upgrade to version 10.4.1 or later",
      "patched_versions": ">=10.4.1",
      "updated": "2023-01-09T05:04:08.000Z",
      "cvss": {
        "score": 0,
        "vectorString": null
      },
      "cwe": [
        "CWE-20",
        "CWE-400"
      ],
      "url": "https://github.com/advisories/GHSA-7wwv-vh3v-89cq"
    },
    "1088022": {
      "findings": [
        {
          "version": "0.3.19",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/markedjs/marked/commit/b15e42b67cec9ded8505e9d68bb8741ad7a9590d\n- https://github.com/markedjs/marked/pull/1460\n- https://snyk.io/vuln/SNYK-JS-MARKED-174116\n- https://www.npmjs.com/advisories/812\n- https://github.com/markedjs/marked/releases/tag/v0.6.2\n- https://github.com/advisories/GHSA-xf5p-87ch-gxw2",
      "created": "2019-06-05T14:10:03.000Z",
      "id": 1088022,
      "npm_advisory_id": null,
      "overview": "Versions of `marked` from 0.3.14 until 0.6.2 are vulnerable to Regular Expression Denial of Service. Email addresses may be evaluated in quadratic time, allowing attackers to potentially crash the node process due to resource exhaustion.\n\n\n## Recommendation\n\nUpgrade to version 0.6.2 or later.",
      "reported_by": null,
      "title": "Marked ReDoS due to email addresses being evaluated in quadratic time",
      "metadata": null,
      "cves": [],
      "access": "public",
      "severity": "moderate",
      "module_name": "marked",
      "vulnerable_versions": ">=0.3.14 <0.6.2",
      "github_advisory_id": "GHSA-xf5p-87ch-gxw2",
      "recommendation": "Upgrade to version 0.6.2 or later",
      "patched_versions": ">=0.6.2",
      "updated": "2023-01-11T05:08:03.000Z",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
      },
      "cwe": [
        "CWE-400"
      ],
      "url": "https://github.com/advisories/GHSA-xf5p-87ch-gxw2"
    },
    "1088948": {
      "findings": [
        {
          "version": "9.6.0",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2022-33987\n- https://github.com/sindresorhus/got/pull/2047\n- https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0\n- https://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc\n- https://github.com/sindresorhus/got/releases/tag/v11.8.5\n- https://github.com/sindresorhus/got/releases/tag/v12.1.0\n- https://github.com/advisories/GHSA-pfrx-2q88-qq97",
      "created": "2022-06-19T00:00:21.000Z",
      "id": 1088948,
      "npm_advisory_id": null,
      "overview": "The got package before 11.8.5 and 12.1.0 for Node.js allows a redirect to a UNIX socket.",
      "reported_by": null,
      "title": "Got allows a redirect to a UNIX socket",
      "metadata": null,
      "cves": [
        "CVE-2022-33987"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "got",
      "vulnerable_versions": "<11.8.5",
      "github_advisory_id": "GHSA-pfrx-2q88-qq97",
      "recommendation": "Upgrade to version 11.8.5 or later",
      "patched_versions": ">=11.8.5",
      "updated": "2023-01-27T05:05:01.000Z",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
      },
      "cwe": [],
      "url": "https://github.com/advisories/GHSA-pfrx-2q88-qq97"
    },
    "1089270": {
      "findings": [
        {
          "version": "2.7.4",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2022-29078\n- https://eslam.io/posts/ejs-server-side-template-injection-rce/\n- https://github.com/mde/ejs/commit/15ee698583c98dadc456639d6245580d17a24baf\n- https://github.com/mde/ejs/releases\n- https://security.netapp.com/advisory/ntap-20220804-0001/\n- https://github.com/advisories/GHSA-phwq-j96m-2c2q",
      "created": "2022-04-26T00:00:40.000Z",
      "id": 1089270,
      "npm_advisory_id": null,
      "overview": "The ejs (aka Embedded JavaScript templates) package 3.1.6 for Node.js allows server-side template injection in settings[view options][outputFunctionName]. This is parsed as an internal option, and overwrites the outputFunctionName option with an arbitrary OS command (which is executed upon template compilation).",
      "reported_by": null,
      "title": "ejs template injection vulnerability",
      "metadata": null,
      "cves": [
        "CVE-2022-29078"
      ],
      "access": "public",
      "severity": "critical",
      "module_name": "ejs",
      "vulnerable_versions": "<3.1.7",
      "github_advisory_id": "GHSA-phwq-j96m-2c2q",
      "recommendation": "Upgrade to version 3.1.7 or later",
      "patched_versions": ">=3.1.7",
      "updated": "2023-01-30T05:02:57.000Z",
      "cvss": {
        "score": 9.8,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "cwe": [
        "CWE-74"
      ],
      "url": "https://github.com/advisories/GHSA-phwq-j96m-2c2q"
    },
    "1090537": {
      "findings": [
        {
          "version": "0.4.2",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2017-16117\n- https://github.com/dodo/node-slug/issues/82\n- https://github.com/advisories/GHSA-jxqq-cqm6-pfq9\n- https://www.npmjs.com/advisories/537",
      "created": "2018-07-24T20:06:45.000Z",
      "id": 1090537,
      "npm_advisory_id": null,
      "overview": "Affected versions of `slug` are vulnerable to a regular expression denial of service when parsing untrusted user input.\n\nThe issue is low severity, as it takes 50,000 characters to cause the event loop to block for 2 seconds,\n\nAbout 50k characters can block the event loop for 2 seconds.\n\n\n## Recommendation\n\nUpdate to version 0.9.2 or later.",
      "reported_by": null,
      "title": "Regular Expression Denial of Service in slug",
      "metadata": null,
      "cves": [
        "CVE-2017-16117"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "slug",
      "vulnerable_versions": "<=0.9.1",
      "github_advisory_id": "GHSA-jxqq-cqm6-pfq9",
      "recommendation": "Upgrade to version 0.9.2 or later",
      "patched_versions": ">=0.9.2",
      "updated": "2023-01-12T05:04:56.000Z",
      "cvss": {
        "score": 0,
        "vectorString": null
      },
      "cwe": [
        "CWE-400"
      ],
      "url": "https://github.com/advisories/GHSA-jxqq-cqm6-pfq9"
    },
    "1092663": {
      "findings": [
        {
          "version": "6.1.1",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/markdown-it/markdown-it/security/advisories/GHSA-6vfc-qv3f-vr6c\n- https://github.com/markdown-it/markdown-it/commit/ffc49ab46b5b751cd2be0aabb146f2ef84986101\n- https://nvd.nist.gov/vuln/detail/CVE-2022-21670\n- https://github.com/advisories/GHSA-6vfc-qv3f-vr6c",
      "created": "2022-01-12T22:20:22.000Z",
      "id": 1092663,
      "npm_advisory_id": null,
      "overview": "### Impact\n\nSpecial patterns with length > 50K chars can slow down parser significantly.\n\n```js\nconst md = require('markdown-it')();\n\nmd.render(`x ${' '.repeat(150000)} x  \\nx`);\n```\n\n\n### Patches\n\nUpgrade to v12.3.2+\n\n### Workarounds\n\nNo.\n\n### References\n\nFix + test sample: https://github.com/markdown-it/markdown-it/commit/ffc49ab46b5b751cd2be0aabb146f2ef84986101\n",
      "reported_by": null,
      "title": "Uncontrolled Resource Consumption in markdown-it",
      "metadata": null,
      "cves": [
        "CVE-2022-21670"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "markdown-it",
      "vulnerable_versions": "<12.3.2",
      "github_advisory_id": "GHSA-6vfc-qv3f-vr6c",
      "recommendation": "Upgrade to version 12.3.2 or later",
      "patched_versions": ">=12.3.2",
      "updated": "2023-07-24T19:33:44.000Z",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
      },
      "cwe": [
        "CWE-400",
        "CWE-1333"
      ],
      "url": "https://github.com/advisories/GHSA-6vfc-qv3f-vr6c"
    },
    "1094599": {
      "findings": [
        {
          "version": "0.18.5",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2023-30533\n- https://cdn.sheetjs.com/advisories/CVE-2023-30533\n- https://git.sheetjs.com/sheetjs/sheetjs/src/branch/master/CHANGELOG.md\n- https://git.sheetjs.com/sheetjs/sheetjs/issues/2667\n- https://git.sheetjs.com/sheetjs/sheetjs/issues/2986\n- https://github.com/advisories/GHSA-4r6h-8v6p-xvw6",
      "created": "2023-04-24T09:30:19.000Z",
      "id": 1094599,
      "npm_advisory_id": null,
      "overview": "All versions of SheetJS CE through 0.19.2 are vulnerable to \"Prototype Pollution\" when reading specially crafted files. Workflows that do not read arbitrary files (for example, exporting data to spreadsheet files) are unaffected.\n\nA non-vulnerable version cannot be found via npm, as the repository hosted on GitHub and the npm package `xlsx` are no longer maintained.",
      "reported_by": null,
      "title": "Prototype Pollution in sheetJS",
      "metadata": null,
      "cves": [
        "CVE-2023-30533"
      ],
      "access": "public",
      "severity": "high",
      "module_name": "xlsx",
      "vulnerable_versions": "<0.19.3",
      "github_advisory_id": "GHSA-4r6h-8v6p-xvw6",
      "recommendation": "Upgrade to version 0.19.3 or later",
      "patched_versions": ">=0.19.3",
      "updated": "2023-11-06T05:04:13.000Z",
      "cvss": {
        "score": 7.8,
        "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
      },
      "cwe": [
        "CWE-1321"
      ],
      "url": "https://github.com/advisories/GHSA-4r6h-8v6p-xvw6"
    },
    "1095051": {
      "findings": [
        {
          "version": "0.3.19",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/markedjs/marked/security/advisories/GHSA-rrrm-qjm4-v8hf\n- https://nvd.nist.gov/vuln/detail/CVE-2022-21680\n- https://github.com/markedjs/marked/commit/c4a3ccd344b6929afa8a1d50ac54a721e57012c0\n- https://github.com/markedjs/marked/releases/tag/v4.0.10\n- https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AIXDMC3CSHYW3YWVSQOXAWLUYQHAO5UX/\n- https://github.com/advisories/GHSA-rrrm-qjm4-v8hf",
      "created": "2022-01-14T21:04:41.000Z",
      "id": 1095051,
      "npm_advisory_id": null,
      "overview": "### Impact\n\n_What kind of vulnerability is it?_\n\nDenial of service.\n\nThe regular expression `block.def` may cause catastrophic backtracking against some strings.\nPoC is the following.\n\n```javascript\nimport * as marked from \"marked\";\n\nmarked.parse(`[x]:${' '.repeat(1500)}x ${' '.repeat(1500)} x`);\n```\n\n_Who is impacted?_\n\nAnyone who runs untrusted markdown through marked and does not use a worker with a time limit.\n\n### Patches\n\n_Has the problem been patched?_\n\nYes\n\n_What versions should users upgrade to?_\n\n4.0.10\n\n### Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nDo not run untrusted markdown through marked or run marked on a [worker](https://marked.js.org/using_advanced#workers) thread and set a reasonable time limit to prevent draining resources.\n\n### References\n\n_Are there any links users can visit to find out more?_\n\n- https://marked.js.org/using_advanced#workers\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [marked](https://github.com/markedjs/marked)\n",
      "reported_by": null,
      "title": "Inefficient Regular Expression Complexity in marked",
      "metadata": null,
      "cves": [
        "CVE-2022-21680"
      ],
      "access": "public",
      "severity": "high",
      "module_name": "marked",
      "vulnerable_versions": "<4.0.10",
      "github_advisory_id": "GHSA-rrrm-qjm4-v8hf",
      "recommendation": "Upgrade to version 4.0.10 or later",
      "patched_versions": ">=4.0.10",
      "updated": "2023-11-29T20:51:52.000Z",
      "cvss": {
        "score": 7.5,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "cwe": [
        "CWE-400",
        "CWE-1333"
      ],
      "url": "https://github.com/advisories/GHSA-rrrm-qjm4-v8hf"
    },
    "1095052": {
      "findings": [
        {
          "version": "0.3.19",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/markedjs/marked/security/advisories/GHSA-5v2h-r2cx-5xgj\n- https://nvd.nist.gov/vuln/detail/CVE-2022-21681\n- https://github.com/markedjs/marked/commit/8f806573a3f6c6b7a39b8cdb66ab5ebb8d55a5f5\n- https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AIXDMC3CSHYW3YWVSQOXAWLUYQHAO5UX/\n- https://github.com/markedjs/marked/commit/c4a3ccd344b6929afa8a1d50ac54a721e57012c0\n- https://github.com/advisories/GHSA-5v2h-r2cx-5xgj",
      "created": "2022-01-14T21:04:46.000Z",
      "id": 1095052,
      "npm_advisory_id": null,
      "overview": "### Impact\n\n_What kind of vulnerability is it?_\n\nDenial of service.\n\nThe regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings.\nPoC is the following.\n\n```javascript\nimport * as marked from 'marked';\n\nconsole.log(marked.parse(`[x]: x\n\n\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](`));\n```\n\n_Who is impacted?_\n\nAnyone who runs untrusted markdown through marked and does not use a worker with a time limit.\n\n### Patches\n\n_Has the problem been patched?_\n\nYes\n\n_What versions should users upgrade to?_\n\n4.0.10\n\n### Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nDo not run untrusted markdown through marked or run marked on a [worker](https://marked.js.org/using_advanced#workers) thread and set a reasonable time limit to prevent draining resources.\n\n### References\n\n_Are there any links users can visit to find out more?_\n\n- https://marked.js.org/using_advanced#workers\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [marked](https://github.com/markedjs/marked)\n",
      "reported_by": null,
      "title": "Inefficient Regular Expression Complexity in marked",
      "metadata": null,
      "cves": [
        "CVE-2022-21681"
      ],
      "access": "public",
      "severity": "high",
      "module_name": "marked",
      "vulnerable_versions": "<4.0.10",
      "github_advisory_id": "GHSA-5v2h-r2cx-5xgj",
      "recommendation": "Upgrade to version 4.0.10 or later",
      "patched_versions": ">=4.0.10",
      "updated": "2023-11-29T20:51:17.000Z",
      "cvss": {
        "score": 7.5,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "cwe": [
        "CWE-1333"
      ],
      "url": "https://github.com/advisories/GHSA-5v2h-r2cx-5xgj"
    },
    "1095062": {
      "findings": [
        {
          "version": "3.1.3",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/mozilla/hawk/security/advisories/GHSA-44pw-h2cw-w3vq\n- https://nvd.nist.gov/vuln/detail/CVE-2022-29167\n- https://github.com/mozilla/hawk/pull/286\n- https://github.com/mozilla/hawk/commit/d10d72ca82db967f6c5fcf866ff78e3ca25ce1ab\n- https://github.com/advisories/GHSA-44pw-h2cw-w3vq",
      "created": "2022-05-23T20:18:14.000Z",
      "id": 1095062,
      "npm_advisory_id": null,
      "overview": "Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker's input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead.`Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.",
      "reported_by": null,
      "title": "Uncontrolled Resource Consumption in Hawk",
      "metadata": null,
      "cves": [
        "CVE-2022-29167"
      ],
      "access": "public",
      "severity": "high",
      "module_name": "hawk",
      "vulnerable_versions": "<9.0.1",
      "github_advisory_id": "GHSA-44pw-h2cw-w3vq",
      "recommendation": "Upgrade to version 9.0.1 or later",
      "patched_versions": ">=9.0.1",
      "updated": "2023-11-29T20:37:22.000Z",
      "cvss": {
        "score": 7.4,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:N/A:H"
      },
      "cwe": [
        "CWE-400",
        "CWE-1333"
      ],
      "url": "https://github.com/advisories/GHSA-44pw-h2cw-w3vq"
    },
    "1096727": {
      "findings": [
        {
          "version": "2.81.0",
          "paths": []
        },
        {
          "version": "2.88.2",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2023-28155\n- https://github.com/request/request/issues/3442\n- https://github.com/request/request/pull/3444\n- https://doyensec.com/resources/Doyensec_Advisory_RequestSSRF_Q12023.pdf\n- https://github.com/github/advisory-database/pull/2500\n- https://github.com/cypress-io/request/blob/master/lib/redirect.js#L116\n- https://github.com/request/request/blob/master/lib/redirect.js#L111\n- https://github.com/cypress-io/request/pull/28\n- https://github.com/cypress-io/request/commit/c5bcf21d40fb61feaff21a0e5a2b3934a440024f\n- https://github.com/cypress-io/request/releases/tag/v3.0.0\n- https://security.netapp.com/advisory/ntap-20230413-0007\n- https://github.com/advisories/GHSA-p8p7-x288-28g6",
      "created": "2023-03-16T15:30:19.000Z",
      "id": 1096727,
      "npm_advisory_id": null,
      "overview": "The `request` package through 2.88.2 for Node.js and the `@cypress/request` package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).\n\nNOTE: The `request` package is no longer supported by the maintainer.",
      "reported_by": null,
      "title": "Server-Side Request Forgery in Request",
      "metadata": null,
      "cves": [
        "CVE-2023-28155"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "request",
      "vulnerable_versions": "<=2.88.2",
      "github_advisory_id": "GHSA-p8p7-x288-28g6",
      "recommendation": "None",
      "patched_versions": "<0.0.0",
      "updated": "2024-03-21T17:47:21.000Z",
      "cvss": {
        "score": 6.1,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
      },
      "cwe": [
        "CWE-918"
      ],
      "url": "https://github.com/advisories/GHSA-p8p7-x288-28g6"
    },
    "1096911": {
      "findings": [
        {
          "version": "0.18.5",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2024-22363\n- https://cdn.sheetjs.com/advisories/CVE-2024-22363\n- https://cwe.mitre.org/data/definitions/1333.html\n- https://git.sheetjs.com/sheetjs/sheetjs/src/tag/v0.20.2\n- https://github.com/advisories/GHSA-5pgg-2g8v-p4x9",
      "created": "2024-04-05T06:30:46.000Z",
      "id": 1096911,
      "npm_advisory_id": null,
      "overview": "SheetJS Community Edition before 0.20.2 is vulnerable.to Regular Expression Denial of Service (ReDoS).",
      "reported_by": null,
      "title": "SheetJS Regular Expression Denial of Service (ReDoS)",
      "metadata": null,
      "cves": [
        "CVE-2024-22363"
      ],
      "access": "public",
      "severity": "high",
      "module_name": "xlsx",
      "vulnerable_versions": "<0.20.2",
      "github_advisory_id": "GHSA-5pgg-2g8v-p4x9",
      "recommendation": "Upgrade to version 0.20.2 or later",
      "patched_versions": ">=0.20.2",
      "updated": "2024-04-08T13:47:06.000Z",
      "cvss": {
        "score": 7.5,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "cwe": [
        "CWE-1333"
      ],
      "url": "https://github.com/advisories/GHSA-5pgg-2g8v-p4x9"
    },
    "1097682": {
      "findings": [
        {
          "version": "2.3.4",
          "paths": []
        },
        {
          "version": "2.5.0",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2023-26136\n- https://github.com/salesforce/tough-cookie/issues/282\n- https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e\n- https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3\n- https://security.snyk.io/vuln/SNYK-JS-TOUGHCOOKIE-5672873\n- https://lists.debian.org/debian-lts-announce/2023/07/msg00010.html\n- https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3HUE6ZR5SL73KHL7XUPAOEL6SB7HUDT2\n- https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6PVVPNSAGSDS63HQ74PJ7MZ3MU5IYNVZ\n- https://security.netapp.com/advisory/ntap-20240621-0006\n- https://github.com/advisories/GHSA-72xf-g2v4-qvf3",
      "created": "2023-07-01T06:30:16.000Z",
      "id": 1097682,
      "npm_advisory_id": null,
      "overview": "Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in `rejectPublicSuffixes=false` mode. This issue arises from the manner in which the objects are initialized.",
      "reported_by": null,
      "title": "tough-cookie Prototype Pollution vulnerability",
      "metadata": null,
      "cves": [
        "CVE-2023-26136"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "tough-cookie",
      "vulnerable_versions": "<4.1.3",
      "github_advisory_id": "GHSA-72xf-g2v4-qvf3",
      "recommendation": "Upgrade to version 4.1.3 or later",
      "patched_versions": ">=4.1.3",
      "updated": "2024-06-21T21:33:53.000Z",
      "cvss": {
        "score": 6.5,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
      },
      "cwe": [
        "CWE-1321"
      ],
      "url": "https://github.com/advisories/GHSA-72xf-g2v4-qvf3"
    },
    "1097685": {
      "findings": [
        {
          "version": "4.11.8",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2020-15366\n- https://github.com/ajv-validator/ajv/commit/65b2f7d76b190ac63a0d4e9154c712d7aa37049f\n- https://github.com/ajv-validator/ajv/releases/tag/v6.12.3\n- https://hackerone.com/bugs?subject=user&report_id=894259\n- https://github.com/ajv-validator/ajv/tags\n- https://security.netapp.com/advisory/ntap-20240621-0007\n- https://github.com/advisories/GHSA-v88g-cgmw-v5xw",
      "created": "2022-02-10T23:30:59.000Z",
      "id": 1097685,
      "npm_advisory_id": null,
      "overview": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
      "reported_by": null,
      "title": "Prototype Pollution in Ajv",
      "metadata": null,
      "cves": [
        "CVE-2020-15366"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "ajv",
      "vulnerable_versions": "<6.12.3",
      "github_advisory_id": "GHSA-v88g-cgmw-v5xw",
      "recommendation": "Upgrade to version 6.12.3 or later",
      "patched_versions": ">=6.12.3",
      "updated": "2024-06-21T21:33:49.000Z",
      "cvss": {
        "score": 5.6,
        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
      },
      "cwe": [
        "CWE-915",
        "CWE-1321"
      ],
      "url": "https://github.com/advisories/GHSA-v88g-cgmw-v5xw"
    },
    "1098366": {
      "findings": [
        {
          "version": "2.7.4",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2024-33883\n- https://github.com/mde/ejs/commit/e469741dca7df2eb400199e1cdb74621e3f89aa5\n- https://github.com/mde/ejs/compare/v3.1.9...v3.1.10\n- https://security.netapp.com/advisory/ntap-20240605-0003\n- https://github.com/advisories/GHSA-ghr5-ch3p-vcr6",
      "created": "2024-04-28T18:30:31.000Z",
      "id": 1098366,
      "npm_advisory_id": null,
      "overview": "The ejs (aka Embedded JavaScript templates) package before 3.1.10 for Node.js lacks certain pollution protection.",
      "reported_by": null,
      "title": "ejs lacks certain pollution protection",
      "metadata": null,
      "cves": [
        "CVE-2024-33883"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "ejs",
      "vulnerable_versions": "<3.1.10",
      "github_advisory_id": "GHSA-ghr5-ch3p-vcr6",
      "recommendation": "Upgrade to version 3.1.10 or later",
      "patched_versions": ">=3.1.10",
      "updated": "2024-08-02T15:45:54.000Z",
      "cvss": {
        "score": 4,
        "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
      },
      "cwe": [
        "CWE-693",
        "CWE-1321"
      ],
      "url": "https://github.com/advisories/GHSA-ghr5-ch3p-vcr6"
    },
    "1101610": {
      "findings": [
        {
          "version": "5.28.4",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/nodejs/undici/security/advisories/GHSA-c76h-2ccp-4975\n- https://nvd.nist.gov/vuln/detail/CVE-2025-22150\n- https://github.com/nodejs/undici/commit/711e20772764c29f6622ddc937c63b6eefdf07d0\n- https://github.com/nodejs/undici/commit/c2d78cd19fe4f4c621424491e26ce299e65e934a\n- https://github.com/nodejs/undici/commit/c3acc6050b781b827d80c86cbbab34f14458d385\n- https://hackerone.com/reports/2913312\n- https://blog.securityevaluators.com/hacking-the-javascript-lottery-80cc437e3b7f\n- https://github.com/nodejs/undici/blob/8b06b8250907d92fead664b3368f1d2aa27c1f35/lib/web/fetch/body.js#L113\n- https://github.com/advisories/GHSA-c76h-2ccp-4975",
      "created": "2025-01-21T21:10:47.000Z",
      "id": 1101610,
      "npm_advisory_id": null,
      "overview": "### Impact\n\n[Undici `fetch()` uses Math.random()](https://github.com/nodejs/undici/blob/8b06b8250907d92fead664b3368f1d2aa27c1f35/lib/web/fetch/body.js#L113) to choose the boundary for a multipart/form-data request. It is known that the output of Math.random() can be predicted if several of its generated values are known.\n\nIf there is a mechanism in an app that sends multipart requests to an attacker-controlled website, they can use this to leak the necessary values. Therefore, An attacker can tamper with the requests going to the backend APIs if certain conditions are met.\n\n### Patches\n\nThis is fixed in 5.28.5; 6.21.1; 7.2.3.\n\n### Workarounds\n\nDo not issue multipart requests to attacker controlled servers.\n\n### References\n\n* https://hackerone.com/reports/2913312\n* https://blog.securityevaluators.com/hacking-the-javascript-lottery-80cc437e3b7f\n",
      "reported_by": null,
      "title": "Use of Insufficiently Random Values in undici",
      "metadata": null,
      "cves": [
        "CVE-2025-22150"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "undici",
      "vulnerable_versions": ">=4.5.0 <5.28.5",
      "github_advisory_id": "GHSA-c76h-2ccp-4975",
      "recommendation": "Upgrade to version 5.28.5 or later",
      "patched_versions": ">=5.28.5",
      "updated": "2025-01-22T08:01:28.000Z",
      "cvss": {
        "score": 6.8,
        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:N"
      },
      "cwe": [
        "CWE-330"
      ],
      "url": "https://github.com/advisories/GHSA-c76h-2ccp-4975"
    },
    "1101846": {
      "findings": [
        {
          "version": "6.2.1",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/pillarjs/path-to-regexp/security/advisories/GHSA-9wv6-86v2-598j\n- https://github.com/pillarjs/path-to-regexp/commit/29b96b4a1de52824e1ca0f49a701183cc4ed476f\n- https://github.com/pillarjs/path-to-regexp/commit/60f2121e9b66b7b622cc01080df0aabda9eedee6\n- https://nvd.nist.gov/vuln/detail/CVE-2024-45296\n- https://github.com/pillarjs/path-to-regexp/commit/925ac8e3c5780b02f58cbd4e52f95da8ad2ac485\n- https://github.com/pillarjs/path-to-regexp/commit/d31670ae8f6e69cbfd56e835742195b7d10942ef\n- https://github.com/pillarjs/path-to-regexp/commit/f1253b47b347dcb909e3e80b0eb2649109e59894\n- https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0\n- https://security.netapp.com/advisory/ntap-20250124-0001\n- https://github.com/advisories/GHSA-9wv6-86v2-598j",
      "created": "2024-09-09T20:19:15.000Z",
      "id": 1101846,
      "npm_advisory_id": null,
      "overview": "### Impact\n\nA bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (`.`). For example, `/:a-:b`.\n\n### Patches\n\nFor users of 0.1, upgrade to `0.1.10`. All other users should upgrade to `8.0.0`.\n\nThese versions add backtrack protection when a custom regex pattern is not provided:\n\n- [0.1.10](https://github.com/pillarjs/path-to-regexp/releases/tag/v0.1.10)\n- [1.9.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v1.9.0)\n- [3.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v3.3.0)\n- [6.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0)\n\nThey do not protect against vulnerable user supplied capture groups. Protecting against explicit user patterns is out of scope for old versions and not considered a vulnerability.\n\nVersion [7.1.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v7.1.0) can enable `strict: true` and get an error when the regular expression might be bad.\n\nVersion [8.0.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v8.0.0) removes the features that can cause a ReDoS.\n\n### Workarounds\n\nAll versions can be patched by providing a custom regular expression for parameters after the first in a single segment. As long as the custom regular expression does not match the text before the parameter, you will be safe. For example, change `/:a-:b` to `/:a-:b([^-/]+)`.\n\nIf paths cannot be rewritten and versions cannot be upgraded, another alternative is to limit the URL length. For example, halving the attack string improves performance by 4x faster.\n\n### Details\n\nUsing `/:a-:b` will produce the regular expression `/^\\/([^\\/]+?)-([^\\/]+?)\\/?$/`. This can be exploited by a path such as `/a${'-a'.repeat(8_000)}/a`. [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) has a good example of why this occurs, but the TL;DR is the `/a` at the end ensures this route would never match but due to naive backtracking it will still attempt every combination of the `:a-:b` on the repeated 8,000 `-a`.\n\nBecause JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and can lead to a DoS. In local benchmarks, exploiting the unsafe regex will result in performance that is over 1000x worse than the safe regex. In a more realistic environment using Express v4 and 10 concurrent connections, this translated to average latency of ~600ms vs 1ms.\n\n### References\n\n* [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\n* [Detailed blog post](https://blakeembrey.com/posts/2024-09-web-redos/)",
      "reported_by": null,
      "title": "path-to-regexp outputs backtracking regular expressions",
      "metadata": null,
      "cves": [
        "CVE-2024-45296"
      ],
      "access": "public",
      "severity": "high",
      "module_name": "path-to-regexp",
      "vulnerable_versions": ">=4.0.0 <6.3.0",
      "github_advisory_id": "GHSA-9wv6-86v2-598j",
      "recommendation": "Upgrade to version 6.3.0 or later",
      "patched_versions": ">=6.3.0",
      "updated": "2025-01-24T21:32:30.000Z",
      "cvss": {
        "score": 7.5,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "cwe": [
        "CWE-1333"
      ],
      "url": "https://github.com/advisories/GHSA-9wv6-86v2-598j"
    },
    "1102341": {
      "findings": [
        {
          "version": "0.21.5",
          "paths": []
        },
        {
          "version": "0.14.47",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/evanw/esbuild/security/advisories/GHSA-67mh-4wv8-2f99\n- https://github.com/evanw/esbuild/commit/de85afd65edec9ebc44a11e245fd9e9a2e99760d\n- https://github.com/advisories/GHSA-67mh-4wv8-2f99",
      "created": "2025-02-10T17:48:07.000Z",
      "id": 1102341,
      "npm_advisory_id": null,
      "overview": "### Summary\n\nesbuild allows any websites to send any request to the development server and read the response due to default CORS settings.\n\n### Details\n\nesbuild sets `Access-Control-Allow-Origin: *` header to all requests, including the SSE connection, which allows any websites to send any request to the development server and read the response.\n\nhttps://github.com/evanw/esbuild/blob/df815ac27b84f8b34374c9182a93c94718f8a630/pkg/api/serve_other.go#L121\nhttps://github.com/evanw/esbuild/blob/df815ac27b84f8b34374c9182a93c94718f8a630/pkg/api/serve_other.go#L363\n\n**Attack scenario**:\n\n1. The attacker serves a malicious web page (`http://malicious.example.com`).\n1. The user accesses the malicious web page.\n1. The attacker sends a `fetch('http://127.0.0.1:8000/main.js')` request by JS in that malicious web page. This request is normally blocked by same-origin policy, but that's not the case for the reasons above.\n1. The attacker gets the content of `http://127.0.0.1:8000/main.js`.\n\nIn this scenario, I assumed that the attacker knows the URL of the bundle output file name. But the attacker can also get that information by\n\n- Fetching `/index.html`: normally you have a script tag here\n- Fetching `/assets`: it's common to have a `assets` directory when you have JS files and CSS files in a different directory and the directory listing feature tells the attacker the list of files\n- Connecting `/esbuild` SSE endpoint: the SSE endpoint sends the URL path of the changed files when the file is changed (`new EventSource('/esbuild').addEventListener('change', e => console.log(e.type, e.data))`)\n- Fetching URLs in the known file: once the attacker knows one file, the attacker can know the URLs imported from that file\n\nThe scenario above fetches the compiled content, but if the victim has the source map option enabled, the attacker can also get the non-compiled content by fetching the source map file.\n\n### PoC\n\n1. Download [reproduction.zip](https://github.com/user-attachments/files/18561484/reproduction.zip)\n2. Extract it and move to that directory\n1. Run `npm i`\n1. Run `npm run watch`\n1. Run `fetch('http://127.0.0.1:8000/app.js').then(r => r.text()).then(content => console.log(content))` in a different website's dev tools.\n\n![image](https://github.com/user-attachments/assets/08fc2e4d-e1ec-44ca-b0ea-78a73c3c40e9)\n\n### Impact\n\nUsers using the serve feature may get the source code stolen by malicious websites.",
      "reported_by": null,
      "title": "esbuild enables any website to send any requests to the development server and read the response",
      "metadata": null,
      "cves": [],
      "access": "public",
      "severity": "moderate",
      "module_name": "esbuild",
      "vulnerable_versions": "<=0.24.2",
      "github_advisory_id": "GHSA-67mh-4wv8-2f99",
      "recommendation": "Upgrade to version 0.25.0 or later",
      "patched_versions": ">=0.25.0",
      "updated": "2025-02-10T17:48:08.000Z",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N"
      },
      "cwe": [
        "CWE-346"
      ],
      "url": "https://github.com/advisories/GHSA-67mh-4wv8-2f99"
    },
    "1102423": {
      "findings": [
        {
          "version": "0.19.0",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2024-21534\n- https://github.com/JSONPath-Plus/JSONPath/commit/6b2f1b4c234292c75912b790bf7e2d7339d4ccd3\n- https://security.snyk.io/vuln/SNYK-JS-JSONPATHPLUS-7945884\n- https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8185019\n- https://github.com/JSONPath-Plus/JSONPath/issues/226\n- https://github.com/JSONPath-Plus/JSONPath/commit/b70aa713553caf838a63bac923195a5bc541fd72\n- https://github.com/JSONPath-Plus/JSONPath/issues/226#issuecomment-2424230316\n- https://github.com/JSONPath-Plus/JSONPath/compare/v9.0.0...v10.1.0\n- https://github.com/JSONPath-Plus/JSONPath/pull/233\n- https://github.com/JSONPath-Plus/JSONPath/commit/73ad72e5ee788d8287dea6e8283a3f16f63c9eb8\n- https://github.com/advisories/GHSA-pppg-cpfq-h7wr",
      "created": "2024-10-11T15:30:32.000Z",
      "id": 1102423,
      "npm_advisory_id": null,
      "overview": "Versions of the package jsonpath-plus before 10.0.7 are vulnerable to Remote Code Execution (RCE) due to improper input sanitization. An attacker can execute aribitrary code on the system by exploiting the unsafe default usage of vm in Node.\n\n**Note:**\n\nThere were several attempts to fix it in versions [10.0.0-10.1.0](https://github.com/JSONPath-Plus/JSONPath/compare/v9.0.0...v10.1.0) but it could still be exploited using [different payloads](https://github.com/JSONPath-Plus/JSONPath/issues/226)",
      "reported_by": null,
      "title": "JSONPath Plus Remote Code Execution (RCE) Vulnerability",
      "metadata": null,
      "cves": [
        "CVE-2024-21534"
      ],
      "access": "public",
      "severity": "critical",
      "module_name": "jsonpath-plus",
      "vulnerable_versions": "<10.2.0",
      "github_advisory_id": "GHSA-pppg-cpfq-h7wr",
      "recommendation": "Upgrade to version 10.2.0 or later",
      "patched_versions": ">=10.2.0",
      "updated": "2025-02-06T19:11:00.000Z",
      "cvss": {
        "score": 9.8,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "cwe": [
        "CWE-94"
      ],
      "url": "https://github.com/advisories/GHSA-pppg-cpfq-h7wr"
    },
    "1102895": {
      "findings": [
        {
          "version": "0.19.0",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2025-1302\n- https://github.com/JSONPath-Plus/JSONPath/commit/30942896d27cb8a806b965a5ca9ef9f686be24ee\n- https://gist.github.com/nickcopi/11ba3cb4fdee6f89e02e6afae8db6456\n- https://security.snyk.io/vuln/SNYK-JS-JSONPATHPLUS-8719585\n- https://nvd.nist.gov/vuln/detail/CVE-2024-21534\n- https://github.com/JSONPath-Plus/JSONPath/blob/8e4acf8aff5f446aa66323e12394ac5615c3b260/src/Safe-Script.js#L127\n- https://github.com/advisories/GHSA-hw8r-x6gr-5gjp",
      "created": "2025-02-15T06:30:51.000Z",
      "id": 1102895,
      "npm_advisory_id": null,
      "overview": "Versions of the package jsonpath-plus before 10.3.0 are vulnerable to Remote Code Execution (RCE) due to improper input sanitization. An attacker can execute aribitrary code on the system by exploiting the unsafe default usage of eval='safe' mode.\n\n**Note:**\n\nThis is caused by an incomplete fix for CVE-2024-21534.",
      "reported_by": null,
      "title": "JSONPath Plus allows Remote Code Execution",
      "metadata": null,
      "cves": [
        "CVE-2025-1302"
      ],
      "access": "public",
      "severity": "high",
      "module_name": "jsonpath-plus",
      "vulnerable_versions": "<10.3.0",
      "github_advisory_id": "GHSA-hw8r-x6gr-5gjp",
      "recommendation": "Upgrade to version 10.3.0 or later",
      "patched_versions": ">=10.3.0",
      "updated": "2025-02-18T19:25:35.000Z",
      "cvss": {
        "score": 9.8,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "cwe": [
        "CWE-94"
      ],
      "url": "https://github.com/advisories/GHSA-hw8r-x6gr-5gjp"
    },
    "1103907": {
      "findings": [
        {
          "version": "0.4.2",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/jshttp/cookie/security/advisories/GHSA-pxg6-pf52-xh8x\n- https://github.com/jshttp/cookie/pull/167\n- https://github.com/jshttp/cookie/commit/e10042845354fea83bd8f34af72475eed1dadf5c\n- https://github.com/advisories/GHSA-pxg6-pf52-xh8x",
      "created": "2024-10-04T20:31:00.000Z",
      "id": 1103907,
      "npm_advisory_id": null,
      "overview": "### Impact\n\nThe cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. For example, `serialize(\"userName=<script>alert('XSS3')</script>; Max-Age=2592000; a\", value)` would result in `\"userName=<script>alert('XSS3')</script>; Max-Age=2592000; a=test\"`, setting `userName` cookie to `<script>` and ignoring `value`.\n\nA similar escape can be used for `path` and `domain`, which could be abused to alter other fields of the cookie.\n\n### Patches\n\nUpgrade to 0.7.0, which updates the validation for `name`, `path`, and `domain`.\n\n### Workarounds\n\nAvoid passing untrusted or arbitrary values for these fields, ensure they are set by the application instead of user input.\n\n### References\n\n* https://github.com/jshttp/cookie/pull/167",
      "reported_by": null,
      "title": "cookie accepts cookie name, path, and domain with out of bounds characters",
      "metadata": null,
      "cves": [
        "CVE-2024-47764"
      ],
      "access": "public",
      "severity": "low",
      "module_name": "cookie",
      "vulnerable_versions": "<0.7.0",
      "github_advisory_id": "GHSA-pxg6-pf52-xh8x",
      "recommendation": "Upgrade to version 0.7.0 or later",
      "patched_versions": ">=0.7.0",
      "updated": "2025-04-15T13:56:44.000Z",
      "cvss": {
        "score": 0,
        "vectorString": null
      },
      "cwe": [
        "CWE-74"
      ],
      "url": "https://github.com/advisories/GHSA-pxg6-pf52-xh8x"
    },
    "1104501": {
      "findings": [
        {
          "version": "5.28.4",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/nodejs/undici/security/advisories/GHSA-cxrh-j4jr-qwg3\n- https://github.com/nodejs/undici/issues/3895\n- https://github.com/nodejs/undici/pull/4088\n- https://nvd.nist.gov/vuln/detail/CVE-2025-47279\n- https://github.com/advisories/GHSA-cxrh-j4jr-qwg3",
      "created": "2025-05-15T14:15:06.000Z",
      "id": 1104501,
      "npm_advisory_id": null,
      "overview": "### Impact\n\nApplications that use undici to implement a webhook-like system are vulnerable. If the attacker set up a server with an invalid certificate, and they can force the application to call the webhook repeatedly, then they can cause a memory leak. \n\n### Patches\n\nThis has been patched in https://github.com/nodejs/undici/pull/4088.\n\n### Workarounds\n\nIf a webhook fails, avoid keep calling it repeatedly.\n\n### References\n\nReported as: https://github.com/nodejs/undici/issues/3895",
      "reported_by": null,
      "title": "undici Denial of Service attack via bad certificate data",
      "metadata": null,
      "cves": [
        "CVE-2025-47279"
      ],
      "access": "public",
      "severity": "low",
      "module_name": "undici",
      "vulnerable_versions": "<5.29.0",
      "github_advisory_id": "GHSA-cxrh-j4jr-qwg3",
      "recommendation": "Upgrade to version 5.29.0 or later",
      "patched_versions": ">=5.29.0",
      "updated": "2025-05-16T02:07:01.000Z",
      "cvss": {
        "score": 3.1,
        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:L"
      },
      "cwe": [
        "CWE-401"
      ],
      "url": "https://github.com/advisories/GHSA-cxrh-j4jr-qwg3"
    },
    "1105092": {
      "findings": [
        {
          "version": "2.16.3",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2020-36604\n- https://github.com/hapijs/hoek/issues/352\n- https://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a\n- https://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90\n- https://github.com/advisories/GHSA-c429-5p7v-vgjp",
      "created": "2022-09-25T00:00:27.000Z",
      "id": 1105092,
      "npm_advisory_id": null,
      "overview": "hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the __proto__ key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1.",
      "reported_by": null,
      "title": "hoek subject to prototype pollution via the clone function.",
      "metadata": null,
      "cves": [
        "CVE-2020-36604"
      ],
      "access": "public",
      "severity": "high",
      "module_name": "hoek",
      "vulnerable_versions": "<=6.1.3",
      "github_advisory_id": "GHSA-c429-5p7v-vgjp",
      "recommendation": "None",
      "patched_versions": "<0.0.0",
      "updated": "2025-05-28T19:34:26.000Z",
      "cvss": {
        "score": 8.1,
        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "cwe": [
        "CWE-1321"
      ],
      "url": "https://github.com/advisories/GHSA-c429-5p7v-vgjp"
    },
    "1105121": {
      "findings": [
        {
          "version": "2.16.3",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2018-3728\n- https://hackerone.com/reports/310439\n- https://github.com/hapijs/hoek/commit/32ed5c9413321fbc37da5ca81a7cbab693786dee\n- https://access.redhat.com/errata/RHSA-2018:1263\n- https://access.redhat.com/errata/RHSA-2018:1264\n- https://snyk.io/vuln/npm:hoek:20180212\n- https://github.com/hapijs/hoek/commit/5aed1a8c4a3d55722d1c799f2368857bf418d6df\n- https://web.archive.org/web/20200227131737/https://www.securityfocus.com/bid/103108\n- https://github.com/advisories/GHSA-jp4x-w63m-7wgm",
      "created": "2018-04-26T15:25:17.000Z",
      "id": 1105121,
      "npm_advisory_id": null,
      "overview": "Versions of `hoek` prior to 4.2.1 and 5.0.3 are vulnerable to prototype pollution.\n\nThe `merge` function, and the `applyToDefaults` and `applyToDefaultsWithShallow` functions which leverage `merge` behind the scenes, are vulnerable to a prototype pollution attack when provided an _unvalidated_ payload created from a JSON string containing the `__proto__` property.\n\nThis can be demonstrated like so:\n\n```javascript\nvar Hoek = require('hoek');\nvar malicious_payload = '{\"__proto__\":{\"oops\":\"It works !\"}}';\n\nvar a = {};\nconsole.log(\"Before : \" + a.oops);\nHoek.merge({}, JSON.parse(malicious_payload));\nconsole.log(\"After : \" + a.oops);\n```\n\nThis type of attack can be used to overwrite existing properties causing a potential denial of service.\n\n\n## Recommendation\n\nUpdate to version 4.2.1, 5.0.3 or later.",
      "reported_by": null,
      "title": "Prototype Pollution in hoek",
      "metadata": null,
      "cves": [
        "CVE-2018-3728"
      ],
      "access": "public",
      "severity": "high",
      "module_name": "hoek",
      "vulnerable_versions": "<4.2.1",
      "github_advisory_id": "GHSA-jp4x-w63m-7wgm",
      "recommendation": "Upgrade to version 4.2.1 or later",
      "patched_versions": ">=4.2.1",
      "updated": "2025-05-29T22:49:50.000Z",
      "cvss": {
        "score": 8.8,
        "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "cwe": [
        "CWE-1321"
      ],
      "url": "https://github.com/advisories/GHSA-jp4x-w63m-7wgm"
    },
    "1106509": {
      "findings": [
        {
          "version": "2.1.4",
          "paths": []
        },
        {
          "version": "2.3.3",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/form-data/form-data/security/advisories/GHSA-fjxv-7rqg-78g4\n- https://nvd.nist.gov/vuln/detail/CVE-2025-7783\n- https://github.com/form-data/form-data/commit/3d1723080e6577a66f17f163ecd345a21d8d0fd0\n- https://github.com/benweissmann/CVE-2025-7783-poc\n- https://github.com/advisories/GHSA-fjxv-7rqg-78g4",
      "created": "2025-07-21T19:04:54.000Z",
      "id": 1106509,
      "npm_advisory_id": null,
      "overview": "### Summary\n\nform-data uses `Math.random()` to select a boundary value for multipart form-encoded data. This can lead to a security issue if an attacker:\n1. can observe other values produced by Math.random in the target application, and\n2. can control one field of a request made using form-data\n\nBecause the values of Math.random() are pseudo-random and predictable (see: https://blog.securityevaluators.com/hacking-the-javascript-lottery-80cc437e3b7f), an attacker who can observe a few sequential values can determine the state of the PRNG and predict future values, includes those used to generate form-data's boundary value. The allows the attacker to craft a value that contains a boundary value, allowing them to inject additional parameters into the request.\n\nThis is largely the same vulnerability as was [recently found in `undici`](https://hackerone.com/reports/2913312) by [`parrot409`](https://hackerone.com/parrot409?type=user) -- I'm not affiliated with that researcher but want to give credit where credit is due! My PoC is largely based on their work.\n\n### Details\n\nThe culprit is this line here: https://github.com/form-data/form-data/blob/426ba9ac440f95d1998dac9a5cd8d738043b048f/lib/form_data.js#L347\n\nAn attacker who is able to predict the output of Math.random() can predict this boundary value, and craft a payload that contains the boundary value, followed by another, fully attacker-controlled field. This is roughly equivalent to any sort of improper escaping vulnerability, with the caveat that the attacker must find a way to observe other Math.random() values generated by the application to solve for the state of the PRNG. However, Math.random() is used in all sorts of places that might be visible to an attacker (including by form-data itself, if the attacker can arrange for the vulnerable application to make a request to an attacker-controlled server using form-data, such as a user-controlled webhook -- the attacker could observe the boundary values from those requests to observe the Math.random() outputs). A common example would be a `x-request-id` header added by the server. These sorts of headers are often used for distributed tracing, to correlate errors across the frontend and backend. `Math.random()` is a fine place to get these sorts of IDs (in fact, [opentelemetry uses Math.random for this purpose](https://github.com/open-telemetry/opentelemetry-js/blob/2053f0d3a44631ade77ea04f656056a2c8a2ae76/packages/opentelemetry-sdk-trace-base/src/platform/node/RandomIdGenerator.ts#L22))\n\n### PoC\n\nPoC here: https://github.com/benweissmann/CVE-2025-7783-poc\n\nInstructions are in that repo. It's based on the PoC from https://hackerone.com/reports/2913312 but simplified somewhat; the vulnerable application has a more direct side-channel from which to observe Math.random() values (a separate endpoint that happens to include a randomly-generated request ID). \n\n### Impact\n\nFor an application to be vulnerable, it must:\n- Use `form-data` to send data including user-controlled data to some other system. The attacker must be able to do something malicious by adding extra parameters (that were not intended to be user-controlled) to this request. Depending on the target system's handling of repeated parameters, the attacker might be able to overwrite values in addition to appending values (some multipart form handlers deal with repeats by overwriting values instead of representing them as an array)\n- Reveal values of Math.random(). It's easiest if the attacker can observe multiple sequential values, but more complex math could recover the PRNG state to some degree of confidence with non-sequential values. \n\nIf an application is vulnerable, this allows an attacker to make arbitrary requests to internal systems.",
      "reported_by": null,
      "title": "form-data uses unsafe random function in form-data for choosing boundary",
      "metadata": null,
      "cves": [
        "CVE-2025-7783"
      ],
      "access": "public",
      "severity": "critical",
      "module_name": "form-data",
      "vulnerable_versions": "<2.5.4",
      "github_advisory_id": "GHSA-fjxv-7rqg-78g4",
      "recommendation": "Upgrade to version 2.5.4 or later",
      "patched_versions": ">=2.5.4",
      "updated": "2025-07-21T19:04:58.000Z",
      "cvss": {
        "score": 0,
        "vectorString": null
      },
      "cwe": [
        "CWE-330"
      ],
      "url": "https://github.com/advisories/GHSA-fjxv-7rqg-78g4"
    },
    "1106849": {
      "findings": [
        {
          "version": "0.0.33",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/raszi/node-tmp/security/advisories/GHSA-52f5-9888-hmc6\n- https://github.com/raszi/node-tmp/commit/188b25e529496e37adaf1a1d9dccb40019a08b1b\n- https://nvd.nist.gov/vuln/detail/CVE-2025-54798\n- https://github.com/raszi/node-tmp/issues/207\n- https://github.com/advisories/GHSA-52f5-9888-hmc6",
      "created": "2025-08-06T17:06:04.000Z",
      "id": 1106849,
      "npm_advisory_id": null,
      "overview": "### Summary\n\n`tmp@0.2.3` is vulnerable to an Arbitrary temporary file / directory write via symbolic link `dir` parameter.\n\n\n### Details\n\nAccording to the documentation there are some conditions that must be held:\n\n```\n// https://github.com/raszi/node-tmp/blob/v0.2.3/README.md?plain=1#L41-L50\n\nOther breaking changes, i.e.\n\n- template must be relative to tmpdir\n- name must be relative to tmpdir\n- dir option must be relative to tmpdir //<-- this assumption can be bypassed using symlinks\n\nare still in place.\n\nIn order to override the system's tmpdir, you will have to use the newly\nintroduced tmpdir option.\n\n\n// https://github.com/raszi/node-tmp/blob/v0.2.3/README.md?plain=1#L375\n* `dir`: the optional temporary directory that must be relative to the system's default temporary directory.\n     absolute paths are fine as long as they point to a location under the system's default temporary directory.\n     Any directories along the so specified path must exist, otherwise a ENOENT error will be thrown upon access, \n     as tmp will not check the availability of the path, nor will it establish the requested path for you.\n```\n\nRelated issue: https://github.com/raszi/node-tmp/issues/207.\n\n\nThe issue occurs because `_resolvePath` does not properly handle symbolic link when resolving paths:\n```js\n// https://github.com/raszi/node-tmp/blob/v0.2.3/lib/tmp.js#L573-L579\nfunction _resolvePath(name, tmpDir) {\n  if (name.startsWith(tmpDir)) {\n    return path.resolve(name);\n  } else {\n    return path.resolve(path.join(tmpDir, name));\n  }\n}\n```\n\nIf the `dir` parameter points to a symlink that resolves to a folder outside the `tmpDir`, it's possible to bypass the `_assertIsRelative` check used in `_assertAndSanitizeOptions`:\n```js\n// https://github.com/raszi/node-tmp/blob/v0.2.3/lib/tmp.js#L590-L609\nfunction _assertIsRelative(name, option, tmpDir) {\n  if (option === 'name') {\n    // assert that name is not absolute and does not contain a path\n    if (path.isAbsolute(name))\n      throw new Error(`${option} option must not contain an absolute path, found \"${name}\".`);\n    // must not fail on valid .<name> or ..<name> or similar such constructs\n    let basename = path.basename(name);\n    if (basename === '..' || basename === '.' || basename !== name)\n      throw new Error(`${option} option must not contain a path, found \"${name}\".`);\n  }\n  else { // if (option === 'dir' || option === 'template') {\n    // assert that dir or template are relative to tmpDir\n    if (path.isAbsolute(name) && !name.startsWith(tmpDir)) {\n      throw new Error(`${option} option must be relative to \"${tmpDir}\", found \"${name}\".`);\n    }\n    let resolvedPath = _resolvePath(name, tmpDir); //<--- \n    if (!resolvedPath.startsWith(tmpDir))\n      throw new Error(`${option} option must be relative to \"${tmpDir}\", found \"${resolvedPath}\".`);\n  }\n}\n```\n\n\n### PoC\n\nThe following PoC demonstrates how writing a tmp file on a folder outside the `tmpDir` is possible.\nTested on a Linux machine.\n\n- Setup: create a symbolic link inside the `tmpDir` that points to a directory outside of it\n```bash\nmkdir $HOME/mydir1\n\nln -s $HOME/mydir1 ${TMPDIR:-/tmp}/evil-dir\n```\n\n- check the folder is empty:\n```bash\nls -lha $HOME/mydir1 | grep \"tmp-\"\n```\n\n- run the poc\n```bash\nnode main.js\nFile:  /tmp/evil-dir/tmp-26821-Vw87SLRaBIlf\ntest 1: ENOENT: no such file or directory, open '/tmp/mydir1/tmp-[random-id]'\ntest 2: dir option must be relative to \"/tmp\", found \"/foo\".\ntest 3: dir option must be relative to \"/tmp\", found \"/home/user/mydir1\".\n```\n\n- the temporary file is created under `$HOME/mydir1` (outside the `tmpDir`):\n```bash\nls -lha $HOME/mydir1 | grep \"tmp-\"\n-rw------- 1 user user    0 Apr  X XX:XX tmp-[random-id]\n```\n\n\n- `main.js`\n```js\n// npm i tmp@0.2.3\n\nconst tmp = require('tmp');\n\nconst tmpobj = tmp.fileSync({ 'dir': 'evil-dir'});\nconsole.log('File: ', tmpobj.name);\n\ntry {\n    tmp.fileSync({ 'dir': 'mydir1'});\n} catch (err) {\n    console.log('test 1:', err.message)\n}\n\ntry {\n    tmp.fileSync({ 'dir': '/foo'});\n} catch (err) {\n    console.log('test 2:', err.message)\n}\n\ntry {\n    const fs = require('node:fs');\n    const resolved = fs.realpathSync('/tmp/evil-dir');\n    tmp.fileSync({ 'dir': resolved});\n} catch (err) {\n    console.log('test 3:', err.message)\n}\n```\n\n\nA Potential fix could be to call `fs.realpathSync` (or similar) that resolves also symbolic links.\n```js\nfunction _resolvePath(name, tmpDir) {\n  let resolvedPath;\n  if (name.startsWith(tmpDir)) {\n    resolvedPath = path.resolve(name);\n  } else {\n    resolvedPath = path.resolve(path.join(tmpDir, name));\n  }\n  return fs.realpathSync(resolvedPath);\n}\n```\n\n\n### Impact\n\nArbitrary temporary file / directory write via symlink",
      "reported_by": null,
      "title": "tmp allows arbitrary temporary file / directory write via symbolic link `dir` parameter",
      "metadata": null,
      "cves": [
        "CVE-2025-54798"
      ],
      "access": "public",
      "severity": "low",
      "module_name": "tmp",
      "vulnerable_versions": "<=0.2.3",
      "github_advisory_id": "GHSA-52f5-9888-hmc6",
      "recommendation": "Upgrade to version 0.2.4 or later",
      "patched_versions": ">=0.2.4",
      "updated": "2025-08-07T15:11:23.000Z",
      "cvss": {
        "score": 2.5,
        "vectorString": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:N"
      },
      "cwe": [
        "CWE-59"
      ],
      "url": "https://github.com/advisories/GHSA-52f5-9888-hmc6"
    },
    "1106900": {
      "findings": [
        {
          "version": "3.10.1",
          "paths": []
        },
        {
          "version": "2.4.2",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2018-3721\n- https://hackerone.com/reports/310443\n- https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a\n- https://security.netapp.com/advisory/ntap-20190919-0004\n- https://github.com/rubysec/ruby-advisory-db/blob/master/gems/lodash-rails/CVE-2018-3721.yml\n- https://github.com/advisories/GHSA-fvqr-27wr-82fm",
      "created": "2018-07-26T15:14:52.000Z",
      "id": 1106900,
      "npm_advisory_id": null,
      "overview": "Versions of `lodash` before 4.17.5 are vulnerable to prototype pollution. \n\nThe vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `__proto__` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.5 or later.",
      "reported_by": null,
      "title": "Prototype Pollution in lodash",
      "metadata": null,
      "cves": [
        "CVE-2018-3721"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "lodash",
      "vulnerable_versions": "<4.17.5",
      "github_advisory_id": "GHSA-fvqr-27wr-82fm",
      "recommendation": "Upgrade to version 4.17.5 or later",
      "patched_versions": ">=4.17.5",
      "updated": "2025-08-12T21:37:10.000Z",
      "cvss": {
        "score": 6.5,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"
      },
      "cwe": [
        "CWE-471",
        "CWE-1321"
      ],
      "url": "https://github.com/advisories/GHSA-fvqr-27wr-82fm"
    },
    "1106913": {
      "findings": [
        {
          "version": "3.10.1",
          "paths": []
        },
        {
          "version": "2.4.2",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2021-23337\n- https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c\n- https://snyk.io/vuln/SNYK-JS-LODASH-1040724\n- https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js#L14851\n- https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074932\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074930\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074928\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074931\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074929\n- https://www.oracle.com//security-alerts/cpujul2021.html\n- https://www.oracle.com/security-alerts/cpuoct2021.html\n- https://www.oracle.com/security-alerts/cpujan2022.html\n- https://www.oracle.com/security-alerts/cpujul2022.html\n- https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf\n- https://security.netapp.com/advisory/ntap-20210312-0006\n- https://github.com/rubysec/ruby-advisory-db/blob/master/gems/lodash-rails/CVE-2021-23337.yml\n- https://github.com/advisories/GHSA-35jh-r3h4-6jhm",
      "created": "2021-05-06T16:05:51.000Z",
      "id": 1106913,
      "npm_advisory_id": null,
      "overview": "`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.",
      "reported_by": null,
      "title": "Command Injection in lodash",
      "metadata": null,
      "cves": [
        "CVE-2021-23337"
      ],
      "access": "public",
      "severity": "high",
      "module_name": "lodash",
      "vulnerable_versions": "<4.17.21",
      "github_advisory_id": "GHSA-35jh-r3h4-6jhm",
      "recommendation": "Upgrade to version 4.17.21 or later",
      "patched_versions": ">=4.17.21",
      "updated": "2025-08-12T21:44:25.000Z",
      "cvss": {
        "score": 7.2,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
      },
      "cwe": [
        "CWE-77",
        "CWE-94"
      ],
      "url": "https://github.com/advisories/GHSA-35jh-r3h4-6jhm"
    },
    "1106914": {
      "findings": [
        {
          "version": "3.10.1",
          "paths": []
        },
        {
          "version": "2.4.2",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2018-16487\n- https://hackerone.com/reports/380873\n- https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad\n- https://security.netapp.com/advisory/ntap-20190919-0004\n- https://github.com/rubysec/ruby-advisory-db/blob/master/gems/lodash-rails/CVE-2018-16487.yml\n- https://github.com/advisories/GHSA-4xc9-xhrj-v574",
      "created": "2019-02-07T18:16:48.000Z",
      "id": 1106914,
      "npm_advisory_id": null,
      "overview": "Versions of `lodash` before 4.17.11 are vulnerable to prototype pollution. \n\nThe vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.11 or later.",
      "reported_by": null,
      "title": "Prototype Pollution in lodash",
      "metadata": null,
      "cves": [
        "CVE-2018-16487"
      ],
      "access": "public",
      "severity": "high",
      "module_name": "lodash",
      "vulnerable_versions": "<4.17.11",
      "github_advisory_id": "GHSA-4xc9-xhrj-v574",
      "recommendation": "Upgrade to version 4.17.11 or later",
      "patched_versions": ">=4.17.11",
      "updated": "2025-08-12T21:36:50.000Z",
      "cvss": {
        "score": 0,
        "vectorString": null
      },
      "cwe": [
        "CWE-400"
      ],
      "url": "https://github.com/advisories/GHSA-4xc9-xhrj-v574"
    },
    "1106918": {
      "findings": [
        {
          "version": "3.10.1",
          "paths": []
        },
        {
          "version": "2.4.2",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/lodash/lodash/pull/4336\n- https://nvd.nist.gov/vuln/detail/CVE-2019-10744\n- https://snyk.io/vuln/SNYK-JS-LODASH-450202\n- https://access.redhat.com/errata/RHSA-2019:3024\n- https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\n- https://www.oracle.com/security-alerts/cpujan2021.html\n- https://www.oracle.com/security-alerts/cpuoct2020.html\n- https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp%3Butm_medium=RSS\n- https://security.netapp.com/advisory/ntap-20191004-0005\n- https://github.com/rubysec/ruby-advisory-db/blob/master/gems/lodash-rails/CVE-2019-10744.yml\n- https://github.com/advisories/GHSA-jf85-cpcp-j695",
      "created": "2019-07-10T19:45:23.000Z",
      "id": 1106918,
      "npm_advisory_id": null,
      "overview": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
      "reported_by": null,
      "title": "Prototype Pollution in lodash",
      "metadata": null,
      "cves": [
        "CVE-2019-10744"
      ],
      "access": "public",
      "severity": "critical",
      "module_name": "lodash",
      "vulnerable_versions": "<4.17.12",
      "github_advisory_id": "GHSA-jf85-cpcp-j695",
      "recommendation": "Upgrade to version 4.17.12 or later",
      "patched_versions": ">=4.17.12",
      "updated": "2025-08-12T21:43:02.000Z",
      "cvss": {
        "score": 9.1,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"
      },
      "cwe": [
        "CWE-20",
        "CWE-1321"
      ],
      "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695"
    },
    "1106919": {
      "findings": [
        {
          "version": "3.10.1",
          "paths": []
        },
        {
          "version": "2.4.2",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2020-28500\n- https://github.com/lodash/lodash/pull/5065\n- https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7\n- https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8\n- https://snyk.io/vuln/SNYK-JS-LODASH-1018905\n- https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893\n- https://www.oracle.com//security-alerts/cpujul2021.html\n- https://www.oracle.com/security-alerts/cpuoct2021.html\n- https://www.oracle.com/security-alerts/cpujan2022.html\n- https://www.oracle.com/security-alerts/cpujul2022.html\n- https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf\n- https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a\n- https://security.netapp.com/advisory/ntap-20210312-0006\n- https://github.com/rubysec/ruby-advisory-db/blob/master/gems/lodash-rails/CVE-2020-28500.yml\n- https://github.com/advisories/GHSA-29mw-wpgm-hmr9",
      "created": "2022-01-06T20:30:46.000Z",
      "id": 1106919,
      "npm_advisory_id": null,
      "overview": "All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the `toNumber`, `trim` and `trimEnd` functions. \n\nSteps to reproduce (provided by reporter Liyuan Chen):\n```js\nvar lo = require('lodash');\n\nfunction build_blank(n) {\n    var ret = \"1\"\n    for (var i = 0; i < n; i++) {\n        ret += \" \"\n    }\n    return ret + \"1\";\n}\nvar s = build_blank(50000) var time0 = Date.now();\nlo.trim(s) \nvar time_cost0 = Date.now() - time0;\nconsole.log(\"time_cost0: \" + time_cost0);\nvar time1 = Date.now();\nlo.toNumber(s) var time_cost1 = Date.now() - time1;\nconsole.log(\"time_cost1: \" + time_cost1);\nvar time2 = Date.now();\nlo.trimEnd(s);\nvar time_cost2 = Date.now() - time2;\nconsole.log(\"time_cost2: \" + time_cost2);\n```",
      "reported_by": null,
      "title": "Regular Expression Denial of Service (ReDoS) in lodash",
      "metadata": null,
      "cves": [
        "CVE-2020-28500"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "lodash",
      "vulnerable_versions": "<4.17.21",
      "github_advisory_id": "GHSA-29mw-wpgm-hmr9",
      "recommendation": "Upgrade to version 4.17.21 or later",
      "patched_versions": ">=4.17.21",
      "updated": "2025-08-12T21:44:07.000Z",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
      },
      "cwe": [
        "CWE-400",
        "CWE-1333"
      ],
      "url": "https://github.com/advisories/GHSA-29mw-wpgm-hmr9"
    },
    "1106920": {
      "findings": [
        {
          "version": "3.10.1",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/lodash/lodash/issues/4744\n- https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12\n- https://nvd.nist.gov/vuln/detail/CVE-2020-8203\n- https://hackerone.com/reports/712065\n- https://github.com/lodash/lodash/issues/4874\n- https://github.com/github/advisory-database/pull/2884\n- https://hackerone.com/reports/864701\n- https://github.com/lodash/lodash/wiki/Changelog#v41719\n- https://web.archive.org/web/20210914001339/https://github.com/lodash/lodash/issues/4744\n- https://security.netapp.com/advisory/ntap-20200724-0006\n- https://github.com/rubysec/ruby-advisory-db/blob/master/gems/lodash-rails/CVE-2020-8203.yml\n- https://github.com/advisories/GHSA-p6mc-m468-83gw",
      "created": "2020-07-15T19:15:48.000Z",
      "id": 1106920,
      "npm_advisory_id": null,
      "overview": "Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The functions `pick`, `set`, `setWith`, `update`, `updateWith`, and `zipObjectDeep` allow a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires manipulating objects based on user-provided property values or arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.",
      "reported_by": null,
      "title": "Prototype Pollution in lodash",
      "metadata": null,
      "cves": [
        "CVE-2020-8203"
      ],
      "access": "public",
      "severity": "high",
      "module_name": "lodash",
      "vulnerable_versions": ">=3.7.0 <4.17.19",
      "github_advisory_id": "GHSA-p6mc-m468-83gw",
      "recommendation": "Upgrade to version 4.17.19 or later",
      "patched_versions": ">=4.17.19",
      "updated": "2025-08-12T21:43:40.000Z",
      "cvss": {
        "score": 7.4,
        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H"
      },
      "cwe": [
        "CWE-770",
        "CWE-1321"
      ],
      "url": "https://github.com/advisories/GHSA-p6mc-m468-83gw"
    },
    "1106923": {
      "findings": [
        {
          "version": "3.10.1",
          "paths": []
        },
        {
          "version": "2.4.2",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2019-1010266\n- https://github.com/lodash/lodash/issues/3359\n- https://snyk.io/vuln/SNYK-JS-LODASH-73639\n- https://github.com/lodash/lodash/commit/5c08f18d365b64063bfbfa686cbb97cdd6267347\n- https://github.com/lodash/lodash/wiki/Changelog\n- https://security.netapp.com/advisory/ntap-20190919-0004\n- https://github.com/rubysec/ruby-advisory-db/blob/master/gems/lodash-rails/CVE-2019-1010266.yml\n- https://github.com/advisories/GHSA-x5rq-j2xg-h7qm",
      "created": "2019-07-19T16:13:07.000Z",
      "id": 1106923,
      "npm_advisory_id": null,
      "overview": "lodash prior to 4.7.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.7.11.",
      "reported_by": null,
      "title": "Regular Expression Denial of Service (ReDoS) in lodash",
      "metadata": null,
      "cves": [
        "CVE-2019-1010266"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "lodash",
      "vulnerable_versions": "<4.17.11",
      "github_advisory_id": "GHSA-x5rq-j2xg-h7qm",
      "recommendation": "Upgrade to version 4.17.11 or later",
      "patched_versions": ">=4.17.11",
      "updated": "2025-08-12T21:36:29.000Z",
      "cvss": {
        "score": 0,
        "vectorString": null
      },
      "cwe": [
        "CWE-400"
      ],
      "url": "https://github.com/advisories/GHSA-x5rq-j2xg-h7qm"
    }
  },
  "muted": [],
  "metadata": {
    "vulnerabilities": {
      "info": 0,
      "low": 3,
      "moderate": 20,
      "high": 14,
      "critical": 6
    },
    "dependencies": 2138,
    "devDependencies": 0,
    "optionalDependencies": 0,
    "totalDependencies": 2138
  }
}
