{
  // ESLint Configuration for NeonPro Healthcare Platform
  // Comprehensive linting with healthcare compliance rules
  // Optimized for TypeScript React monorepo with healthcare requirements

  "env": {
    "browser": true,
    "node": true,
    "es2022": true
  },

  "extends": [
    "eslint:recommended",
    "@typescript-eslint/recommended",
    "@typescript-eslint/recommended-requiring-type-checking",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:security/recommended"
  ],

  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json",
    "tsconfigRootDir": "./"
  },

  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "jsx-a11y",
    "import",
    "security",
    "promise"
  ],

  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json"
      }
    }
  },

  "rules": {
    // TypeScript compliance for healthcare applications
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/no-explicit-any": ["error", { "fixToUnknown": true }],
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-floating-promises": "error",

    // React best practices for healthcare UI
    "react/jsx-no-target-blank": "error",
    "react/jsx-curly-brace-presence": ["error", { "props": "never", "children": "never" }],
    "react/no-unescaped-entities": "error",
    "react/no-array-index-key": "error",
    "react/no-children-prop": "error",
    "react/prop-types": "off", // Using TypeScript instead

    // React Hooks
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",

    // Accessibility (WCAG 2.1 AA+ compliance)
    "jsx-a11y/alt-text": "error",
    "jsx-a11y/anchor-is-valid": "error",
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/aria-proptypes": "error",
    "jsx-a11y/aria-unsupported-elements": "error",
    "jsx-a11y/role-has-required-aria-props": "error",
    "jsx-a11y/role-supports-aria-props": "error",

    // Import organization and dependency management
    "import/order": ["error", {
      "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
      "newlines-between": "always",
      "alphabetize": {
        "order": "asc",
        "caseInsensitive": true
      }
    }],
    "import/no-unresolved": "error",
    "import/no-extraneous-dependencies": "error",
    "import/no-cycle": "error",

    // Security rules for healthcare data protection
    "security/detect-object-injection": "error",
    "security/detect-non-literal-fs-filename": "error",
    "security/detect-non-literal-regexp": "error",
    "security/detect-pseudoRandomBytes": "error",
    "security/detect-unsafe-regex": "error",

    // Code quality and best practices
    "no-unused-vars": "off", // Use TypeScript version
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-debugger": "error",
    "prefer-const": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "prefer-arrow-callback": "error",

    // Promise handling for async operations
    "promise/prefer-await-to-then": "error",
    "promise/no-return-wrap": "error",
    "promise/param-names": "error",
    "promise/catch-or-return": "error",

    // General best practices
    "eqeqeq": ["error", "always"],
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-throw-literal": "error",
    "no-unneeded-ternary": "error",
    "prefer-template": "error"
  },

  "overrides": [
    {
      "files": ["**/*.test.{ts,tsx}", "**/*.spec.{ts,tsx}"],
      "env": {
        "jest": true,
        "vitest": true
      },
      "rules": {
        "no-console": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "security/detect-object-injection": "warn"
      }
    },
    {
      "files": ["**/*.config.{js,ts}"],
      "rules": {
        "no-console": "off",
        "import/no-extraneous-dependencies": "off",
        "@typescript-eslint/no-var-requires": "off"
      }
    },
    {
      "files": ["src/compliance/**/*.{ts,tsx}"],
      "rules": {
        "no-console": "error",
        "security/detect-object-injection": "error",
        "@typescript-eslint/no-explicit-any": ["error", { "fixToUnknown": true }],
        "no-eval": "error",
        "no-implied-eval": "error"
      }
    },
    {
      "files": ["src/agents/**/*.{ts,tsx}"],
      "rules": {
        "require-jsdoc": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "prefer-const": "error"
      }
    },
    {
      "files": ["apps/web/src/**/*.{ts,tsx}"],
      "rules": {
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "error",
        "jsx-a11y/alt-text": "error",
        "jsx-a11y/anchor-is-valid": "error"
      }
    }
  ],

  "ignorePatterns": [
    "node_modules/**",
    "dist/**",
    "build/**",
    "coverage/**",
    "test-results/**",
    "*.min.js",
    "playwright-report/**",
    ".next/**",
    ".turbo/**",
    "tools/**/node_modules/**",
    "packages/**/dist/**",
    "apps/**/dist/**",
    "vitest.config.*",
    "vite.config.*",
    "tailwind.config.*"
  ]
}