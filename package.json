{
  "name": "monorepo-audit-optimization",
  "version": "0.1.0",
  "description": "Comprehensive monorepo audit and optimization tool with Turborepo, Hono, and TanStack Router support",
  "main": "dist/index.js",
  "bin": {
    "audit-tool": "./dist/cli/audit-tool.js"
  },
  "type": "module",
  "packageManager": "pnpm@9.0.0",
  "engines": {
    "node": ">=20.0.0"
  },
  "pnpm": {
    "overrides": {
      "esbuild": ">=0.25.0"
    }
  },
  "scripts": {
    "build": "tsc",
    "dev": "tsc --watch",
    "test": "bun test --config .config/testing/vitest.config.ts",
    "test:contract": "bun test tests/contract --config .config/testing/vitest.config.ts",
    "test:integration": "bun test tests/integration --config .config/testing/vitest.config.ts",
    "test:unit": "bun test tests/unit --config .config/testing/vitest.config.ts",
    "test:performance": "bun test tests/performance --config .config/testing/vitest.config.ts",
    "lint": "eslint \"apps/**/*.{ts,tsx,js,jsx}\" \"packages/**/*.{ts,tsx,js,jsx}\" --ext .ts --config .config/eslint/.eslintrc.json",
    "lint:fix": "eslint src/ --ext .ts --fix --config .config/eslint/.eslintrc.json",
    "format": "prettier --write src/ --config .config/prettier/.prettierrc.json",
    "format:check": "prettier --check src/ --config .config/prettier/.prettierrc.json",
    "type-check": "tsc --noEmit",
    "clean": "rm -rf dist/",
    "audit-tool": "node dist/cli/audit-tool.js",
    "constitutional:quick": "cd tools/audit && npx tsx src/cli/index.ts quick --target . --verbose",
    "constitutional:full": "cd tools/audit && npx tsx src/cli/index.ts constitutional --target . --verbose",
    "constitutional:benchmark": "cd tools/audit && npx tsx src/cli/index.ts benchmark --target . --verbose",
    "constitutional:setup": "cd tools/audit && chmod +x .tools/.husky/pre-commit && git config core.hooksPath .tools/.husky",
    "scan:bundle": "bun tsx tools/testing/scripts/scan-bundle.ts dist apps packages",
    "audit:licenses": "bun tsx tools/audit/license-audit.ts",
    "log:demo": "bun tsx -e \"import { createLogger } from './packages/utils/src/logging/logger.ts'; const l=createLogger('demo'); l.info('User test@example.com CPF 123.456.789-09');\"",
    "dev:workflow": "./scripts/dev-workflow.sh",
    "dev:setup": "./scripts/dev-workflow.sh setup",
    "dev:quality": "./scripts/dev-workflow.sh quality",
    "dev:test-all": "./scripts/dev-workflow.sh test",
    "dev:build-validate": "./scripts/dev-workflow.sh build",
    "dev:deploy": "./scripts/dev-workflow.sh deploy",
    "dev:monitor": "./scripts/dev-workflow.sh monitor",
    "dev:compliance": "./scripts/dev-workflow.sh compliance",
    "dev:performance": "./scripts/dev-workflow.sh performance",
    "healthcare:compliance": "./scripts/dev-workflow.sh compliance",
    "healthcare:performance": "node scripts/performance/dashboard-generator.cjs",
    "monitoring:health": "node monitoring/scripts/health-check.js",
    "monitoring:performance": "node monitoring/scripts/performance-monitor.js",
    "performance:report": "node scripts/performance/dashboard-generator.cjs",
    "performance:vitals": "node scripts/performance/core-web-vitals.cjs",
    "e2e:post-deploy": "node tests/e2e/post-deploy-tests.js",
    "deploy:production": "./scripts/deploy.sh",
    "deploy:dry-run": "./scripts/deploy.sh --dry-run",
    "setup:monitoring": "./scripts/monitoring/setup-alerts.sh",
    "quality:full": "npm run build && npm run lint && npm run type-check",
    "workflow:ci": "./scripts/dev-workflow.sh quality && ./scripts/dev-workflow.sh test",
    "workflow:pre-deploy": "./scripts/dev-workflow.sh full"
  },
  "keywords": [
    "monorepo",
    "audit",
    "optimization",
    "turborepo",
    "hono",
    "tanstack-router",
    "dependency-analysis",
    "architecture-validation",
    "cleanup",
    "cli"
  ],
  "author": "Development Team",
  "license": "MIT",
  "dependencies": {
    "chalk": "^5.6.2",
    "commander": "^11.1.0",
    "dprint": "^0.50.1",
    "fs-extra": "^11.3.1",
    "ioredis": "^5.7.0",
    "ora": "^8.2.0",
    "ts-morph": "^21.0.1"
  },
  "devDependencies": {
    "@playwright/test": "^1.55.0",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/fs-extra": "^11.0.4",
    "@types/jsdom": "^21.1.7",
    "@types/node": "^20.19.13",
    "@types/react": "^19.1.12",
    "@types/react-dom": "^19.1.9",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vitest/coverage-v8": "3.2.4",
    "ajv": "^8.17.1",
    "bun-types": "^1.2.21",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.2",
    "eslint-plugin-prettier": "^5.5.4",
    "jsdom": "^26.1.0",
    "oxlint": "^1.14.0",
    "prettier": "^3.6.2",
    "tsx": "^4.20.5",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4",
    "yaml": "^2.8.1",
    "web-vitals": "^4.0.0"
  },
  "performance": {
    "targets": {
      "maxFilesProcessed": 10000,
      "maxExecutionTimeMs": 30000,
      "maxMemoryUsageMB": 500
    },
    "constraints": {
      "concurrentProcessing": true,
      "memoryOptimized": true,
      "progressReporting": true
    }
  },
  "architecture": {
    "patterns": [
      "library-per-feature",
      "cli-interface",
      "contract-testing"
    ],
    "frameworks": [
      "turborepo",
      "hono",
      "tanstack-router"
    ],
    "compliance": [
      "tdd",
      "structured-logging",
      "rollback-capability"
    ]
  }
}