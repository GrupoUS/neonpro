./vitest.config.ts:3:import path from "node:path";
./vitest.config.ts:4:import { defineConfig } from "vitest/config";
./packages/auth/scripts/setup-rbac.ts:12:import { createClient } from "@supabase/supabase-js";
./packages/auth/scripts/setup-rbac.ts:13:import { config } from "dotenv";
./packages/auth/scripts/setup-rbac.ts:14:import { readFileSync } from "node:fs";
./packages/auth/scripts/setup-rbac.ts:15:import { join } from "node:path";
./packages/auth/src/AuthService.ts:6:import { EnhancedServiceBase } from "@neonpro/core-services";
./packages/auth/src/AuthService.ts:7:import { createClient } from "@supabase/supabase-js";
./packages/auth/src/AuthService.ts:8:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/auth/src/AuthService.ts:9:import bcrypt from "bcryptjs";
./packages/auth/src/AuthService.ts:10:import jwt from "jsonwebtoken";
./packages/auth/src/AuthService.ts:11:import QRCode from "qrcode";
./packages/auth/src/AuthService.ts:12:import speakeasy from "speakeasy";
./packages/auth/src/AuthService.ts:13:import type {
./packages/auth/src/components/index.ts:6:import type { ComponentType } from "react";
./packages/auth/src/hooks/index.ts:6:import type { ReactNode } from "react";
./packages/auth/src/hooks/index.ts:7:import type { IAuthService, User } from "../types";
./packages/auth/src/utils.ts:6:import bcrypt from "bcryptjs";
./packages/auth/src/utils.ts:7:import jwt from "jsonwebtoken";
./packages/auth/src/utils.ts:8:import type { PasswordPolicy, TokenPayload } from "./types";
./packages/cache/src/browser-cache.ts:1:import type { CacheOperation, CacheStats, HealthcareDataPolicy } from "./types";
./packages/cache/src/supabase-cache.ts:1:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/cache/src/supabase-cache.ts:2:import { createClient } from "@supabase/supabase-js";
./packages/cache/src/supabase-cache.ts:3:import type { CacheOperation, CacheStats, SupabaseCacheConfig } from "./types";
./packages/cache/src/index.ts:22:import { MultiLayerCacheManager } from "./cache-manager";
./packages/cache/src/index.ts:23:import type { MultiLayerCacheConfig } from "./cache-manager";
./packages/cache/src/index.ts:24:import type { CacheConfig } from "./types";
./packages/cache/src/index.ts:25:import { CacheLayer } from "./types";
./packages/cache/src/ai-context-cache.ts:1:import type { CacheOperation, CacheStats } from "./types";
./packages/cache/src/enterprise.ts:7:import type { MultiLayerCacheManager } from "./cache-manager";
./packages/cache/src/enterprise.ts:8:import type { CacheLayer } from "./types";
./packages/cache/src/cache-manager.ts:1:import { AIContextCacheLayer } from "./ai-context-cache";
./packages/cache/src/cache-manager.ts:2:import { BrowserCacheLayer } from "./browser-cache";
./packages/cache/src/cache-manager.ts:3:import { EdgeCacheLayer } from "./edge-cache";
./packages/cache/src/cache-manager.ts:4:import { SupabaseCacheLayer } from "./supabase-cache";
./packages/cache/src/cache-manager.ts:5:import { CacheLayer } from "./types";
./packages/cache/src/cache-manager.ts:6:import type {
./packages/cache/src/edge-cache.ts:1:import type { CacheEntry, CacheOperation, CacheStats } from "./types";
./packages/core-services/vitest.config.ts:1:import { defineConfig } from "vitest/config";
./packages/core-services/tests/integration.test.ts:1:import { beforeEach, describe, expect, it, vi } from "vitest";
./packages/core-services/tests/integration.test.ts:2:import type { AISchedulingConfig, CreatePatientData } from "../src";
./packages/core-services/tests/integration.test.ts:3:import {
./packages/core-services/tsup.config.ts:1:import { defineConfig } from "tsup";
./packages/core-services/src/inventory/types.ts:1:import { z } from "zod";
./packages/core-services/src/inventory/types.ts:2:import { DateSchema, NonNegativeNumberSchema, PositiveNumberSchema, UUIDSchema } from "../types";
./packages/core-services/src/inventory/types.ts:3:import type { BaseEntity, InventoryStatus } from "../types";
./packages/core-services/src/inventory/service.ts:1:import { differenceInDays } from "date-fns";
./packages/core-services/src/inventory/service.ts:2:import { InventoryStatus } from "../types";
./packages/core-services/src/inventory/service.ts:3:import type {
./packages/core-services/src/inventory/service.ts:14:import { AlertSeverity, AlertType, MovementType, OrderStatus } from "./types";
./packages/core-services/src/inventory/service.ts:15:import type { ProductCategory } from "./types";
./packages/core-services/src/types.ts:7:import { z } from "zod";
./packages/core-services/src/enterprise/cache/EnterpriseCacheService.ts:16:// import type Redis from "ioredis";
./packages/core-services/src/enterprise/cache/EnterpriseCacheService.ts:17:import { LRUCache } from "lru-cache";
./packages/core-services/src/enterprise/cache/EnterpriseCacheService.ts:18:import type { PerformanceMetrics } from "../../types";
./packages/core-services/src/enterprise/analytics/EnterpriseAnalyticsService.ts:18:import type { PerformanceMetrics } from "../../types";
./packages/core-services/src/enterprise/security/EnterpriseSecurityService.ts:19:import crypto from "node:crypto";
./packages/core-services/src/enterprise/security/EnterpriseSecurityService.ts:20:import type { AuditEvent, SecurityConfig, ServiceContext } from "../../types";
./packages/core-services/src/notification/types.ts:1:import { z } from "zod";
./packages/core-services/src/notification/types.ts:2:import { DateSchema, EmailSchema, NotificationType, PhoneSchema, UUIDSchema } from "../types";
./packages/core-services/src/notification/types.ts:3:import type { BaseEntity } from "../types";
./packages/core-services/src/notification/service.ts:1:import { addHours, format, isBefore } from "date-fns";
./packages/core-services/src/notification/service.ts:2:import { NotificationType } from "../types";
./packages/core-services/src/notification/service.ts:3:import type {
./packages/core-services/src/notification/service.ts:15:import {
./packages/core-services/src/treatment/types.ts:1:import { z } from "zod";
./packages/core-services/src/treatment/types.ts:2:import { DateSchema, PositiveNumberSchema, TreatmentType, UUIDSchema } from "../types";
./packages/core-services/src/treatment/types.ts:3:import type { BaseEntity } from "../types";
./packages/core-services/src/treatment/service.ts:1:import { addDays } from "date-fns";
./packages/core-services/src/treatment/service.ts:2:import type {
./packages/core-services/src/treatment/service.ts:10:import { TreatmentStatus } from "./types";
./packages/core-services/src/hooks/useComplianceAutomation.ts:8:// CONTENT CHECK: import { useState, useEffect, useCallback } from 'react';
./packages/core-services/src/hooks/use-patients.ts:1:import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
./packages/core-services/src/hooks/use-patients.ts:2:import { toast } from "sonner";
./packages/core-services/src/hooks/use-patients.ts:3:import { patientApi, patientKeys } from "../lib/api/patients";
./packages/core-services/src/test/enterprise-validation.test.ts:6:import { UnifiedAuditService as EnterpriseAuditService } from "@neonpro/security";
./packages/core-services/src/test/enterprise-validation.test.ts:7:import { EnhancedServiceBase } from "../base/EnhancedServiceBase";
./packages/core-services/src/test/enterprise-validation.test.ts:8:import { EnterpriseAnalyticsService } from "../enterprise/analytics/EnterpriseAnalyticsService";
./packages/core-services/src/test/enterprise-validation.test.ts:9:import { EnterpriseCacheService } from "../enterprise/cache/EnterpriseCacheService";
./packages/core-services/src/test/enterprise-validation.test.ts:10:import { EnterpriseSecurityService } from "../enterprise/security/EnterpriseSecurityService";
./packages/core-services/src/test/enterprise-validation.test.ts:11:import { EnterpriseHealthCheckService } from "../health/EnterpriseHealthCheckService";
./packages/core-services/src/test/fase3-integration-validation.js:6:import fs from "node:fs";
./packages/core-services/src/test/fase3-integration-validation.js:7:import path from "node:path";
./packages/core-services/src/scheduling/service.ts:1:import type {
./packages/core-services/src/scheduling/service.ts:405:    // This would import and instantiate the AISchedulingEngine
./packages/core-services/src/scheduling/index.ts:1:// Placeholder scheduling module to resolve import errors
./packages/core-services/src/health/EnterpriseHealthCheckService.ts:11:import { UnifiedAuditService as EnterpriseAuditService } from "@neonpro/security";
./packages/core-services/src/health/EnterpriseHealthCheckService.ts:12:import { EnterpriseAnalyticsService } from "../enterprise/analytics/EnterpriseAnalyticsService";
./packages/core-services/src/health/EnterpriseHealthCheckService.ts:13:import { EnterpriseCacheService } from "../enterprise/cache/EnterpriseCacheService";
./packages/core-services/src/health/EnterpriseHealthCheckService.ts:14:import { EnterpriseSecurityService } from "../enterprise/security/EnterpriseSecurityService";
./packages/core-services/src/base/EnhancedServiceBase.ts:12:import {
./packages/core-services/src/base/EnhancedServiceBase.ts:18:import { EnterpriseHealthCheckService } from "../health";
./packages/core-services/src/base/EnhancedServiceBase.ts:19:import type { AuditEvent, PerformanceMetrics, SecurityConfig, ServiceContext } from "../types";
./packages/core-services/src/base/__tests__/EnhancedServiceBase.test.ts:7:import type { ServiceContext } from "../../types";
./packages/core-services/src/base/__tests__/EnhancedServiceBase.test.ts:8:import { EnhancedServiceBase } from "../EnhancedServiceBase";
./packages/core-services/src/base/__tests__/EnhancedServiceBase.test.ts:9:import type { ServiceConfig } from "../EnhancedServiceBase";
./packages/core-services/src/patient/types.ts:1:import { z } from "zod";
./packages/core-services/src/patient/types.ts:2:import { DateSchema, EmailSchema, PatientStatus, PhoneSchema, UUIDSchema } from "../types";
./packages/core-services/src/patient/types.ts:3:import type { BaseEntity } from "../types";
./packages/core-services/src/patient/service.ts:1:import { differenceInYears } from "date-fns";
./packages/core-services/src/patient/service.ts:2:import { PatientStatus } from "../types";
./packages/core-services/src/patient/service.ts:3:import type {
./packages/core-services/src/patient/enhanced-service.ts:7:import { EnhancedServiceBase } from "../base/EnhancedServiceBase";
./packages/core-services/src/patient/enhanced-service.ts:8:import type { ServiceConfig } from "../base/EnhancedServiceBase";
./packages/core-services/src/patient/enhanced-service.ts:9:import type { ServiceContext } from "../types";
./packages/core-services/src/billing/types.ts:1:import { z } from "zod";
./packages/core-services/src/billing/types.ts:2:import { DateSchema, NonNegativeNumberSchema, PositiveNumberSchema, UUIDSchema } from "../types";
./packages/core-services/src/billing/types.ts:3:import type { BaseEntity, BillingStatus } from "../types";
./packages/core-services/src/billing/service.ts:1:import { addDays, addMonths, isAfter, isBefore } from "date-fns";
./packages/core-services/src/billing/service.ts:2:import { BillingStatus } from "../types";
./packages/core-services/src/billing/service.ts:3:import type {
./packages/core-services/src/billing/service.ts:17:import {
./packages/core-services/src/services/AnalyticsService.ts:12:import { EnhancedServiceBase } from "../base/EnhancedServiceBase";
./packages/core-services/src/services/AnalyticsService.ts:13:import type { ServiceConfig } from "../base/EnhancedServiceBase";
./packages/core-services/src/services/AnalyticsService.ts:14:import type { ServiceContext } from "../types";
./packages/core-services/src/services/configuration.ts:6:import { createClient } from "@supabase/supabase-js";
./packages/core-services/src/services/AIService.ts:12:import { EnhancedServiceBase } from "../base/EnhancedServiceBase";
./packages/core-services/src/services/AIService.ts:13:import type { ServiceConfig } from "../base/EnhancedServiceBase";
./packages/core-services/src/services/AIService.ts:14:import type { ServiceContext } from "../types";
./packages/core-services/src/services/api-gateway.ts:6:import rateLimit from "express-rate-limit";
./packages/core-services/src/services/api-gateway.ts:7:import slowDown from "express-slow-down";
./packages/core-services/src/services/api-gateway.ts:8:import { NextResponse } from "next/server";
./packages/core-services/src/services/api-gateway.ts:9:import type { NextRequest } from "next/server";
./packages/core-services/src/services/compliance.ts:6:import { createClient } from "@supabase/supabase-js";
./packages/core-services/src/services/compliance.ts:7:import { monitoring } from "./monitoring";
./packages/core-services/src/services/auth.ts:6:import { createClient } from "@supabase/supabase-js";
./packages/core-services/src/services/auth.ts:7:import { sign, verify } from "jsonwebtoken";
./packages/core-services/src/services/auth.ts:8:import { randomBytes, scrypt } from "node:crypto";
./packages/core-services/src/services/auth.ts:9:import { promisify } from "node:util";
./packages/core-services/src/services/auth.ts:10:import { config } from "./configuration";
./packages/core-services/src/services/auth.ts:11:import { monitoring } from "./monitoring";
./packages/core-services/src/services/ComplianceServiceEnhanced.ts:12:import { EnhancedServiceBase } from "../base/EnhancedServiceBase";
./packages/core-services/src/services/ComplianceServiceEnhanced.ts:13:import type { ServiceConfig } from "../base/EnhancedServiceBase";
./packages/core-services/src/services/ComplianceServiceEnhanced.ts:14:import type { ServiceContext } from "../types";
./packages/core-services/src/services/patient.ts:6:import { createClient } from "@supabase/supabase-js";
./packages/core-services/src/services/patient.ts:7:import { monitoring } from "./monitoring";
./packages/core-services/src/services/notification.ts:6:import { createClient } from "@supabase/supabase-js";
./packages/core-services/src/services/notification.ts:7:import { config } from "./configuration";
./packages/core-services/src/services/notification.ts:8:import { monitoring } from "./monitoring";
./packages/core-services/src/services/monitoring.ts:6:import { createClient } from "@supabase/supabase-js";
./packages/core-services/src/services/financial.ts:6:import { createClient } from "@supabase/supabase-js";
./packages/core-services/src/services/financial.ts:7:import { config } from "./configuration";
./packages/core-services/src/services/financial.ts:8:import { monitoring } from "./monitoring";
./packages/core-services/src/resilience/circuit-breaker-manager.ts:1:import type { CircuitBreakerConfig } from "./healthcare-circuit-breaker";
./packages/core-services/src/resilience/circuit-breaker-manager.ts:2:import { CircuitBreakerState, HealthcareCircuitBreaker } from "./healthcare-circuit-breaker";
./packages/core-services/src/resilience/circuit-breaker-manager.ts:3:import type { ServiceDegradationConfig } from "./service-degradation";
./packages/core-services/src/resilience/circuit-breaker-manager.ts:4:import { healthcareServiceDegradations } from "./service-degradation";
./packages/health-dashboard/tsup.config.ts:1:import { defineConfig } from "tsup";
./packages/health-dashboard/src/components/cache-metrics.tsx:3:import { useEffect, useState } from "react";
./packages/health-dashboard/src/components/cache-metrics.tsx:4:import { MetricWidget } from "./metric-widgets";
./packages/health-dashboard/src/components/dashboard.tsx:3:import type { Alert, HealthCheckResult, PerformanceInsight } from "@neonpro/monitoring";
./packages/health-dashboard/src/components/dashboard.tsx:4:import { useEffect, useState } from "react";
./packages/database/supabase/functions/stock-alerts-processor/index.ts:5:import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
./packages/database/supabase/functions/stock-alerts-processor/index.ts:6:import { createClient } from "https://esm.sh/@supabase/supabase-js@2";
./packages/database/supabase/functions/subscription-billing-processor/index.ts:5:import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
./packages/database/supabase/functions/subscription-billing-processor/index.ts:6:import { createClient } from "https://esm.sh/@supabase/supabase-js@2";
./packages/database/supabase/functions/stock-reports-generator/index.ts:5:import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
./packages/database/supabase/functions/stock-reports-generator/index.ts:6:import { createClient } from "https://esm.sh/@supabase/supabase-js@2";
./packages/database/scripts/apply-migration.js:6:import { execFile, spawn } from "node:child_process";
./packages/database/scripts/apply-migration.js:7:import fs from "node:fs";
./packages/database/src/auth.ts:7:import type { Session, User } from "@supabase/supabase-js";
./packages/database/src/auth.ts:8:import { cookies } from "next/headers";
./packages/database/src/auth.ts:9:import { redirect } from "next/navigation";
./packages/database/src/auth.ts:10:import { cache } from "react";
./packages/database/src/auth.ts:11:import { createServerClient } from "./client";
./packages/database/src/rls-validator.ts:7:import { createAdminClient } from "./client";
./packages/database/src/health-check.ts:7:import { createAdminClient, createClient, getSupabaseConfig } from "./client";
./packages/database/src/client.ts:7:import { createBrowserClient, createServerClient as createSSRServerClient } from "@supabase/ssr";
./packages/database/src/client.ts:8:import { createClient as createSupabaseClient } from "@supabase/supabase-js";
./packages/database/src/client.ts:9:import type { Database } from "./types";
./packages/types/src/appointment.ts:1:import type { BaseEntity } from "./common";
./packages/types/src/clinic.ts:1:import type { BaseEntity } from "./common";
./packages/types/src/user.ts:1:import type { BaseEntity } from "./common";
./packages/types/src/professional.ts:1:import type { BaseEntity } from "./common";
./packages/types/src/patient.ts:1:import type { BaseEntity } from "./common";
./packages/types/src/ml-pipeline.ts:7:import type { BaseEntity } from "./common";
./packages/monitoring/scripts/generate-quality-report.ts:10:import { execSync } from "node:child_process";
./packages/monitoring/scripts/generate-quality-report.ts:11:import { existsSync, readFileSync, writeFileSync } from "node:fs";
./packages/monitoring/scripts/generate-quality-report.ts:12:import path from "node:path";
./packages/monitoring/scripts/generate-quality-report.ts:13:import { fileURLToPath } from "node:url";
./packages/monitoring/scripts/validate-turborepo-performance.js:6:import { execSync } from "node:child_process";
./packages/monitoring/scripts/validate-turborepo-performance.js:7:import fs from "node:fs";
./packages/monitoring/scripts/validate-turborepo-performance.js:8:import path from "node:path";
./packages/monitoring/scripts/complete-system-validation.ts:7:import fs from "node:fs/promises";
./packages/monitoring/src/realtime/dashboard.tsx:15:import { createClient } from "@neonpro/database";
./packages/monitoring/src/realtime/dashboard.tsx:16:import React, { useCallback, useEffect, useState } from "react";
./packages/monitoring/src/realtime/dashboard.tsx:17:import type {
./packages/monitoring/src/realtime/supabase-metrics-streamer.ts:12:import { createClient } from "@neonpro/database";
./packages/monitoring/src/realtime/supabase-metrics-streamer.ts:13:import type {
./packages/monitoring/src/web-vitals/core-web-vitals.ts:6:import type { CLSMetric, FCPMetric, FIDMetric, INPMetric, LCPMetric, TTFBMetric } from "web-vitals";
./packages/monitoring/src/web-vitals/core-web-vitals.ts:7:import { onCLS, onFCP, onFID, onINP, onLCP, onTTFB } from "web-vitals";
./packages/monitoring/src/web-vitals/core-web-vitals.ts:8:import type {
./packages/monitoring/src/healthcare/health-checks.ts:1:import type { HealthCheckResult } from "./healthcare-metrics";
./packages/monitoring/src/client/index.ts:10:import { onCLS, onFCP, onFID, onINP, onLCP, onTTFB } from "web-vitals";
./packages/monitoring/src/client/index.ts:11:import type { Metric } from "web-vitals";
./packages/monitoring/src/client/index.ts:12:import type {
./packages/monitoring/src/index.ts:50:import { AIMetricsCollector } from "./collectors/ai-metrics-collector";
./packages/monitoring/src/index.ts:51:import { CacheMetricsCollector } from "./collectors/cache-collector";
./packages/monitoring/src/index.ts:52:import { SystemMetricsCollector } from "./collectors/system-collector";
./packages/monitoring/src/index.ts:53:import { SupabaseMetricsStreamer } from "./realtime/supabase-metrics-streamer";
./packages/monitoring/src/index.ts:54:import type { ConsolidatedMonitoringConfig, PerformanceMetric } from "./types";
./packages/monitoring/src/index.ts:55:import { HealthcareWebVitals } from "./web-vitals/core-web-vitals";
./packages/monitoring/src/server/index.ts:8:import type { Metric } from "web-vitals";
./packages/monitoring/src/server/index.ts:9:import type {
./packages/monitoring/src/utils/index.ts:7:import type { CustomMetric, HealthcareMetricName, PerformanceThresholds } from "../types";
./packages/monitoring/src/enterprise.ts:6:import { EnhancedServiceBase } from "@neonpro/core-services";
./packages/monitoring/src/enterprise.ts:7:import type {
./packages/monitoring/src/enterprise.ts:13:import { getPerformanceMonitor, initPerformanceMonitoring, PerformanceMonitor } from "./client";
./packages/monitoring/src/collectors/cache-collector.ts:1:import { MetricType, MetricUnit } from "../types";
./packages/monitoring/src/collectors/cache-collector.ts:2:import type { MetricCollector, PerformanceMetric } from "../types";
./packages/monitoring/src/collectors/system-collector.ts:1:import { MetricType, MetricUnit } from "../types";
./packages/monitoring/src/collectors/system-collector.ts:2:import type { MetricCollector, PerformanceMetric } from "../types";
./packages/monitoring/src/collectors/ai-metrics-collector.ts:1:import { MetricType, MetricUnit } from "../types";
./packages/monitoring/src/collectors/ai-metrics-collector.ts:2:import type { MetricCollector, PerformanceMetric } from "../types";
./packages/monitoring/src/healthcare-monitoring-dashboard.ts:6:import type {
./packages/enterprise/scripts/setup-subscriptions.js:11:import { execSync } from "node:child_process";
./packages/enterprise/scripts/setup-subscriptions.js:12:import fs from "node:fs";
./packages/enterprise/scripts/setup-subscriptions.js:57:  import dotenv from "dotenv"; dotenv.config({ path: envPath });
./packages/enterprise/scripts/setup-subscriptions.js:84:    import { createClient } from "@supabase/supabase-js";
./packages/enterprise/scripts/setup-subscriptions.js:114:    import { createClient } from "@supabase/supabase-js";
./packages/enterprise/scripts/setup-subscriptions.js:141:    const stripe = require("stripe")(process.env.STRIPE_SECRET_KEY);
./packages/enterprise/src/api-gateway/healthcare-gateway.ts:5:import { NextResponse } from "next/server";
./packages/enterprise/src/api-gateway/healthcare-gateway.ts:6:import type { NextRequest } from "next/server";
./packages/enterprise/src/api-gateway/healthcare-gateway.ts:8:import { HealthcareAuthenticator } from "./auth-handler";
./packages/enterprise/src/api-gateway/healthcare-gateway.ts:9:import { CircuitBreaker } from "./circuit-breaker";
./packages/enterprise/src/api-gateway/healthcare-gateway.ts:10:import { ComplianceValidator } from "./compliance-validator";
./packages/enterprise/src/api-gateway/healthcare-gateway.ts:11:import { RateLimiter } from "./rate-limiter";
./packages/enterprise/src/api-gateway/healthcare-gateway.ts:12:import type { AuthContext, HealthcareMetadata, MicroserviceRoute } from "./types";
./packages/brazilian-healthcare-ui/tsup.config.ts:1:import { defineConfig } from "tsup";
./packages/brazilian-healthcare-ui/src/components/responsive-layout.tsx:3:import { useEffect, useState } from "react";
./packages/brazilian-healthcare-ui/src/components/responsive-layout.tsx:4:import type { ReactNode } from "react";
./packages/brazilian-healthcare-ui/src/components/responsive-layout.tsx:5:import type { ConnectivityLevel, RegionalSettings } from "../types";
./packages/brazilian-healthcare-ui/src/components/lgpd-compliance.tsx:3:import { useEffect, useState } from "react";
./packages/brazilian-healthcare-ui/src/components/lgpd-compliance.tsx:4:import type { AuditEvent, LGPDConsent } from "../types";
./packages/brazilian-healthcare-ui/src/components/emergency-access.tsx:3:import { useCallback, useEffect, useRef, useState } from "react";
./packages/brazilian-healthcare-ui/src/components/emergency-access.tsx:4:import type { EmergencyAlert, PatientInfo } from "../types";
./packages/shared/vitest.config.ts:1:import path from "node:path";
./packages/shared/vitest.config.ts:2:import { defineConfig } from "vitest/config";
./packages/shared/tests/api-client.test.ts:13:import { beforeEach, describe, expect, it, vi } from "vitest";
./packages/shared/tests/api-client.test.ts:35:import { ApiHelpers } from "../src/api-client";
./packages/shared/tests/hooks/realtime-integration.test.tsx:8:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./packages/shared/tests/hooks/realtime-integration.test.tsx:9:import { renderHook, waitFor } from "@testing-library/react";
./packages/shared/tests/hooks/realtime-integration.test.tsx:10:import type { ReactNode } from "react";
./packages/shared/tests/hooks/realtime-integration.test.tsx:11:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./packages/shared/tests/hooks/realtime-integration.test.tsx:14:import { useRealtime, useRealtimeQuery } from "../../src/hooks/use-realtime";
./packages/shared/src/auth/auth-provider.tsx:8:import { createContext, useContext } from "react";
./packages/shared/src/auth/auth-provider.tsx:9:import type { ReactNode } from "react";
./packages/shared/src/auth/auth-provider.tsx:10:import { useAuthToken } from "./use-auth-token";
./packages/shared/src/auth/auth-provider.tsx:11:import type { AuthUser, LoginCredentials } from "./use-auth-token";
./packages/shared/src/auth/use-auth-token.ts:6:import { useCallback, useEffect, useRef, useState } from "react";
./packages/shared/src/auth/use-auth-token.ts:7:import { authTokenManager } from "./auth-token-manager";
./packages/shared/src/auth/use-auth-token.ts:8:import type { AuthTokens } from "./auth-token-manager";
./packages/shared/src/auth/usage-example.tsx:8:import React from "react";
./packages/shared/src/auth/usage-example.tsx:9:import { AuthProvider, ProtectedRoute, useAuth, withAuth } from "./index";
./packages/shared/src/auth/auth-e2e-test.ts:6:import { authTokenManager } from "./auth-token-manager";
./packages/shared/src/auth/protected-route.tsx:8:import { useRouter } from "next/navigation";
./packages/shared/src/auth/protected-route.tsx:9:import type React from "react";
./packages/shared/src/auth/protected-route.tsx:10:import type { ReactNode } from "react";
./packages/shared/src/auth/protected-route.tsx:11:import { useAuth } from "./auth-provider";
./packages/shared/src/auth/supabase.ts:9:import { createClient } from "@supabase/supabase-js";
./packages/shared/src/auth/auth-middleware.ts:6:import { createMiddleware } from "hono/factory";
./packages/shared/src/auth/auth-middleware.ts:7:import { HTTPException } from "hono/http-exception";
./packages/shared/src/auth/auth-middleware.ts:8:import jwt from "jsonwebtoken";
./packages/shared/src/auth/auth-middleware.ts:9:import type { AuthContext } from "../types/hono.types";
./packages/shared/src/errors/error-strategies.ts:1:import type { ErrorHandlingStrategy } from "./healthcare-error-types";
./packages/shared/src/errors/error-strategies.ts:2:import { ErrorCategory } from "./healthcare-error-types";
./packages/shared/src/errors/error-utils.ts:1:import { errorHandlingStrategies } from "./error-strategies";
./packages/shared/src/errors/error-utils.ts:2:import type { ErrorContext, HealthcareError } from "./healthcare-error-types";
./packages/shared/src/errors/error-utils.ts:3:import { ErrorCategory, ErrorSeverity } from "./healthcare-error-types";
./packages/shared/src/realtime/hooks/use-realtime-appointments.ts:7:import { useQueryClient } from "@tanstack/react-query";
./packages/shared/src/realtime/hooks/use-realtime-appointments.ts:8:import { useCallback, useEffect, useState } from "react";
./packages/shared/src/realtime/hooks/use-realtime-appointments.ts:9:import type { Database } from "../../types/database.types";
./packages/shared/src/realtime/hooks/use-realtime-appointments.ts:10:import { getRealtimeManager } from "../connection-manager";
./packages/shared/src/realtime/hooks/use-realtime-notifications.ts:7:import { useQueryClient } from "@tanstack/react-query";
./packages/shared/src/realtime/hooks/use-realtime-notifications.ts:8:import { useCallback, useEffect, useRef, useState } from "react";
./packages/shared/src/realtime/hooks/use-realtime-notifications.ts:9:import type { Notification } from "../../types/database.types";
./packages/shared/src/realtime/hooks/use-realtime-notifications.ts:10:import { getRealtimeManager } from "../connection-manager";
./packages/shared/src/realtime/hooks/use-realtime-patients.ts:7:import { useQueryClient } from "@tanstack/react-query";
./packages/shared/src/realtime/hooks/use-realtime-patients.ts:8:import { useCallback, useEffect, useState } from "react";
./packages/shared/src/realtime/hooks/use-realtime-patients.ts:9:import type { Database } from "../../types/database.types";
./packages/shared/src/realtime/hooks/use-realtime-patients.ts:10:import { getRealtimeManager } from "../connection-manager";
./packages/shared/src/realtime/hooks/use-realtime-compliance.ts:1:import { useQueryClient } from "@tanstack/react-query";
./packages/shared/src/realtime/hooks/use-realtime-compliance.ts:2:import { useCallback, useEffect, useState } from "react";
./packages/shared/src/realtime/hooks/use-realtime-compliance.ts:3:import { getRealtimeManager } from "../connection-manager";
./packages/shared/src/realtime/connection-manager.ts:8:import { createClient } from "@supabase/supabase-js";
./packages/shared/src/realtime/connection-manager.ts:9:import type { RealtimeChannel, SupabaseClient } from "@supabase/supabase-js";
./packages/shared/src/realtime/connection-manager.ts:10:import type { Database } from "../types/database.types";
./packages/shared/src/realtime/providers/realtime-provider.tsx:7:import { createContext, useCallback, useContext, useEffect, useState } from "react";
./packages/shared/src/realtime/providers/realtime-provider.tsx:8:import type { ReactNode } from "react";
./packages/shared/src/realtime/providers/realtime-provider.tsx:9:import { getRealtimeConfig } from "../config";
./packages/shared/src/realtime/providers/realtime-provider.tsx:10:import { getRealtimeManager } from "../connection-manager";
./packages/shared/src/realtime/providers/realtime-provider.tsx:11:import type { ConnectionStatus, SupabaseRealtimeManager } from "../connection-manager";
./packages/shared/src/types/responses.types.ts:9:import type { TimeSlot } from "../schemas/appointment.schema";
./packages/shared/src/types/responses.types.ts:10:import type { AuthToken, AuthUser } from "../schemas/auth.schema";
./packages/shared/src/types/responses.types.ts:11:import type { ApiMeta, ApiResponse, PaginationMeta } from "./api.types";
./packages/shared/src/types/responses.types.ts:12:import type { Notification } from "./database.types";
./packages/shared/src/types/responses.types.ts:13:import type {
./packages/shared/src/types/entities.types.ts:9:import type {
./packages/shared/src/types/entities.types.ts:14:import type { MFAMethod, UserRole } from "../schemas/auth.schema";
./packages/shared/src/types/index.ts:10:import type { ApiResponse, PaginatedResponse, PaginationParams } from "./api.types";
./packages/shared/src/types/index.ts:11:import type { Notification } from "./database.types";
./packages/shared/src/types/realtime.types.ts:9:import type { RealtimeChannel, RealtimePostgresChangesPayload } from "@supabase/supabase-js";
./packages/shared/src/types/realtime.types.ts:10:import type { Database } from "./database.types";
./packages/shared/src/types/hono.types.ts:9:import type { Context } from "hono";
./packages/shared/src/types/hono.types.ts:10:import type { ApiResponse, RequestContext } from "./api.types";
./packages/shared/src/hooks/use-lgpd-realtime.ts:9:import type { RealtimePostgresChangesPayload, SupabaseClient } from "@supabase/supabase-js";
./packages/shared/src/hooks/use-lgpd-realtime.ts:10:import { useCallback, useEffect, useState } from "react";
./packages/shared/src/hooks/use-lgpd-realtime.ts:11:import {
./packages/shared/src/hooks/use-lgpd-realtime.ts:18:import type { LGPDRealtimeConfig } from "../compliance/lgpd-realtime";
./packages/shared/src/hooks/use-lgpd-realtime.ts:19:import { useRealtime } from "./use-realtime";
./packages/shared/src/hooks/use-lgpd-realtime.ts:20:import type { UseRealtimeConfig } from "./use-realtime";
./packages/shared/src/hooks/use-healthcare-realtime.ts:9:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/shared/src/hooks/use-healthcare-realtime.ts:10:import { useCallback } from "react";
./packages/shared/src/hooks/use-healthcare-realtime.ts:11:import type { UseRealtimeQueryConfig } from "../types/realtime.types";
./packages/shared/src/hooks/use-healthcare-realtime.ts:12:import { useRealtimeQuery } from "./use-realtime";
./packages/shared/src/hooks/use-realtime.ts:9:import type {
./packages/shared/src/hooks/use-realtime.ts:14:import { useQueryClient } from "@tanstack/react-query";
./packages/shared/src/hooks/use-realtime.ts:15:import { useCallback, useEffect, useRef, useState } from "react";
./packages/shared/src/hooks/use-realtime.ts:16:import type {
./packages/shared/src/templates/healthcare-api-template.ts:7:import type { Context, Next } from "hono";
./packages/shared/src/templates/healthcare-api-template.ts:8:import { Hono } from "hono";
./packages/shared/src/templates/healthcare-api-template.ts:9:import { HTTPException } from "hono/http-exception";
./packages/shared/src/templates/healthcare-api-template.ts:10:import { z } from "zod";
./packages/shared/src/templates/healthcare-api-template.ts:12:// import { Logger } from '@neonpro/utils';
./packages/shared/src/templates/healthcare-api-template.ts:13:import type { HealthcareContext, HealthcareFeatureTemplate } from "./healthcare-feature-template";
./packages/shared/src/templates/healthcare-api-template.ts:14:import { HealthcareFeatureConfig } from "./healthcare-feature-template";
./packages/shared/src/templates/healthcare-api-template.ts:16:// import { healthcareSecurityMiddleware, healthcareValidationMiddleware } from '@neonpro/api/middleware';
./packages/shared/src/templates/healthcare-feature-template.ts:11:import { z } from "zod";
./packages/shared/src/templates/healthcare-feature-template.ts:13:// import { Logger } from '@neonpro/utils';
./packages/shared/src/templates/healthcare-feature-template.ts:14:// import { HealthcareEncryption, EncryptionCategory } from '@neonpro/core-services';
./packages/shared/src/templates/healthcare-feature-template.ts:15:// import { AuditService } from '@neonpro/monitoring';
./packages/shared/src/templates/healthcare-feature-template.ts:16:// import { validateBrazilianCPF, validateCRMNumber } from '@neonpro/utils/compliance';
./packages/shared/src/templates/healthcare-component-template.tsx:9:import type { ReactNode } from "react";
./packages/shared/src/templates/healthcare-component-template.tsx:10:import React, { useCallback, useEffect, useMemo, useState } from "react";
./packages/shared/src/templates/healthcare-component-template.tsx:11:import type { z } from "zod";
./packages/shared/src/templates/healthcare-component-template.tsx:13:// import { Logger } from '@neonpro/utils';
./packages/shared/src/templates/healthcare-component-template.tsx:15:// import { useHealthcareAuth } from '../hooks/use-healthcare-auth';
./packages/shared/src/templates/healthcare-component-template.tsx:16:// import { useLGPDConsent } from '../hooks/use-lgpd-consent';
./packages/shared/src/templates/healthcare-component-template.tsx:17:// import { useHealthcareForm } from '../hooks/use-healthcare-form';
./packages/shared/src/templates/healthcare-component-template.tsx:19:// import { HealthcareErrorBoundary } from '../components/error-boundaries/healthcare-error-boundary';
./packages/shared/src/templates/healthcare-component-template.tsx:20:// import { LGPDConsentBanner } from '../components/compliance/lgpd-consent-banner';
./packages/shared/src/templates/healthcare-component-template.tsx:21:// import { AccessibilityWrapper } from '../components/accessibility/accessibility-wrapper';
./packages/shared/src/templates/healthcare-component-template.tsx:22:// import { LoadingSpinner } from '@neonpro/ui';
./packages/shared/src/templates/healthcare-component-template.tsx:23:// import { Alert, AlertDescription } from '@neonpro/ui';
./packages/shared/src/templates/index.ts:82:      import { HealthcareFeatureTemplate, HealthcareFeaturePresets } from '@neonpro/shared/templates';
./packages/shared/src/templates/index.ts:105:      import { createHealthcareApi } from '@neonpro/shared/templates';
./packages/shared/src/templates/index.ts:122:      import { createHealthcareComponentWithPreset } from '@neonpro/shared/templates';
./packages/shared/src/compliance/lgpd-realtime.ts:9:import type { RealtimePostgresChangesPayload } from "@supabase/supabase-js";
./packages/shared/src/compliance/lgpd-realtime.ts:10:import { z } from "zod";
./packages/shared/src/schemas/clinic.schema.ts:1:import { z } from "zod";
./packages/shared/src/schemas/service.schema.ts:1:import { z } from "zod";
./packages/shared/src/schemas/patient.schema.ts:1:import { z } from "zod";
./packages/shared/src/schemas/appointment.schema.ts:1:import { z } from "zod";
./packages/shared/src/schemas/compliance.schema.ts:1:import { z } from "zod";
./packages/shared/src/schemas/auth.schema.ts:1:import { z } from "zod";
./packages/shared/src/schemas/professional.schema.ts:1:import { z } from "zod";
./packages/shared/src/api-client.ts:9:import { hc } from "hono/client";
./packages/shared/src/api-client.ts:10:import type { z } from "zod";
./packages/shared/src/api-client.ts:12:// import type { AppType } from '../../apps/api/src/index';
./packages/shared/src/api-client.ts:14:import {
./packages/shared/src/api-client.ts:20:import type { AuditActionSchema, UserBaseSchema } from "./schemas";
./packages/shared/src/api-client.ts:21:import type { RpcClient } from "./types";
./packages/domain/src/hooks/legacy/use-subscription.tsx:3:import type { User } from "@supabase/supabase-js";
./packages/domain/src/hooks/legacy/use-subscription.tsx:4:import type React from "react";
./packages/domain/src/hooks/legacy/use-subscription.tsx:5:import { createContext, useContext, useEffect, useState } from "react";
./packages/domain/src/hooks/auth/use-permissions.ts:3:import { useCallback, useEffect, useState } from "react";
./packages/domain/src/hooks/auth/use-session.ts:6:import { useCallback, useEffect, useRef, useState } from "react";
./packages/domain/src/hooks/auth/use-sso.ts:4:import { useState } from "react";
./packages/domain/src/hooks/auth/use-rbac.ts:4:import { useState } from "react";
./packages/domain/src/hooks/auth/use-mfa.ts:1:import { useCallback, useEffect, useState } from "react";
./packages/domain/src/hooks/auth/use-mfa.ts:6:import {
./packages/domain/src/hooks/financial/use-financial-transactions.ts:3:import { useCallback, useEffect, useState } from "react";
./packages/domain/src/hooks/inventory/use-inventory.ts:9:import { useCallback, useEffect, useState } from "react";
./packages/domain/src/hooks/system/use-availability-manager.ts:3:import { useCallback, useEffect, useState } from "react";
./packages/domain/src/hooks/system/use-backup-system.ts:4:import { useState } from "react";
./packages/domain/src/hooks/system/use-communication-realtime.ts:4:import { useState } from "react";
./packages/domain/src/hooks/system/use-notifications.ts:3:import type { RealtimeChannel } from "@supabase/supabase-js";
./packages/domain/src/hooks/system/use-notifications.ts:4:import { createClient } from "@supabase/supabase-js";
./packages/domain/src/hooks/system/use-notifications.ts:5:import { useCallback, useEffect, useState } from "react";
./packages/domain/src/hooks/appointments/use-appointments-manager.ts:3:import { createClient } from "@supabase/supabase-js";
./packages/domain/src/hooks/appointments/use-appointments-manager.ts:4:import { endOfDay, endOfMonth, endOfWeek, startOfDay, startOfMonth, startOfWeek } from "date-fns";
./packages/domain/src/hooks/appointments/use-appointments-manager.ts:5:import { pt } from "date-fns/locale";
./packages/domain/src/hooks/appointments/use-appointments-manager.ts:6:import { useCallback, useEffect, useMemo, useState } from "react";
./packages/domain/src/hooks/appointments/use-recurring-appointments.ts:3:import { useCallback, useEffect, useState } from "react";
./packages/domain/src/hooks/appointments/use-realtime-availability.ts:3:import { useCallback, useEffect, useRef, useState } from "react";
./packages/domain/src/hooks/compliance/useLGPD.ts:3:import { createBrowserClient } from "@supabase/ssr";
./packages/domain/src/hooks/compliance/useLGPD.ts:4:import { useCallback, useEffect, useState } from "react";
./packages/domain/src/hooks/compliance/useLGPD.ts:5:import { toast } from "../placeholders/sonner";
./packages/domain/src/hooks/compliance/useLGPD.ts:6:import { useUser } from "../placeholders/supabase-auth-helpers-react";
./packages/domain/src/hooks/compliance/use-lgpd-consent.ts:3:import { useCallback, useEffect, useState } from "react";
./packages/domain/src/hooks/compliance/use-lgpd-consent.ts:4:import { toast } from "../placeholders/sonner";
./packages/domain/src/hooks/compliance/useLGPDCompliance.ts:4:import { useState } from "react";
./packages/domain/src/hooks/compliance/use-regulatory-categories.ts:4:import { useState } from "react";
./packages/domain/src/hooks/compliance/use-regulatory-documents.ts:4:import { useState } from "react";
./packages/domain/src/hooks/compliance-legacy/useLGPDDashboard.ts:3:import { useCallback, useEffect, useState } from "react";
./packages/domain/src/hooks/patient/use-patient-search.ts:24:import { useCallback, useEffect, useMemo, useRef, useState } from "react";
./packages/domain/src/hooks/billing/use-billing.ts:4:import { useState } from "react";
./packages/domain/src/utils/supabase-client.ts:1:import { createBrowserClient } from "@supabase/ssr";
./packages/domain/src/utils/supabase-client.ts:2:// import type { Database } // PLACEHOLDER: from '@/types/database'; // PLACEHOLDER - NEEDS FIXING
./packages/domain/src/placeholders/react-query.ts:2:import { useCallback, useState } from "react";
./packages/performance/tsup.config.ts:1:import { defineConfig } from "tsup";
./packages/performance/src/lazy-loading/healthcare-dynamic-loader.ts:7:import type { ComponentType, LazyExoticComponent } from 'react';
./packages/performance/src/lazy-loading/healthcare-dynamic-loader.ts:8:import React, { lazy } from 'react';
./packages/performance/src/lazy-loading/healthcare-dynamic-loader.ts:131:   * Preload PDF libraries - returns the actual import promise
./packages/performance/src/lazy-loading/healthcare-dynamic-loader.ts:141:   * Preload screenshot library - returns the actual import promise
./packages/performance/src/lazy-loading/healthcare-dynamic-loader.ts:148:   * Preload charts library - returns the actual import promise
./packages/performance/src/lazy-loading/healthcare-dynamic-loader.ts:155:   * Preload animation library - returns the actual import promise
./packages/performance/src/hooks/use-healthcare-preloader.ts:7:import { Router, useRouter } from "next/router";
./packages/performance/src/hooks/use-healthcare-preloader.ts:8:import { useCallback, useEffect, useRef } from "react";
./packages/performance/src/hooks/use-healthcare-preloader.ts:9:import {
./packages/compliance/vitest.config.ts:3:import { defineConfig } from "vitest/config";
./packages/compliance/tsup.config.ts:1:import { defineConfig } from "tsup";
./packages/compliance/scripts/compliance-validator.js:7:import fs from "node:fs";
./packages/compliance/scripts/compliance-validator.js:8:import path from "node:path";
./packages/compliance/src/types/index.ts:8:import { z } from "zod";
./packages/compliance/src/types/index.ts:9:import type { AuditEvent } from "../audit/types";
./packages/compliance/src/enterprise/management/multi-clinic-management.ts:7:import { z } from "zod";
./packages/compliance/src/enterprise/analytics/healthcare-intelligence.ts:7:import { z } from "zod";
./packages/compliance/src/enterprise/analytics/compliance-dashboard.js:6:import { z } from "zod";
./packages/compliance/src/enterprise/analytics/index.ts:8:import {
./packages/compliance/src/enterprise/analytics/index.ts:12:import type { ComplianceDashboardConfig } from "./compliance-dashboard";
./packages/compliance/src/enterprise/analytics/index.ts:13:import {
./packages/compliance/src/enterprise/analytics/index.ts:17:import type {
./packages/compliance/src/enterprise/analytics/index.ts:21:import {
./packages/compliance/src/enterprise/analytics/index.ts:25:import type {
./packages/compliance/src/enterprise/analytics/compliance-dashboard.d.ts:6:import { z } from "zod";
./packages/compliance/src/enterprise/analytics/compliance-dashboard.ts:7:import { z } from "zod";
./packages/compliance/src/enterprise/analytics/privacy-preserving-analytics.ts:7:import { z } from "zod";
./packages/compliance/src/enterprise/audit/compliance-scoring.ts:10:import type { Database } from "@neonpro/types";
./packages/compliance/src/enterprise/audit/compliance-scoring.ts:11:import type { createClient } from "@supabase/supabase-js";
./packages/compliance/src/enterprise/audit/real-time-monitor.ts:10:import type { Database } from "@neonpro/types";
./packages/compliance/src/enterprise/audit/real-time-monitor.ts:11:import type { createClient } from "@supabase/supabase-js";
./packages/compliance/src/enterprise/audit/audit-trail-generator.ts:10:import type { createClient } from "@supabase/supabase-js";
./packages/compliance/src/enterprise/audit/index.ts:8:import type { createClient } from "@supabase/supabase-js";
./packages/compliance/src/enterprise/audit/index.ts:9:import type { AuditTrailConfiguration } from "./audit-trail-generator";
./packages/compliance/src/enterprise/audit/index.ts:11:import { AuditTrailGeneratorService } from "./audit-trail-generator";
./packages/compliance/src/enterprise/audit/index.ts:12:import type { ScoringMethodologyConfig } from "./compliance-scoring";
./packages/compliance/src/enterprise/audit/index.ts:13:import { ComplianceScoringService } from "./compliance-scoring";
./packages/compliance/src/enterprise/audit/index.ts:14:import type { MonitoringConfiguration } from "./real-time-monitor";
./packages/compliance/src/enterprise/audit/index.ts:15:import { RealTimeComplianceMonitor } from "./real-time-monitor";
./packages/compliance/src/enterprise/index.ts:76:import type { createClient } from "@supabase/supabase-js";
./packages/compliance/src/enterprise/index.ts:77:import {
./packages/compliance/src/enterprise/index.ts:81:import type {
./packages/compliance/src/enterprise/index.ts:86:import { createEnterpriseAuditServices, validateEnterpriseAuditCompliance } from "./audit";
./packages/compliance/src/enterprise/index.ts:87:import {
./packages/compliance/src/enterprise/index.ts:91:import { createEnterpriseSecurityServices, validateEnterpriseSecurityCompliance } from "./security";
./packages/compliance/src/enterprise/index.ts:92:import type { createApiRateLimitingService, createHealthcareRbacService } from "./security";
./packages/compliance/src/enterprise/security/healthcare-rbac.ts:7:import { z } from "zod";
./packages/compliance/src/enterprise/security/index.ts:7:import type { RateLimitConfig } from "./api-rate-limiting";
./packages/compliance/src/enterprise/security/index.ts:8:import { createApiRateLimitingService, validateApiRateLimiting } from "./api-rate-limiting";
./packages/compliance/src/enterprise/security/index.ts:9:import type { RbacConfig } from "./healthcare-rbac";
./packages/compliance/src/enterprise/security/index.ts:10:import { createHealthcareRbacService, validateHealthcareRbac } from "./healthcare-rbac";
./packages/compliance/src/enterprise/security/api-rate-limiting.ts:7:import { z } from "zod";
./packages/compliance/src/advanced-compliance-integration.ts:7:import type { ChatMessage } from "@/types/chat";
./packages/compliance/src/advanced-compliance-integration.ts:8:import { ANVISAAdverseEventReporter } from "./anvisa/automated-adverse-event-reporting";
./packages/compliance/src/advanced-compliance-integration.ts:9:import type { AdverseEvent } from "./anvisa/automated-adverse-event-reporting";
./packages/compliance/src/advanced-compliance-integration.ts:10:import { CFMProfessionalValidator } from "./cfm/professional-validation";
./packages/compliance/src/advanced-compliance-integration.ts:11:import type { CFMProfessional } from "./cfm/professional-validation";
./packages/compliance/src/utils/compliance-helpers.ts:6:import { z } from "zod";
./packages/compliance/src/utils/validation-helpers.ts:6:import { z } from "zod";
./packages/compliance/src/utils/validation-helpers.ts:94:import type { HealthcareRole, HealthcareUser } from "../enterprise/security/healthcare-rbac";
./packages/compliance/src/utils/validation-helpers.ts:95:import { ComplianceError, HealthcareRegulation } from "../types";
./packages/compliance/src/utils/audit-utils.ts:6:import { z } from "zod";
./packages/compliance/src/lgpd/validator.ts:7:import type { Database } from "@neonpro/types";
./packages/compliance/src/lgpd/validator.ts:8:import { z } from "zod";
./packages/compliance/src/lgpd/report-generator.ts:7:import type { Database } from "@neonpro/types";
./packages/compliance/src/lgpd/report-generator.ts:8:import { z } from "zod";
./packages/compliance/src/lgpd/validator.d.ts:6:import type { Database } from "@neonpro/types";
./packages/compliance/src/lgpd/validator.d.ts:7:import { z } from "zod";
./packages/compliance/src/lgpd/validator.js:6:import { z } from "zod";
./packages/compliance/src/lgpd/report-generator.js:6:import { z } from "zod";
./packages/compliance/src/lgpd/audit-logger.ts:7:import type { Database } from "@neonpro/types";
./packages/compliance/src/lgpd/audit-logger.ts:8:import { z } from "zod";
./packages/compliance/src/lgpd/audit-logger.ts:9:import { HEALTHCARE_DATA_RETENTION_DAYS } from "@neonpro/types/constants/healthcare-constants";
./packages/compliance/src/lgpd/breach-notification-service.ts:15:import { z } from "zod";
./packages/compliance/src/lgpd/breach-notification-service.ts:16:import type { ComplianceScore, ConstitutionalResponse } from "../types";
./packages/compliance/src/lgpd/breach-notification-service.ts:17:import { PatientDataClassification } from "../types";
./packages/compliance/src/lgpd/data-portability-service.ts:14:import crypto from "node:crypto";
./packages/compliance/src/lgpd/data-portability-service.ts:15:import { z } from "zod";
./packages/compliance/src/lgpd/data-portability-service.ts:16:import type { ComplianceScore, ConstitutionalResponse } from "../types";
./packages/compliance/src/lgpd/data-portability-service.ts:17:import { PatientDataClassification } from "../types";
./packages/compliance/src/lgpd/consent-service.ts:9:import { z } from "zod";
./packages/compliance/src/lgpd/consent-service.ts:10:import type { ComplianceScore, Consent, ConstitutionalResponse } from "../types";
./packages/compliance/src/lgpd/consent-service.ts:11:import { LGPDLegalBasis, PatientDataClassification } from "../types";
./packages/compliance/src/lgpd/audit-logger.d.ts:6:import type { Database } from "@neonpro/types";
./packages/compliance/src/lgpd/audit-logger.d.ts:7:import { z } from "zod";
./packages/compliance/src/lgpd/data-erasure-service.ts:19:import { z } from "zod";
./packages/compliance/src/lgpd/data-erasure-service.ts:20:import type { ComplianceScore, ConstitutionalResponse } from "../types";
./packages/compliance/src/lgpd/data-erasure-service.ts:21:import { PatientDataClassification } from "../types";
./packages/compliance/src/lgpd/report-generator.d.ts:6:import type { Database } from "@neonpro/types";
./packages/compliance/src/lgpd/report-generator.d.ts:7:import { z } from "zod";
./packages/compliance/src/lgpd/dpia-service.ts:9:import { z } from "zod";
./packages/compliance/src/lgpd/dpia-service.ts:10:import type { ComplianceScore, ConstitutionalResponse, DPIAAssessment } from "../types";
./packages/compliance/src/lgpd/dpia-service.ts:11:import { LGPDLegalBasis, PatientDataClassification } from "../types";
./packages/compliance/src/lgpd/audit-logger.js:6:import { z } from "zod";
./packages/compliance/src/lgpd/audit-logger.js:54:import { HEALTHCARE_DATA_RETENTION_DAYS } from "@neonpro/types/constants/healthcare-constants";
./packages/compliance/src/services/compliance-automation-service.js:10:import { createAnvisaServices, validateAnvisaCompliance } from "../anvisa/index.js";
./packages/compliance/src/services/compliance-automation-service.js:11:import { createCfmServices, validateCfmCompliance, validateCfmResolutions } from "../cfm/index.js";
./packages/compliance/src/services/compliance-automation-service.js:12:import { RealTimeComplianceMonitor } from "../enterprise/audit/real-time-monitor.js";
./packages/compliance/src/services/compliance-automation-service.js:13:import { LGPDValidator } from "../lgpd/validator.js";
./packages/compliance/src/services/anvisa-service.ts:12:import { z } from "zod";
./packages/compliance/src/services/compliance-automation-service.ts:10:import type { Database } from "@neonpro/types";
./packages/compliance/src/services/compliance-automation-service.ts:11:import type { createClient } from "@supabase/supabase-js";
./packages/compliance/src/services/compliance-automation-service.ts:12:import { createAnvisaServices, validateAnvisaCompliance } from "../anvisa/index.js";
./packages/compliance/src/services/compliance-automation-service.ts:13:import { createCfmServices, validateCfmCompliance, validateCfmResolutions } from "../cfm/index.js";
./packages/compliance/src/services/compliance-automation-service.ts:14:import { RealTimeComplianceMonitor } from "../enterprise/audit/real-time-monitor.js";
./packages/compliance/src/services/compliance-automation-service.ts:15:import type { ComplianceMonitoringResponse } from "../enterprise/audit/real-time-monitor.js";
./packages/compliance/src/services/compliance-automation-service.ts:16:import { LGPDValidator } from "../lgpd/validator.js";
./packages/compliance/src/services/compliance-automation-service.ts:17:import type { LGPDValidationConfig, LGPDValidationResult } from "../lgpd/validator.js";
./packages/compliance/src/services/lgpd-service.ts:1:import { HEALTHCARE_DATA_RETENTION_DAYS } from "@neonpro/types/constants/healthcare-constants";
./packages/compliance/src/services/lgpd-service.ts:2:import { addDays } from "date-fns";
./packages/compliance/src/services/lgpd-service.ts:3:import { z } from "zod";
./packages/compliance/src/services/lgpd-service.js:1:import { HEALTHCARE_DATA_RETENTION_DAYS } from "@neonpro/types/constants/healthcare-constants";
./packages/compliance/src/services/lgpd-service.js:2:import { addDays } from "date-fns";
./packages/compliance/src/services/lgpd-service.js:3:import { z } from "zod";
./packages/compliance/src/services/compliance-automation-service.d.ts:9:import type { Database } from "@neonpro/types";
./packages/compliance/src/services/compliance-automation-service.d.ts:10:import type { createClient } from "@supabase/supabase-js";
./packages/compliance/src/services/compliance-automation-service.d.ts:11:import { type ComplianceMonitoringResponse } from "../enterprise/audit/real-time-monitor.js";
./packages/compliance/src/services/cfm-service.ts:12:import { z } from "zod";
./packages/utils/src/auth/index.js:14:const auth_1 = require("@neonpro/shared/auth");
./packages/utils/src/index.js:20:__exportStar(require("./analytics"), exports);
./packages/utils/src/index.js:21:__exportStar(require("./auth"), exports);
./packages/utils/src/index.js:22:__exportStar(require("./compliance"), exports);
./packages/utils/src/index.js:23:__exportStar(require("./components"), exports);
./packages/utils/src/index.js:24:__exportStar(require("./format"), exports);
./packages/utils/src/index.js:25:__exportStar(require("./performance"), exports);
./packages/utils/src/index.js:26:__exportStar(require("./validation"), exports);
./packages/utils/src/index.js:28:const performance_1 = require("./performance");
./packages/utils/src/components/index.js:19:__exportStar(require("./subscription"), exports);
./packages/utils/src/components/subscription.tsx:5:import type React from "react";
./packages/utils/src/components/subscription.d.ts:5:import type React from "react";
./packages/utils/src/analytics/index.js:23:__exportStar(require("./utils"), exports);
./packages/utils/src/analytics/utils.js:9:const calculations_1 = require("./calculations");
./packages/utils/src/analytics/utils.js:17:const formatting_1 = require("./formatting");
./packages/utils/src/analytics/utils.js:23:const aggregation_1 = require("./aggregation");
./packages/utils/src/performance/index.js:45:const brazilian_connectivity_optimizer_1 = require("./brazilian-connectivity-optimizer");
./packages/utils/src/performance/index.js:49:const bundle_analyzer_1 = require("./bundle-analyzer");
./packages/utils/src/performance/index.js:53:const infrastructure_monitoring_1 = require("./infrastructure-monitoring");
./packages/utils/src/performance/brazilian-connectivity-optimizer.js:334:                            Promise.resolve().then(function () { return require("../compliance/cfm"); }),
./packages/utils/src/performance/brazilian-connectivity-optimizer.js:335:                            Promise.resolve().then(function () { return require("../analytics/index"); }),
./packages/utils/src/performance/brazilian-connectivity-optimizer.js:352:                            Promise.resolve().then(function () { return require("../compliance/cfm"); }),
./packages/utils/src/performance/brazilian-connectivity-optimizer.js:353:                            Promise.resolve().then(function () { return require("../analytics/index"); }),
./packages/utils/src/performance/brazilian-connectivity-optimizer.js:370:                            Promise.resolve().then(function () { return require("../compliance/lgpd"); }),
./packages/utils/src/performance/brazilian-connectivity-optimizer.js:371:                            Promise.resolve().then(function () { return require("../analytics/calculations"); }),
./packages/utils/src/performance/brazilian-connectivity-optimizer.js:387:                    return [4 /*yield*/, Promise.resolve().then(function () { return require("../compliance/cfm"); })];
./packages/utils/src/compliance/anvisa-reporting.d.ts:4:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/utils/src/compliance/anvisa-reporting.d.ts:5:import type { ComplianceReport } from "./anvisa-types";
./packages/utils/src/compliance/integration.ts:8:import { HealthcareRBAC } from "../auth/rbac";
./packages/utils/src/compliance/integration.ts:9:import { LGPDConsentManager } from "./consent-manager";
./packages/utils/src/compliance/integration.ts:10:import { LGPDDataSubjectRights } from "./data-subject-rights";
./packages/utils/src/compliance/types.ts:8:import { z } from "zod";
./packages/utils/src/compliance/anvisa-products.ts:5:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/utils/src/compliance/anvisa-products.ts:6:import type { ANVISAProduct } from "./anvisa-types";
./packages/utils/src/compliance/index.js:23:__exportStar(require("./anvisa"), exports);
./packages/utils/src/compliance/index.js:24:__exportStar(require("./cfm"), exports);
./packages/utils/src/compliance/index.js:25:__exportStar(require("./consent-manager"), exports);
./packages/utils/src/compliance/index.js:26:__exportStar(require("./data-subject-rights"), exports);
./packages/utils/src/compliance/index.js:27:__exportStar(require("./integration"), exports);
./packages/utils/src/compliance/anvisa-procedures.d.ts:4:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/utils/src/compliance/anvisa-procedures.d.ts:5:import type { ANVISAProcedure } from "./anvisa-types";
./packages/utils/src/compliance/integration.js:57:const rbac_1 = require("../auth/rbac");
./packages/utils/src/compliance/integration.js:58:const consent_manager_1 = require("./consent-manager");
./packages/utils/src/compliance/integration.js:59:const data_subject_rights_1 = require("./data-subject-rights");
./packages/utils/src/compliance/cfm.js:56:const supabase_js_1 = require("@supabase/supabase-js");
./packages/utils/src/compliance/cfm.js:57:const node_crypto_1 = require("node:crypto");
./packages/utils/src/compliance/types.js:10:const zod_1 = require("zod");
./packages/utils/src/compliance/integration.d.ts:7:import { HealthcareRBAC } from "../auth/rbac";
./packages/utils/src/compliance/integration.d.ts:8:import { LGPDConsentManager } from "./consent-manager";
./packages/utils/src/compliance/integration.d.ts:9:import { LGPDDataSubjectRights } from "./data-subject-rights";
./packages/utils/src/compliance/anvisa-reporting.ts:5:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/utils/src/compliance/anvisa-reporting.ts:6:import type {
./packages/utils/src/compliance/anvisa.js:8:const supabase_js_1 = require("@supabase/supabase-js");
./packages/utils/src/compliance/anvisa.js:9:const anvisa_adverse_events_1 = require("./anvisa-adverse-events");
./packages/utils/src/compliance/anvisa.js:10:const anvisa_procedures_1 = require("./anvisa-procedures");
./packages/utils/src/compliance/anvisa.js:11:const anvisa_products_1 = require("./anvisa-products");
./packages/utils/src/compliance/anvisa.js:12:const anvisa_reporting_1 = require("./anvisa-reporting");
./packages/utils/src/compliance/lgpd.d.ts:7:import { z } from "zod";
./packages/utils/src/compliance/lgpd.d.ts:8:import type { ComplianceScore, ConsentRecord } from "./types";
./packages/utils/src/compliance/lgpd.d.ts:9:import { ComplianceStatus, HealthcareConsentType, LGPDDataSubjectRights, PatientDataClassification } from "./types";
./packages/utils/src/compliance/anvisa-procedures.ts:5:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/utils/src/compliance/anvisa-procedures.ts:6:import type { ANVISAProcedure } from "./anvisa-types";
./packages/utils/src/compliance/anvisa-adverse-events.ts:5:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/utils/src/compliance/anvisa-adverse-events.ts:6:import type { AdverseEvent, ComplianceTask } from "./anvisa-types";
./packages/utils/src/compliance/cfm.d.ts:6:import type { CFMComplianceReport, CFMDocumentType, CFMOperationResult, CFMValidationResult, ContinuingEducation, DigitalSignature, MedicalProfessional, TelemedicineSession } from "@neonpro/types";
./packages/utils/src/compliance/anvisa-products.d.ts:4:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/utils/src/compliance/anvisa-products.d.ts:5:import type { ANVISAProduct } from "./anvisa-types";
./packages/utils/src/compliance/anvisa.ts:6:import { createClient } from "@supabase/supabase-js";
./packages/utils/src/compliance/anvisa.ts:7:import { ANVISAAdverseEventManager } from "./anvisa-adverse-events";
./packages/utils/src/compliance/anvisa.ts:8:import { ANVISAProcedureManager } from "./anvisa-procedures";
./packages/utils/src/compliance/anvisa.ts:9:import { ANVISAProductManager } from "./anvisa-products";
./packages/utils/src/compliance/anvisa.ts:10:import { ANVISAComplianceReporter } from "./anvisa-reporting";
./packages/utils/src/compliance/lgpd.ts:8:import { z } from "zod";
./packages/utils/src/compliance/lgpd.ts:9:import type { ComplianceScore, ConsentRecord } from "./types";
./packages/utils/src/compliance/lgpd.ts:10:import {
./packages/utils/src/compliance/lgpd.js:57:const zod_1 = require("zod");
./packages/utils/src/compliance/lgpd.js:58:const types_1 = require("./types");
./packages/utils/src/compliance/anvisa-adverse-events.d.ts:4:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/utils/src/compliance/anvisa-adverse-events.d.ts:5:import type { AdverseEvent, ComplianceTask } from "./anvisa-types";
./packages/utils/src/compliance/cfm.ts:7:import type {
./packages/utils/src/compliance/cfm.ts:27:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/utils/src/compliance/cfm.ts:28:import { createClient } from "@supabase/supabase-js";
./packages/utils/src/compliance/cfm.ts:29:import { createHash } from "node:crypto";
./packages/utils/src/compliance/types.d.ts:7:import { z } from "zod";
./packages/security/tsup.config.ts:1:import { defineConfig } from "tsup";
./packages/security/scripts/security-scan-improved.js:6:const fs = require("node:fs");
./packages/security/scripts/security-scan-improved.js:7:const path = require("node:path");
./packages/security/src/encryption/healthcare-encryption.ts:12:import {
./packages/security/src/middleware/rate-limiting.ts:1:import type { NextRequest } from "next/server";
./packages/security/src/middleware/security-headers.ts:1:import type { NextRequest, NextResponse } from "next/server";
./packages/security/src/middleware/input-validation.ts:1:import { NextResponse } from "next/server";
./packages/security/src/middleware/input-validation.ts:2:import type { NextRequest } from "next/server";
./packages/security/src/middleware/input-validation.ts:3:import { z } from "zod";
./packages/security/src/auth/mfa-database-service.d.ts:1:import type { MfaMethod } from "./mfa-service";
./packages/security/src/auth/mfa-database-service.ts:1:import { createClient } from "@supabase/supabase-js";
./packages/security/src/auth/mfa-database-service.ts:2:import type { MfaMethod } from "./mfa-service";
./packages/security/src/auth/mfa-service.d.ts:1:import { z } from "zod";
./packages/security/src/auth/mfa-service.ts:1:import crypto from "node:crypto";
./packages/security/src/auth/mfa-service.ts:2:import { z } from "zod";
./packages/security/src/auth/mfa-service.ts:3:import { MfaDatabaseService } from "./mfa-database-service";
./packages/security/src/audit/unified-audit-service.ts:13:import { createClient } from "@supabase/supabase-js";
./packages/security/src/audit/unified-audit-service.ts:14:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/security/src/audit/unified-audit-service.ts:15:import { createHash, randomUUID } from "node:crypto";
./packages/security/src/audit/unified-audit-service.ts:16:import { z } from "zod";
./packages/security/src/index.test.ts:1:import { describe, expect, it } from "vitest";
./packages/docs/src/openapi/generator.ts:7:import { glob } from "glob";
./packages/docs/src/openapi/generator.ts:8:import { existsSync, readFileSync, writeFileSync } from "node:fs";
./packages/docs/src/openapi/generator.ts:9:import { dirname } from "node:path";
./packages/docs/src/openapi/generator.ts:10:import ora from "ora";
./packages/docs/src/openapi/generator.ts:11:import yaml from "yaml";
./packages/docs/src/generators/adr-generator.ts:6:import inquirer from "inquirer";
./packages/docs/src/generators/adr-generator.ts:7:import { existsSync, readdirSync, readFileSync, writeFileSync } from "node:fs";
./packages/docs/src/generators/adr-generator.ts:8:import { join } from "node:path";
./packages/docs/src/generators/adr-generator.ts:9:import ora from "ora";
./packages/integrations/vitest.config.ts:3:import { defineConfig } from "vitest/config";
./packages/ui/vitest.config.ts:1:import react from "@vitejs/plugin-react";
./packages/ui/vitest.config.ts:2:import path from "path";
./packages/ui/vitest.config.ts:3:import { defineConfig } from "vitest/config";
./packages/ui/tsup.config.ts:1:import { defineConfig } from "tsup";
./packages/ui/vitest.setup.ts:6:import "@testing-library/jest-dom/vitest";
./packages/ui/vitest.setup.ts:7:import { cleanup } from "@testing-library/react";
./packages/ui/vitest.setup.ts:8:import { afterEach, vi } from "vitest";
./packages/ui/src/components/ProgressiveEnhancement.tsx:1:import {
./packages/ui/src/components/ProgressiveEnhancement.tsx:13:import * as React from "react";
./packages/ui/src/components/ProgressiveEnhancement.tsx:14:import { cn } from "../utils/cn";
./packages/ui/src/components/ProgressiveEnhancement.tsx:15:import { Badge } from "./Badge";
./packages/ui/src/components/Label.tsx:3:import * as LabelPrimitive from "@radix-ui/react-label";
./packages/ui/src/components/Label.tsx:4:import { cva } from "class-variance-authority";
./packages/ui/src/components/Label.tsx:5:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/Label.tsx:6:import * as React from "react";
./packages/ui/src/components/Label.tsx:8:import { cn } from "../lib/utils";
./packages/ui/src/components/Popover.tsx:1:import * as PopoverPrimitive from "@radix-ui/react-popover";
./packages/ui/src/components/Popover.tsx:2:import * as React from "react";
./packages/ui/src/components/Popover.tsx:3:import { cn } from "../utils/cn";
./packages/ui/src/components/PatientCard.tsx:1:import { AlertCircle, Calendar, Eye, MapPin, Phone } from "lucide-react";
./packages/ui/src/components/PatientCard.tsx:2:import * as React from "react";
./packages/ui/src/components/PatientCard.tsx:3:import { cn } from "../utils/cn";
./packages/ui/src/components/PatientCard.tsx:4:import { formatDate, formatPhone } from "../utils/formatters";
./packages/ui/src/components/PatientCard.tsx:5:import { Avatar, AvatarFallback, AvatarImage } from "./Avatar";
./packages/ui/src/components/PatientCard.tsx:6:import { Badge } from "./Badge";
./packages/ui/src/components/PatientCard.tsx:7:import { Button } from "./Button";
./packages/ui/src/components/Toast.tsx:1:import React from "react";
./packages/ui/src/components/Toast.tsx:3:// Placeholder import for @neonpro/utils
./packages/ui/src/components/prediction/PredictionDisplay.complex.tsx:9:import {
./packages/ui/src/components/prediction/PredictionDisplay.complex.tsx:19:import { useEffect, useId, useState } from "react";
./packages/ui/src/components/prediction/PredictionDisplay.complex.tsx:20:import { Badge } from "../Badge";
./packages/ui/src/components/prediction/PredictionDisplay.complex.tsx:21:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../Card";
./packages/ui/src/components/prediction/PredictionDisplay.complex.tsx:22:import { Progress } from "../Progress";
./packages/ui/src/components/Breadcrumb.tsx:1:import { ChevronRight, MoreHorizontal } from "lucide-react";
./packages/ui/src/components/Breadcrumb.tsx:2:import * as React from "react";
./packages/ui/src/components/Breadcrumb.tsx:3:import { cn } from "../utils/cn";
./packages/ui/src/components/Badge.tsx:1:import { cva } from "class-variance-authority";
./packages/ui/src/components/Badge.tsx:2:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/Badge.tsx:3:import type * as React from "react";
./packages/ui/src/components/Badge.tsx:4:import { cn } from "../utils/cn";
./packages/ui/src/components/Card.tsx:1:import type React from "react";
./packages/ui/src/components/Card.tsx:3:// Placeholder import for @neonpro/utils
./packages/ui/src/components/Checkbox.tsx:1:import * as CheckboxPrimitive from "@radix-ui/react-checkbox";
./packages/ui/src/components/Checkbox.tsx:2:import { Check } from "lucide-react";
./packages/ui/src/components/Checkbox.tsx:3:import * as React from "react";
./packages/ui/src/components/Checkbox.tsx:4:import { cn } from "../utils/cn";
./packages/ui/src/components/Progress.tsx:1:// Placeholder import for @neonpro/utils
./packages/ui/src/components/Button.tsx:1:import { Slot } from "@radix-ui/react-slot";
./packages/ui/src/components/Button.tsx:2:import { cva } from "class-variance-authority";
./packages/ui/src/components/Button.tsx:3:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/Button.tsx:4:import * as React from "react";
./packages/ui/src/components/Button.tsx:5:import { cn } from "../utils/cn";
./packages/ui/src/components/AuditTrailViewer.tsx:1:import {
./packages/ui/src/components/AuditTrailViewer.tsx:12:import * as React from "react";
./packages/ui/src/components/AuditTrailViewer.tsx:13:import { cn } from "../utils/cn";
./packages/ui/src/components/AuditTrailViewer.tsx:14:import { formatDate } from "../utils/formatters";
./packages/ui/src/components/AuditTrailViewer.tsx:15:import { Avatar, AvatarFallback, AvatarImage } from "./Avatar";
./packages/ui/src/components/AuditTrailViewer.tsx:16:import { Badge } from "./Badge";
./packages/ui/src/components/AuditTrailViewer.tsx:17:import { Button } from "./Button";
./packages/ui/src/components/AuditTrailViewer.tsx:18:import { Input } from "./Input";
./packages/ui/src/components/AuditTrailViewer.tsx:19:import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "./Select";
./packages/ui/src/components/PatientTable.tsx:1:import {
./packages/ui/src/components/PatientTable.tsx:12:import * as React from "react";
./packages/ui/src/components/PatientTable.tsx:13:import { cn } from "../utils/cn";
./packages/ui/src/components/PatientTable.tsx:14:import { formatDate, formatPhone } from "../utils/formatters";
./packages/ui/src/components/PatientTable.tsx:15:import { Avatar, AvatarFallback, AvatarImage } from "./Avatar";
./packages/ui/src/components/PatientTable.tsx:16:import { Badge } from "./Badge";
./packages/ui/src/components/PatientTable.tsx:17:import { Button } from "./Button";
./packages/ui/src/components/PatientTable.tsx:18:import { Checkbox } from "./Checkbox";
./packages/ui/src/components/PatientTable.tsx:19:import { PatientCard } from "./PatientCard";
./packages/ui/src/components/PatientTable.tsx:20:import type { PatientData } from "./PatientCard";
./packages/ui/src/components/PatientTable.tsx:21:import type { FilterOption } from "./SearchBox";
./packages/ui/src/components/Sonner.tsx:3:import { Toaster as SonnerToaster } from "sonner";
./packages/ui/src/components/RealTimeNotifications.tsx:1:import {
./packages/ui/src/components/RealTimeNotifications.tsx:19:import * as React from "react";
./packages/ui/src/components/RealTimeNotifications.tsx:20:import { cn } from "../utils/cn";
./packages/ui/src/components/RealTimeNotifications.tsx:21:import { formatDate } from "../utils/formatters";
./packages/ui/src/components/RealTimeNotifications.tsx:22:import { Avatar, AvatarFallback, AvatarImage } from "./Avatar";
./packages/ui/src/components/RealTimeNotifications.tsx:23:import { Badge } from "./Badge";
./packages/ui/src/components/RealTimeNotifications.tsx:24:import { Button } from "./Button";
./packages/ui/src/components/DashboardLayout.tsx:1:import * as React from "react";
./packages/ui/src/components/DashboardLayout.tsx:2:import { cn } from "../utils/cn";
./packages/ui/src/components/DashboardLayout.tsx:3:import {
./packages/ui/src/components/DashboardLayout.tsx:11:import type { SidebarItem, UserProfile } from "./DashboardSidebar";
./packages/ui/src/components/DashboardLayout.tsx:12:import { DashboardSidebar } from "./DashboardSidebar";
./packages/ui/src/components/Switch.tsx:3:import * as SwitchPrimitives from "@radix-ui/react-switch";
./packages/ui/src/components/Switch.tsx:4:import * as React from "react";
./packages/ui/src/components/Switch.tsx:6:import { cn } from "../lib/utils";
./packages/ui/src/components/Input.tsx:1:import { cva } from "class-variance-authority";
./packages/ui/src/components/Input.tsx:2:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/Input.tsx:3:import * as React from "react";
./packages/ui/src/components/Input.tsx:4:import { cn } from "../utils/cn";
./packages/ui/src/components/Select.tsx:1:import * as SelectPrimitive from "@radix-ui/react-select";
./packages/ui/src/components/Select.tsx:2:import { Check, ChevronDown, ChevronUp } from "lucide-react";
./packages/ui/src/components/Select.tsx:3:import * as React from "react";
./packages/ui/src/components/Select.tsx:4:import { cn } from "../utils/cn";
./packages/ui/src/components/Tabs.tsx:1:import * as TabsPrimitive from "@radix-ui/react-tabs";
./packages/ui/src/components/Tabs.tsx:2:import * as React from "react";
./packages/ui/src/components/Tabs.tsx:3:import { cn } from "../utils/cn";
./packages/ui/src/components/design-system/HealthcareDesignSystem.complex.tsx:10:import {
./packages/ui/src/components/design-system/HealthcareDesignSystem.complex.tsx:28:import { useEffect, useId, useState } from "react";
./packages/ui/src/components/design-system/HealthcareDesignSystem.complex.tsx:29:import { Badge } from "../Badge";
./packages/ui/src/components/design-system/HealthcareDesignSystem.complex.tsx:30:import { Button } from "../Button";
./packages/ui/src/components/design-system/HealthcareDesignSystem.complex.tsx:31:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../Card";
./packages/ui/src/components/Textarea.tsx:1:import * as React from "react";
./packages/ui/src/components/Textarea.tsx:2:import { cn } from "../utils/cn";
./packages/ui/src/components/Alert.tsx:1:import type React from "react";
./packages/ui/src/components/Alert.tsx:3:// Placeholder import for @neonpro/utils
./packages/ui/src/components/anvisa/product-registration.tsx:8:import {
./packages/ui/src/components/anvisa/product-registration.tsx:19:import { useEffect, useState } from "react";
./packages/ui/src/components/anvisa/product-registration.tsx:20:import { cn } from "../../lib/utils";
./packages/ui/src/components/anvisa/product-registration.tsx:21:import { Alert, AlertDescription } from "../Alert";
./packages/ui/src/components/anvisa/product-registration.tsx:22:import { Badge } from "../Badge";
./packages/ui/src/components/anvisa/product-registration.tsx:23:import { Button } from "../Button";
./packages/ui/src/components/anvisa/product-registration.tsx:24:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../Card";
./packages/ui/src/components/anvisa/product-registration.tsx:25:import { Input } from "../Input";
./packages/ui/src/components/anvisa/product-registration.tsx:26:import { Label } from "../Label";
./packages/ui/src/components/anvisa/product-registration.tsx:27:import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "../Select";
./packages/ui/src/components/anvisa/product-registration.tsx:28:import { Textarea } from "../Textarea";
./packages/ui/src/components/anvisa/anvisa-dashboard.tsx:1:import {
./packages/ui/src/components/anvisa/anvisa-dashboard.tsx:9:import { cn } from "../../lib/utils";
./packages/ui/src/components/anvisa/anvisa-dashboard.tsx:10:import { Alert, AlertDescription } from "../Alert";
./packages/ui/src/components/anvisa/anvisa-dashboard.tsx:11:import { Badge } from "../Badge";
./packages/ui/src/components/anvisa/anvisa-dashboard.tsx:12:import { Button } from "../Button";
./packages/ui/src/components/anvisa/anvisa-dashboard.tsx:13:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../Card";
./packages/ui/src/components/anvisa/anvisa-dashboard.tsx:14:import { Progress } from "../Progress";
./packages/ui/src/components/anvisa/professional-management.tsx:8:import {
./packages/ui/src/components/anvisa/professional-management.tsx:19:import { useEffect, useState } from "react";
./packages/ui/src/components/anvisa/professional-management.tsx:20:import { cn } from "../../lib/utils";
./packages/ui/src/components/anvisa/professional-management.tsx:21:import { Alert, AlertDescription } from "../Alert";
./packages/ui/src/components/anvisa/professional-management.tsx:22:import { Badge } from "../Badge";
./packages/ui/src/components/anvisa/professional-management.tsx:23:import { Button } from "../Button";
./packages/ui/src/components/anvisa/professional-management.tsx:24:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../Card";
./packages/ui/src/components/ComplianceStatusWidget.tsx:1:import { AlertCircle, AlertTriangle, CheckCircle, Clock, Shield } from "lucide-react";
./packages/ui/src/components/ComplianceStatusWidget.tsx:2:import * as React from "react";
./packages/ui/src/components/ComplianceStatusWidget.tsx:3:import { cn } from "../utils/cn";
./packages/ui/src/components/ComplianceStatusWidget.tsx:4:import { Badge } from "./Badge";
./packages/ui/src/components/ComplianceStatusWidget.tsx:5:import { Button } from "./Button";
./packages/ui/src/components/FormField.tsx:1:import * as React from "react";
./packages/ui/src/components/FormField.tsx:2:import { cn } from "../utils/cn";
./packages/ui/src/components/AuthLayout.tsx:1:import { Heart } from "lucide-react";
./packages/ui/src/components/AuthLayout.tsx:2:import Image from "next/image";
./packages/ui/src/components/AuthLayout.tsx:3:import Link from "next/link";
./packages/ui/src/components/AuthLayout.tsx:4:import * as React from "react";
./packages/ui/src/components/AuthLayout.tsx:5:import { cn } from "../utils/cn";
./packages/ui/src/components/compliance/ComplianceAutomationDashboard.tsx:8:import {
./packages/ui/src/components/compliance/ComplianceAutomationDashboard.tsx:18:import type React from "react";
./packages/ui/src/components/compliance/ComplianceAutomationDashboard.tsx:19:import { useComplianceAlerts, useComplianceScore } from "../../lib/utils";
./packages/ui/src/components/compliance/ComplianceAutomationDashboard.tsx:20:import { Alert, AlertDescription, AlertTitle } from "../ui/alert";
./packages/ui/src/components/compliance/ComplianceAutomationDashboard.tsx:21:import { Badge } from "../ui/badge";
./packages/ui/src/components/compliance/ComplianceAutomationDashboard.tsx:22:import { Button } from "../ui/button";
./packages/ui/src/components/compliance/ComplianceAutomationDashboard.tsx:23:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../ui/card";
./packages/ui/src/components/compliance/ComplianceAutomationDashboard.tsx:24:import { Progress } from "../ui/progress";
./packages/ui/src/components/compliance/ComplianceAutomationDashboard.tsx:25:import { Tabs, TabsContent, TabsList, TabsTrigger } from "../ui/tabs";
./packages/ui/src/components/ProcedureForm.tsx:1:import { AlertTriangle, Clock, FileText, Plus, User, X } from "lucide-react";
./packages/ui/src/components/ProcedureForm.tsx:2:import * as React from "react";
./packages/ui/src/components/ProcedureForm.tsx:3:import type { PractitionerData, ProcedureData, TreatmentData } from "../types";
./packages/ui/src/components/ProcedureForm.tsx:4:import { cn } from "../utils/cn";
./packages/ui/src/components/ProcedureForm.tsx:5:import { Button } from "./Button";
./packages/ui/src/components/ProcedureForm.tsx:6:import { Checkbox } from "./Checkbox";
./packages/ui/src/components/ProcedureForm.tsx:7:import { DatePicker } from "./DatePicker";
./packages/ui/src/components/ProcedureForm.tsx:8:import { FormField } from "./FormField";
./packages/ui/src/components/ProcedureForm.tsx:9:import { Input } from "./Input";
./packages/ui/src/components/ProcedureForm.tsx:10:import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "./Select";
./packages/ui/src/components/ProcedureForm.tsx:11:import { Textarea } from "./Textarea";
./packages/ui/src/components/ProcedureForm.tsx:12:import { TimePicker } from "./TimePicker";
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:3:import { format } from "date-fns";
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:4:import { ptBR } from "date-fns/locale";
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:5:import {
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:17:import { useEffect, useState } from "react";
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:18:import { toast } from "sonner";
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:19:import { Badge } from "../../ui/badge";
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:20:import { Button } from "../../ui/button";
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:21:import {
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:29:import { Input } from "../../ui/input";
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:30:import { Label } from "../../ui/label";
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:31:import { Progress } from "../../ui/progress";
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:32:import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "../../ui/select";
./packages/ui/src/components/dashboard/security/ComplianceAuditsTable.tsx:33:import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "../../ui/table";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:9:import {
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:20:import { useEffect, useState } from "react";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:21:import type { SecurityMetrics } from "../../../lib/utils";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:22:import { Alert, AlertDescription } from "../../ui/alert";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:23:import { Badge } from "../../ui/badge";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:24:import { Button } from "../../ui/button";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:25:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../../ui/card";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:26:import { Tabs, TabsContent, TabsList, TabsTrigger } from "../../ui/tabs";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:27:import { ActiveSessionsTable } from "./ActiveSessionsTable";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:28:import { AuditLogsTable } from "./AuditLogsTable";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:29:import { ComplianceAuditsTable } from "./ComplianceAuditsTable";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:30:import { SecurityAlertsTable } from "./SecurityAlertsTable";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:31:import { SecurityEventsTable } from "./SecurityEventsTable";
./packages/ui/src/components/dashboard/security/SecurityDashboard.tsx:32:import { SecurityMetricsOverview } from "./SecurityMetricsOverview";
./packages/ui/src/components/dashboard/security/SecurityMetricsOverview.tsx:9:import { Activity, CheckCircle2, Clock, Shield, TrendingUp, Users, XCircle } from "lucide-react";
./packages/ui/src/components/dashboard/security/SecurityMetricsOverview.tsx:10:import type { SecurityMetrics } from "../../../lib/utils";
./packages/ui/src/components/dashboard/security/SecurityMetricsOverview.tsx:11:import { Badge } from "../../ui/badge";
./packages/ui/src/components/dashboard/security/SecurityMetricsOverview.tsx:12:import { Card, CardContent, CardHeader, CardTitle } from "../../ui/card";
./packages/ui/src/components/dashboard/security/SecurityMetricsOverview.tsx:13:import { Progress } from "../../ui/progress";
./packages/ui/src/components/dashboard/security/AuditLogsTable.tsx:3:import { format } from "date-fns";
./packages/ui/src/components/dashboard/security/AuditLogsTable.tsx:4:import { ptBR } from "date-fns/locale";
./packages/ui/src/components/dashboard/security/AuditLogsTable.tsx:5:import { Database, Download, Eye, RefreshCw, Search, Shield, User } from "lucide-react";
./packages/ui/src/components/dashboard/security/AuditLogsTable.tsx:6:import { useEffect, useState } from "react";
./packages/ui/src/components/dashboard/security/AuditLogsTable.tsx:7:import { toast } from "sonner";
./packages/ui/src/components/dashboard/security/AuditLogsTable.tsx:8:import { Badge } from "../../ui/badge";
./packages/ui/src/components/dashboard/security/AuditLogsTable.tsx:9:import { Button } from "../../ui/button";
./packages/ui/src/components/dashboard/security/AuditLogsTable.tsx:10:import {
./packages/ui/src/components/dashboard/security/AuditLogsTable.tsx:18:import { Input } from "../../ui/input";
./packages/ui/src/components/dashboard/security/AuditLogsTable.tsx:19:import { Label } from "../../ui/label";
./packages/ui/src/components/dashboard/security/AuditLogsTable.tsx:20:import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "../../ui/select";
./packages/ui/src/components/dashboard/security/AuditLogsTable.tsx:21:import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "../../ui/table";
./packages/ui/src/components/dashboard/security/SecurityEventsTable.tsx:3:import { format } from "date-fns";
./packages/ui/src/components/dashboard/security/SecurityEventsTable.tsx:4:import { ptBR } from "date-fns/locale";
./packages/ui/src/components/dashboard/security/SecurityEventsTable.tsx:5:import { AlertTriangle, Eye, RefreshCw, Search } from "lucide-react";
./packages/ui/src/components/dashboard/security/SecurityEventsTable.tsx:6:import { useEffect, useState } from "react";
./packages/ui/src/components/dashboard/security/SecurityEventsTable.tsx:7:import { toast } from "sonner";
./packages/ui/src/components/dashboard/security/SecurityEventsTable.tsx:8:import { Badge } from "../../ui/badge";
./packages/ui/src/components/dashboard/security/SecurityEventsTable.tsx:9:import { Button } from "../../ui/button";
./packages/ui/src/components/dashboard/security/SecurityEventsTable.tsx:10:import {
./packages/ui/src/components/dashboard/security/SecurityEventsTable.tsx:18:import { Input } from "../../ui/input";
./packages/ui/src/components/dashboard/security/SecurityEventsTable.tsx:19:import { Label } from "../../ui/label";
./packages/ui/src/components/dashboard/security/SecurityEventsTable.tsx:20:import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "../../ui/select";
./packages/ui/src/components/dashboard/security/SecurityEventsTable.tsx:21:import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "../../ui/table";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.test.tsx:7:import { fireEvent, render, screen, waitFor } from "@testing-library/react";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.test.tsx:8:import { beforeEach, describe, expect, it, vi } from "vitest";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.test.tsx:9:import { ActiveSessionsTable } from "./ActiveSessionsTable";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:3:import { format } from "date-fns";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:4:import { ptBR } from "date-fns/locale";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:5:import {
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:16:import { useEffect, useState } from "react";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:17:import { toast } from "sonner";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:18:import { Alert, AlertDescription } from "../../ui/alert";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:19:import { Badge } from "../../ui/badge";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:20:import { Button } from "../../ui/button";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:21:import {
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:30:import { Input } from "../../ui/input";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:31:import { Label } from "../../ui/label";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:32:import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "../../ui/select";
./packages/ui/src/components/dashboard/security/ActiveSessionsTable.tsx:33:import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "../../ui/table";
./packages/ui/src/components/dashboard/security/SecurityAlertsTable.tsx:3:import { format } from "date-fns";
./packages/ui/src/components/dashboard/security/SecurityAlertsTable.tsx:4:import { ptBR } from "date-fns/locale";
./packages/ui/src/components/dashboard/security/SecurityAlertsTable.tsx:5:import { AlertTriangle, CheckCircle2, Clock, Eye, RefreshCw, Search, XCircle } from "lucide-react";
./packages/ui/src/components/dashboard/security/SecurityAlertsTable.tsx:6:import { useEffect, useState } from "react";
./packages/ui/src/components/dashboard/security/SecurityAlertsTable.tsx:7:import { toast } from "sonner";
./packages/ui/src/components/dashboard/security/SecurityAlertsTable.tsx:8:import { Badge } from "../../ui/badge";
./packages/ui/src/components/dashboard/security/SecurityAlertsTable.tsx:9:import { Button } from "../../ui/button";
./packages/ui/src/components/dashboard/security/SecurityAlertsTable.tsx:10:import {
./packages/ui/src/components/dashboard/security/SecurityAlertsTable.tsx:18:import { Input } from "../../ui/input";
./packages/ui/src/components/dashboard/security/SecurityAlertsTable.tsx:19:import { Label } from "../../ui/label";
./packages/ui/src/components/dashboard/security/SecurityAlertsTable.tsx:20:import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "../../ui/select";
./packages/ui/src/components/dashboard/security/SecurityAlertsTable.tsx:21:import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "../../ui/table";
./packages/ui/src/components/EmergencyAccessPanel.tsx:1:import {
./packages/ui/src/components/EmergencyAccessPanel.tsx:12:import * as React from "react";
./packages/ui/src/components/EmergencyAccessPanel.tsx:13:import { cn } from "../utils/cn";
./packages/ui/src/components/EmergencyAccessPanel.tsx:14:import { Badge } from "./Badge";
./packages/ui/src/components/EmergencyAccessPanel.tsx:15:import { Button } from "./Button";
./packages/ui/src/components/EmergencyAccessPanel.tsx:16:import { Input } from "./Input";
./packages/ui/src/components/EmergencyAccessPanel.tsx:17:import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "./Select";
./packages/ui/src/components/EmergencyAccessPanel.tsx:18:import { Textarea } from "./Textarea";
./packages/ui/src/components/chat/ChatInterface.complex.tsx:10:import { cn } from "../../lib/utils";
./packages/ui/src/components/chat/ChatInterface.complex.tsx:11:import { Badge } from "../ui/badge";
./packages/ui/src/components/chat/ChatInterface.complex.tsx:12:import { Button } from "../ui/button";
./packages/ui/src/components/chat/ChatInterface.complex.tsx:13:import { Card } from "../ui/card";
./packages/ui/src/components/chat/ChatInterface.complex.tsx:14:import { Input } from "../ui/input";
./packages/ui/src/components/chat/ChatInterface.complex.tsx:29:import {
./packages/ui/src/components/chat/ChatInterface.complex.tsx:46:import type React from "react";
./packages/ui/src/components/chat/ChatInterface.complex.tsx:47:import { useCallback, useEffect, useMemo, useRef, useState } from "react";
./packages/ui/src/components/TreatmentCard.tsx:1:import { AlertCircle, Calendar, CheckCircle, Clock, FileText, MapPin, XCircle } from "lucide-react";
./packages/ui/src/components/TreatmentCard.tsx:2:import * as React from "react";
./packages/ui/src/components/TreatmentCard.tsx:3:import type { PractitionerData, TreatmentData } from "../types";
./packages/ui/src/components/TreatmentCard.tsx:4:import { cn } from "../utils/cn";
./packages/ui/src/components/TreatmentCard.tsx:5:import { formatters } from "../utils/formatters";
./packages/ui/src/components/TreatmentCard.tsx:6:import { Avatar, AvatarFallback, AvatarImage } from "./Avatar";
./packages/ui/src/components/TreatmentCard.tsx:7:import { Badge } from "./Badge";
./packages/ui/src/components/TreatmentCard.tsx:8:import { Button } from "./Button";
./packages/ui/src/components/TreatmentCard.tsx:9:import { ProgressBar } from "./ProgressBar";
./packages/ui/src/components/lgpd/consent-manager.tsx:3:import { AlertTriangle, Check, Clock, Shield, X } from "lucide-react";
./packages/ui/src/components/lgpd/consent-manager.tsx:4:import { useEffect, useState } from "react";
./packages/ui/src/components/lgpd/consent-manager.tsx:5:import { toast } from "sonner";
./packages/ui/src/components/lgpd/consent-manager.tsx:6:import { Alert, AlertDescription } from "../Alert";
./packages/ui/src/components/lgpd/consent-manager.tsx:7:import { Badge } from "../Badge";
./packages/ui/src/components/lgpd/consent-manager.tsx:8:import { Button } from "../Button";
./packages/ui/src/components/lgpd/consent-manager.tsx:9:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../Card";
./packages/ui/src/components/lgpd/consent-manager.tsx:10:import { Switch } from "../Switch";
./packages/ui/src/components/lgpd/compliance-dashboard.tsx:3:import { AlertTriangle, CheckCircle, Clock, FileText, Lock, Shield, Users } from "lucide-react";
./packages/ui/src/components/lgpd/compliance-dashboard.tsx:4:import { useEffect, useState } from "react";
./packages/ui/src/components/lgpd/compliance-dashboard.tsx:5:import { Alert, AlertDescription } from "../ui/alert";
./packages/ui/src/components/lgpd/compliance-dashboard.tsx:6:import { Badge } from "../ui/badge";
./packages/ui/src/components/lgpd/compliance-dashboard.tsx:7:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../ui/card";
./packages/ui/src/components/lgpd/compliance-dashboard.tsx:8:import { Progress } from "../ui/progress";
./packages/ui/src/components/lgpd/data-subject-rights.tsx:3:import { AlertCircle, Download, Edit, FileText, Settings, Trash2 } from "lucide-react";
./packages/ui/src/components/lgpd/data-subject-rights.tsx:4:import type React from "react";
./packages/ui/src/components/lgpd/data-subject-rights.tsx:5:import { useState } from "react";
./packages/ui/src/components/lgpd/data-subject-rights.tsx:6:import { toast } from "sonner";
./packages/ui/src/components/lgpd/data-subject-rights.tsx:7:import { Alert, AlertDescription } from "../Alert";
./packages/ui/src/components/lgpd/data-subject-rights.tsx:8:import { Button } from "../Button";
./packages/ui/src/components/lgpd/data-subject-rights.tsx:9:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../Card";
./packages/ui/src/components/lgpd/data-subject-rights.tsx:10:import { Input } from "../Input";
./packages/ui/src/components/lgpd/data-subject-rights.tsx:11:import { Label } from "../Label";
./packages/ui/src/components/lgpd/data-subject-rights.tsx:12:import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "../Select";
./packages/ui/src/components/lgpd/data-subject-rights.tsx:13:import { Textarea } from "../Textarea";
./packages/ui/src/components/OfflineIndicator.tsx:1:import {
./packages/ui/src/components/OfflineIndicator.tsx:13:import * as React from "react";
./packages/ui/src/components/OfflineIndicator.tsx:14:import { cn } from "../utils/cn";
./packages/ui/src/components/OfflineIndicator.tsx:15:import { Badge } from "./Badge";
./packages/ui/src/components/OfflineIndicator.tsx:16:import { Button } from "./Button";
./packages/ui/src/components/TimePicker.tsx:1:import { Clock } from "lucide-react";
./packages/ui/src/components/TimePicker.tsx:2:import * as React from "react";
./packages/ui/src/components/TimePicker.tsx:3:import { cn } from "../utils/cn";
./packages/ui/src/components/TimePicker.tsx:4:import { Button } from "./Button";
./packages/ui/src/components/TimePicker.tsx:5:import { Popover, PopoverContent, PopoverTrigger } from "./Popover";
./packages/ui/src/components/ui/progress.tsx:1:import * as ProgressPrimitive from "@radix-ui/react-progress";
./packages/ui/src/components/ui/progress.tsx:2:import { cva } from "class-variance-authority";
./packages/ui/src/components/ui/progress.tsx:3:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/ui/progress.tsx:4:import { Activity, AlertCircle, CheckCircle, Clock, Heart } from "lucide-react";
./packages/ui/src/components/ui/progress.tsx:5:import * as React from "react";
./packages/ui/src/components/ui/progress.tsx:7:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/button.tsx:1:import { Slot } from "@radix-ui/react-slot";
./packages/ui/src/components/ui/button.tsx:2:import { cva } from "class-variance-authority";
./packages/ui/src/components/ui/button.tsx:3:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/ui/button.tsx:4:import type * as React from "react";
./packages/ui/src/components/ui/button.tsx:5:import { forwardRef } from "react";
./packages/ui/src/components/ui/button.tsx:7:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/badge.tsx:1:import { cva } from "class-variance-authority";
./packages/ui/src/components/ui/badge.tsx:2:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/ui/badge.tsx:3:import {
./packages/ui/src/components/ui/badge.tsx:14:import type * as React from "react";
./packages/ui/src/components/ui/badge.tsx:15:import { forwardRef } from "react";
./packages/ui/src/components/ui/badge.tsx:16:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/table.tsx:1:import { cva } from "class-variance-authority";
./packages/ui/src/components/ui/table.tsx:2:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/ui/table.tsx:3:import { ChevronDown, ChevronUp, Edit, Eye } from "lucide-react";
./packages/ui/src/components/ui/table.tsx:4:import * as React from "react";
./packages/ui/src/components/ui/table.tsx:5:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/card.tsx:1:import { cva } from "class-variance-authority";
./packages/ui/src/components/ui/card.tsx:2:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/ui/card.tsx:3:import type * as React from "react";
./packages/ui/src/components/ui/card.tsx:4:import { forwardRef } from "react";
./packages/ui/src/components/ui/card.tsx:6:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/contrast-validator.tsx:1:import * as React from "react";
./packages/ui/src/components/ui/contrast-validator.tsx:2:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/separator.tsx:3:import * as SeparatorPrimitive from "@radix-ui/react-separator";
./packages/ui/src/components/ui/separator.tsx:4:import * as React from "react";
./packages/ui/src/components/ui/separator.tsx:6:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/label.tsx:3:import * as LabelPrimitive from "@radix-ui/react-label";
./packages/ui/src/components/ui/label.tsx:4:import { cva } from "class-variance-authority";
./packages/ui/src/components/ui/label.tsx:5:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/ui/label.tsx:6:import * as React from "react";
./packages/ui/src/components/ui/label.tsx:7:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/accessibility-monitor.tsx:1:import { AlertTriangle, CheckCircle, Eye, Keyboard, Volume2, X } from "lucide-react";
./packages/ui/src/components/ui/accessibility-monitor.tsx:2:import * as React from "react";
./packages/ui/src/components/ui/accessibility-monitor.tsx:3:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/accessibility-monitor.tsx:4:import { calculateContrastRatio } from "./contrast-validator";
./packages/ui/src/components/ui/visually-hidden.tsx:1:import * as React from "react";
./packages/ui/src/components/ui/visually-hidden.tsx:2:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/switch.tsx:4:import * as SwitchPrimitive from "@radix-ui/react-switch";
./packages/ui/src/components/ui/switch.tsx:5:import * as React from "react";
./packages/ui/src/components/ui/switch.tsx:6:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/input.tsx:1:import { cva } from "class-variance-authority";
./packages/ui/src/components/ui/input.tsx:2:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/ui/input.tsx:3:import { AlertCircle, Check, Eye, EyeOff, X } from "lucide-react";
./packages/ui/src/components/ui/input.tsx:4:import type * as React from "react";
./packages/ui/src/components/ui/input.tsx:5:import { forwardRef, useCallback, useState } from "react";
./packages/ui/src/components/ui/input.tsx:6:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/dialog.tsx:1:import * as DialogPrimitive from "@radix-ui/react-dialog";
./packages/ui/src/components/ui/dialog.tsx:2:import { cva } from "class-variance-authority";
./packages/ui/src/components/ui/dialog.tsx:3:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/ui/dialog.tsx:4:import { AlertTriangle, CheckCircle, FileText, Heart, Info, Shield, X } from "lucide-react";
./packages/ui/src/components/ui/dialog.tsx:5:import * as React from "react";
./packages/ui/src/components/ui/dialog.tsx:7:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/skeleton.tsx:1:import * as React from "react";
./packages/ui/src/components/ui/skeleton.tsx:2:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/slider.tsx:3:import * as SliderPrimitive from "@radix-ui/react-slider";
./packages/ui/src/components/ui/slider.tsx:4:import * as React from "react";
./packages/ui/src/components/ui/slider.tsx:6:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/form.tsx:1:import { cva } from "class-variance-authority";
./packages/ui/src/components/ui/form.tsx:2:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/ui/form.tsx:3:import { AlertCircle, Calendar, CheckCircle, FileText, Heart, Shield, User } from "lucide-react";
./packages/ui/src/components/ui/form.tsx:4:import type * as React from "react";
./packages/ui/src/components/ui/form.tsx:5:import { createContext, forwardRef, useCallback, useContext, useId, useState } from "react";
./packages/ui/src/components/ui/form.tsx:6:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/form.tsx:7:import { FormInstruction, LGPDNotice, VisuallyHidden } from "./visually-hidden";
./packages/ui/src/components/ui/tabs.tsx:3:import * as TabsPrimitive from "@radix-ui/react-tabs";
./packages/ui/src/components/ui/tabs.tsx:4:import type * as React from "react";
./packages/ui/src/components/ui/tabs.tsx:6:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/loading-spinner.tsx:1:import * as React from "react";
./packages/ui/src/components/ui/loading-spinner.tsx:2:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/skip-link.tsx:1:import { cva } from "class-variance-authority";
./packages/ui/src/components/ui/skip-link.tsx:2:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/ui/skip-link.tsx:3:import * as React from "react";
./packages/ui/src/components/ui/skip-link.tsx:4:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/textarea.tsx:2:import * as React from "react";
./packages/ui/src/components/ui/textarea.tsx:3:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/select.tsx:3:import * as SelectPrimitive from "@radix-ui/react-select";
./packages/ui/src/components/ui/select.tsx:4:import { Check, ChevronDown, ChevronUp } from "lucide-react";
./packages/ui/src/components/ui/select.tsx:5:import * as React from "react";
./packages/ui/src/components/ui/select.tsx:6:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/avatar.tsx:1:import * as React from "react";
./packages/ui/src/components/ui/avatar.tsx:2:import { cn } from "../../lib/utils";
./packages/ui/src/components/ui/alert.tsx:3:import { cva } from "class-variance-authority";
./packages/ui/src/components/ui/alert.tsx:4:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/ui/alert.tsx:5:import * as React from "react";
./packages/ui/src/components/ui/alert.tsx:6:import { cn } from "../../lib/utils";
./packages/ui/src/components/AccessibilityControls.tsx:1:import {
./packages/ui/src/components/AccessibilityControls.tsx:16:import * as React from "react";
./packages/ui/src/components/AccessibilityControls.tsx:17:import { useId } from "react";
./packages/ui/src/components/AccessibilityControls.tsx:18:import { cn } from "../utils/cn";
./packages/ui/src/components/AccessibilityControls.tsx:19:import { Badge } from "./Badge";
./packages/ui/src/components/AccessibilityControls.tsx:20:import { Button } from "./Button";
./packages/ui/src/components/AccessibilityControls.tsx:21:import { Checkbox } from "./Checkbox";
./packages/ui/src/components/HealthcareLoadingStates.tsx:1:import {
./packages/ui/src/components/HealthcareLoadingStates.tsx:13:import * as React from "react";
./packages/ui/src/components/HealthcareLoadingStates.tsx:14:import { cn } from "../utils/cn";
./packages/ui/src/components/HealthcareLoadingStates.tsx:15:import { Badge } from "./Badge";
./packages/ui/src/components/Avatar.tsx:1:import * as AvatarPrimitive from "@radix-ui/react-avatar";
./packages/ui/src/components/Avatar.tsx:2:import { cva } from "class-variance-authority";
./packages/ui/src/components/Avatar.tsx:3:import type { VariantProps } from "class-variance-authority";
./packages/ui/src/components/Avatar.tsx:4:import * as React from "react";
./packages/ui/src/components/Avatar.tsx:5:import { cn } from "../utils/cn";
./packages/ui/src/components/HealthRecordViewer.tsx:1:import { Clock, Download, Eye, EyeOff, FileText, Shield } from "lucide-react";
./packages/ui/src/components/HealthRecordViewer.tsx:2:import * as React from "react";
./packages/ui/src/components/HealthRecordViewer.tsx:3:import type { HealthRecordData, PractitionerData } from "../types";
./packages/ui/src/components/HealthRecordViewer.tsx:4:import { cn } from "../utils/cn";
./packages/ui/src/components/HealthRecordViewer.tsx:5:import { formatters } from "../utils/formatters";
./packages/ui/src/components/HealthRecordViewer.tsx:6:import { Avatar, AvatarFallback, AvatarImage } from "./Avatar";
./packages/ui/src/components/HealthRecordViewer.tsx:7:import { Badge } from "./Badge";
./packages/ui/src/components/HealthRecordViewer.tsx:8:import { Button } from "./Button";
./packages/ui/src/components/HealthRecordViewer.tsx:9:import { Tabs, TabsContent, TabsList, TabsTrigger } from "./Tabs";
./packages/ui/src/components/AppointmentCalendar.tsx:1:import {
./packages/ui/src/components/AppointmentCalendar.tsx:14:import { ptBR } from "date-fns/locale";
./packages/ui/src/components/AppointmentCalendar.tsx:15:import { Calendar, ChevronLeft, ChevronRight, Clock, Plus } from "lucide-react";
./packages/ui/src/components/AppointmentCalendar.tsx:16:import * as React from "react";
./packages/ui/src/components/AppointmentCalendar.tsx:17:import { cn } from "../utils/cn";
./packages/ui/src/components/AppointmentCalendar.tsx:18:import { Badge } from "./Badge";
./packages/ui/src/components/AppointmentCalendar.tsx:19:import { Button } from "./Button";
./packages/ui/src/components/AppointmentCard.tsx:1:import { AlertCircle, Calendar, CheckCircle, Clock, MapPin, User, X } from "lucide-react";
./packages/ui/src/components/AppointmentCard.tsx:2:import * as React from "react";
./packages/ui/src/components/AppointmentCard.tsx:3:import { cn } from "../utils/cn";
./packages/ui/src/components/AppointmentCard.tsx:4:import { formatDate } from "../utils/formatters";
./packages/ui/src/components/AppointmentCard.tsx:5:import { Avatar, AvatarFallback, AvatarImage } from "./Avatar";
./packages/ui/src/components/AppointmentCard.tsx:6:import { Badge } from "./Badge";
./packages/ui/src/components/AppointmentCard.tsx:7:import { Button } from "./Button";
./packages/ui/src/components/ar-vr/ARVRViewer.complex.tsx:10:import { Camera, Eye, Monitor, Move3d, RotateCcw, ZoomIn, ZoomOut } from "lucide-react";
./packages/ui/src/components/ar-vr/ARVRViewer.complex.tsx:11:import { useEffect, useId, useRef, useState } from "react";
./packages/ui/src/components/ar-vr/ARVRViewer.complex.tsx:12:import { Badge } from "../Badge";
./packages/ui/src/components/ar-vr/ARVRViewer.complex.tsx:13:import { Button } from "../Button";
./packages/ui/src/components/ar-vr/ARVRViewer.complex.tsx:14:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../Card";
./packages/ui/src/components/ar-vr/ARVRViewer.complex.tsx:15:import { Progress } from "../Progress";
./packages/ui/src/components/ar-vr/ARVRViewer.complex.tsx:16:import { Switch } from "../Switch";
./packages/ui/src/components/ar-vr/ARVRViewer.complex.tsx:17:import { Slider } from "../ui/slider";
./packages/ui/src/components/PatientDetailLayout.tsx:1:import { ArrowLeft, Calendar, Edit, Mail, Phone } from "lucide-react";
./packages/ui/src/components/PatientDetailLayout.tsx:2:import * as React from "react";
./packages/ui/src/components/PatientDetailLayout.tsx:3:import type { PatientData } from "../types";
./packages/ui/src/components/PatientDetailLayout.tsx:4:import { cn } from "../utils/cn";
./packages/ui/src/components/PatientDetailLayout.tsx:5:import { formatters } from "../utils/formatters";
./packages/ui/src/components/PatientDetailLayout.tsx:6:import { Avatar, AvatarFallback, AvatarImage } from "./Avatar";
./packages/ui/src/components/PatientDetailLayout.tsx:7:import { Badge } from "./Badge";
./packages/ui/src/components/PatientDetailLayout.tsx:8:import { Button } from "./Button";
./packages/ui/src/components/PatientDetailLayout.tsx:9:import { Tabs, TabsContent, TabsList, TabsTrigger } from "./Tabs";
./packages/ui/src/components/DatePicker.tsx:1:import { Calendar as CalendarIcon } from "lucide-react";
./packages/ui/src/components/DatePicker.tsx:2:import * as React from "react";
./packages/ui/src/components/DatePicker.tsx:3:import { cn } from "../utils/cn";
./packages/ui/src/components/DatePicker.tsx:4:import { formatters } from "../utils/formatters";
./packages/ui/src/components/DatePicker.tsx:5:import { Button } from "./Button";
./packages/ui/src/components/DatePicker.tsx:6:import { Popover, PopoverContent, PopoverTrigger } from "./Popover";
./packages/ui/src/components/ProgressBar.tsx:1:import * as React from "react";
./packages/ui/src/components/ProgressBar.tsx:2:import { cn } from "../utils/cn";
./packages/ui/src/components/error-boundary.tsx:1:import type React from "react";
./packages/ui/src/components/error-boundary.tsx:2:import { Component } from "react";
./packages/ui/src/components/error-boundary.tsx:3:import type { ErrorInfo, ReactNode } from "react";
./packages/ui/src/components/DashboardSidebar.tsx:1:import {
./packages/ui/src/components/DashboardSidebar.tsx:12:import * as React from "react";
./packages/ui/src/components/DashboardSidebar.tsx:13:import { cn } from "../utils/cn";
./packages/ui/src/components/DashboardSidebar.tsx:14:import { Avatar, AvatarFallback, AvatarImage } from "./Avatar";
./packages/ui/src/components/DashboardSidebar.tsx:15:import { Badge } from "./Badge";
./packages/ui/src/components/DashboardSidebar.tsx:16:import { Button } from "./Button";
./packages/ui/src/components/SearchBox.tsx:1:import * as React from "react";
./packages/ui/src/components/SearchBox.tsx:2:import { cn } from "../utils/cn";
./packages/ui/src/components/SearchBox.tsx:3:import { Badge } from "./Badge";
./packages/ui/src/components/SearchBox.tsx:4:import { Button } from "./Button";
./packages/ui/src/hooks/use-permissions.ts:2:import { useMemo } from "react";
./packages/ui/src/hooks/useLayout.ts:1:import * as React from "react";
./packages/ui/src/hooks/use-toast.ts:4:import * as React from "react";
./packages/ui/src/hooks/use-toast.ts:6:import type { ToastActionElement, ToastProps } from "../components/Toast";
./packages/ui/src/hooks/use-translation.tsx:15:import { createContext, useContext, useEffect, useState } from "react";
./packages/ui/src/hooks/use-translation.tsx:16:import type { ReactNode } from "react";
./packages/ui/src/hooks/use-translation.tsx:17:import { createTranslator, defaultLocale, getDictionary } from "../lib/i18n/i18n";
./packages/ui/src/hooks/use-translation.tsx:18:import type { Dictionary, Locale } from "../lib/i18n/i18n";
./packages/ui/src/hooks/use-debounce.ts:7:import { useEffect, useState } from "react";
./packages/ui/src/hooks/use-mobile.tsx:1:import * as React from "react";
./packages/ui/src/themes/neonpro/examples/healthcare-dashboard.tsx:7:import React, { useState } from "react";
./packages/ui/src/themes/neonpro/examples/healthcare-dashboard.tsx:8:import {
./packages/ui/src/themes/neonpro/examples/healthcare-dashboard.tsx:14:import type {
./packages/ui/src/themes/neonpro/components/payment-status-table.tsx:7:import { cn } from "@neonpro/utils";
./packages/ui/src/themes/neonpro/components/payment-status-table.tsx:8:import {
./packages/ui/src/themes/neonpro/components/payment-status-table.tsx:21:import React, { useMemo, useState } from "react";
./packages/ui/src/themes/neonpro/components/healthcare-metric-card.tsx:7:import { cn } from "@neonpro/utils";
./packages/ui/src/themes/neonpro/components/healthcare-metric-card.tsx:8:import { Activity, Calendar, DollarSign, TrendingDown, TrendingUp, Users } from "lucide-react";
./packages/ui/src/themes/neonpro/components/healthcare-metric-card.tsx:9:import React from "react";
./packages/ui/src/themes/neonpro/components/appointment-calendar.tsx:7:import { cn } from "@neonpro/utils";
./packages/ui/src/themes/neonpro/components/appointment-calendar.tsx:8:import { Calendar, ChevronLeft, ChevronRight, Clock, MapPin, User } from "lucide-react";
./packages/ui/src/themes/neonpro/components/appointment-calendar.tsx:9:import React, { useMemo, useState } from "react";
./packages/ui/src/themes/neonpro/components/team-members-list.tsx:7:import { cn } from "@neonpro/utils";
./packages/ui/src/themes/neonpro/components/team-members-list.tsx:8:import {
./packages/ui/src/themes/neonpro/components/team-members-list.tsx:25:import React, { useState } from "react";
./packages/ui/src/themes/neonpro/index.ts:7:import { AppointmentCalendar } from "./components/appointment-calendar";
./packages/ui/src/themes/neonpro/index.ts:8:import { HealthcareMetricCard } from "./components/healthcare-metric-card";
./packages/ui/src/themes/neonpro/index.ts:9:import { PaymentStatusTable } from "./components/payment-status-table";
./packages/ui/src/themes/neonpro/index.ts:10:import { TeamMembersList } from "./components/team-members-list";
./packages/ui/src/themes/brazilian-healthcare/components/responsive-layout.tsx:3:import { useEffect, useState } from "react";
./packages/ui/src/themes/brazilian-healthcare/components/responsive-layout.tsx:4:import type { ReactNode } from "react";
./packages/ui/src/themes/brazilian-healthcare/components/responsive-layout.tsx:5:import type { ConnectivityLevel, RegionalSettings } from "../types";
./packages/ui/src/themes/brazilian-healthcare/components/lgpd-compliance.tsx:3:import { useEffect, useState } from "react";
./packages/ui/src/themes/brazilian-healthcare/components/lgpd-compliance.tsx:4:import type { AuditEvent, LGPDConsent } from "../types";
./packages/ui/src/themes/brazilian-healthcare/components/emergency-access.tsx:3:import { useCallback, useEffect, useRef, useState } from "react";
./packages/ui/src/themes/brazilian-healthcare/components/emergency-access.tsx:4:import type { EmergencyAlert, PatientInfo } from "../types";
./packages/ui/src/utils/formatters.ts:1:import { format, formatDistanceToNow } from "date-fns";
./packages/ui/src/utils/formatters.ts:2:import { ptBR } from "date-fns/locale";
./packages/ui/src/utils/cn.ts:1:import { clsx } from "clsx";
./packages/ui/src/utils/cn.ts:2:import type { ClassValue } from "clsx";
./packages/ui/src/utils/cn.ts:3:import { twMerge } from "tailwind-merge";
./packages/ui/src/lib/utils.ts:1:import { clsx } from "clsx";
./packages/ui/src/lib/utils.ts:2:import type { ClassValue } from "clsx";
./packages/ui/src/lib/utils.ts:3:import { twMerge } from "tailwind-merge";
./packages/testing/src/accessibility/automated/accessibility-test-suite.ts:14:import type { AxeResults } from "axe-core";
./packages/testing/src/accessibility/automated/accessibility-test-suite.ts:15:import { axe } from "axe-core";
./packages/testing/src/accessibility/automated/accessibility-test-suite.ts:16:import { EMERGENCY_CONTRAST_RULES, MEDICAL_TERMINOLOGY_RULES, WCAG21AA_RULES } from "./wcag-rules";
./packages/testing/src/accessibility/universal-ai-chat-accessibility.test.ts:6:import { fireEvent, render, screen, waitFor } from "@testing-library/react";
./packages/testing/src/accessibility/universal-ai-chat-accessibility.test.ts:7:import { axe, toHaveNoViolations } from "jest-axe";
./packages/testing/src/accessibility/universal-ai-chat-accessibility.test.ts:8:import { UniversalAIChat } from "../../apps/web/app/components/chat/universal-ai-chat";
./packages/testing/src/accessibility/universal-ai-chat-accessibility.test.ts:9:import { AccessibilityTestSuite } from "./automated/accessibility-test-suite";
./packages/ai/vitest.config.ts:3:import { defineConfig } from "vitest/config";
./packages/ai/tsup.config.ts:1:import { defineConfig } from "tsup";
./packages/ai/src/tests/enhanced-service-base.test.ts:1:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./packages/ai/src/tests/enhanced-service-base.test.ts:2:import type { Mock } from "vitest";
./packages/ai/src/tests/enhanced-service-base.test.ts:3:import { EnhancedAIService } from "../services/enhanced-service-base";
./packages/ai/src/tests/enhanced-service-base.test.ts:4:import type {
./packages/ai/src/prediction/core/tensorflow-lazy-loader.ts:50:   * Dynamic import TensorFlow.js with performance optimization
./packages/ai/src/prediction/core/tensorflow-lazy-loader.ts:57:      // Dynamic import to avoid bundle inclusion
./packages/ai/src/prediction/core/model-manager.ts:1:import type { GraphModel, LayersModel } from "@tensorflow/tfjs";
./packages/ai/src/prediction/core/model-manager.ts:2:import type { ModelMetadata, ModelType, PredictionConfig } from "../types";
./packages/ai/src/prediction/core/model-manager.ts:3:import { LazyTensorFlowOperations, tensorFlowLoader } from "./tensorflow-lazy-loader";
./packages/ai/src/prediction/core/post-processor.ts:1:import type {
./packages/ai/src/prediction/core/feature-extractor.ts:1:import type { PatientProfile, SkinType, TreatmentRequest } from "../types";
./packages/ai/src/prediction/core/prediction-engine.ts:2:// import * as tf from "@tensorflow/tfjs"; // ❌ Removed static import
./packages/ai/src/prediction/core/prediction-engine.ts:3:import type {
./packages/ai/src/prediction/core/prediction-engine.ts:18:import { AestheticFeatureExtractor } from "./feature-extractor";
./packages/ai/src/prediction/core/prediction-engine.ts:19:import { aiModelManager } from "./model-manager";
./packages/ai/src/prediction/core/prediction-engine.ts:20:import { AestheticPostProcessor } from "./post-processor";
./packages/ai/src/prediction/core/prediction-engine.ts:21:import { LazyTensorFlowOperations, tensorFlowLoader } from "./tensorflow-lazy-loader";
./packages/ai/src/prediction/analytics/performance-monitor.ts:1:import type { ModelType } from "../types";
./packages/ai/src/prediction/index.ts:41: * import { initializeAIPredictionEngine, neonproAIIntegration } from '@neonpro/ai/prediction';
./packages/ai/src/prediction/treatment-outcome-predictor.ts:8:import { z } from "zod";
./packages/ai/src/prediction/treatment-outcome-predictor.ts:9:import type { AIDecision } from "../ethics/ai-ethics-validator";
./packages/ai/src/prediction/treatment-outcome-predictor.ts:10:import { ConstitutionalAIEthicsValidator } from "../ethics/ai-ethics-validator";
./packages/ai/src/prediction/utils/helpers.ts:1:import { neonproAIIntegration } from "../integrations/neonpro-integration";
./packages/ai/src/prediction/utils/helpers.ts:2:import type { PatientProfile, SkinType, TreatmentRequest } from "../types";
./packages/ai/src/prediction/integrations/neonpro-integration.ts:1:import { predictionPerformanceMonitor } from "../analytics/performance-monitor";
./packages/ai/src/prediction/integrations/neonpro-integration.ts:2:import { aestheticInferenceAPI } from "../api/inference-api";
./packages/ai/src/prediction/integrations/neonpro-integration.ts:3:import type { PatientProfile, TreatmentRequest } from "../types";
./packages/ai/src/prediction/api/inference-api.ts:1:import { aestheticPredictionEngine } from "../core/prediction-engine";
./packages/ai/src/prediction/api/inference-api.ts:2:import type {
./packages/ai/src/ethics/ai-ethics-validator.ts:8:import { z } from "zod";
./packages/ai/src/scheduling/types.ts:13:// TODO: Replace with import when @neonpro/core-services is properly built
./packages/ai/src/scheduling/types.ts:14:// import type { BaseEntity } from '@neonpro/core-services';
./packages/ai/src/scheduling/ai-scheduling-engine.ts:4:import type {
./packages/ai/src/scheduling/predictive-analytics.ts:4:import type {
./packages/ai/src/scheduling/integration-service.ts:4:import type {
./packages/ai/src/scheduling/conflict-detector.ts:4:import type {
./packages/ai/src/chat/context.tsx:9:import type {
./packages/ai/src/chat/context.tsx:19:import type React from "react";
./packages/ai/src/chat/context.tsx:20:import { createContext, useCallback, useContext, useEffect, useReducer } from "react";
./packages/ai/src/chat/engine.ts:7:import { openai } from "@ai-sdk/openai";
./packages/ai/src/chat/engine.ts:8:import type {
./packages/ai/src/chat/engine.ts:16:import { generateObject, generateText, streamText } from "ai";
./packages/ai/src/chat/engine.ts:17:import { z } from "zod";
./packages/ai/src/services/ml-pipeline-management.js:11:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/behavioral-crm-service.ts:4:import type { LoggerService, MetricsService } from "@neonpro/core-services";
./packages/ai/src/services/behavioral-crm-service.ts:5:import type { AIServiceConfig, CacheService } from "./enhanced-service-base";
./packages/ai/src/services/behavioral-crm-service.ts:6:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/ml-pipeline-management.ts:12:import type { LoggerService, MetricsService } from "@neonpro/core-services";
./packages/ai/src/services/ml-pipeline-management.ts:13:import type {
./packages/ai/src/services/ml-pipeline-management.ts:23:import type { AIServiceConfig, AIServiceMetrics, CacheService } from "./enhanced-service-base";
./packages/ai/src/services/ml-pipeline-management.ts:24:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/enhanced-no-show-prediction-service.js:3:import { NoShowPredictionService } from "./no-show-prediction-service";
./packages/ai/src/services/enhanced-service-base.d.ts:12:import type { LoggerService, MetricsService } from "@neonpro/core-services";
./packages/ai/src/services/cache-management-service.ts:4:import { createClient } from "@supabase/supabase-js";
./packages/ai/src/services/cache-management-service.ts:5:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/ai/src/services/cache-management-service.ts:6:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/cache-management-service.ts:7:import type { AIServiceInput, AIServiceOutput } from "./enhanced-service-base";
./packages/ai/src/services/conversation-management-service.ts:1:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/ai/src/services/conversation-management-service.ts:2:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/automated-intervention-service.ts:4:import type { LoggerService, MetricsService } from "@neonpro/core-services";
./packages/ai/src/services/automated-intervention-service.ts:5:import type {
./packages/ai/src/services/automated-intervention-service.ts:11:import type { AIServiceConfig, CacheService } from "./enhanced-service-base";
./packages/ai/src/services/automated-intervention-service.ts:12:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/universal-chat-service.ts:1:import { EnhancedServiceBase } from "@neonpro/core-services";
./packages/ai/src/services/universal-chat-service.ts:2:import { createClient } from "@supabase/supabase-js";
./packages/ai/src/services/universal-chat-service.ts:3:import type { ChatMessage, ChatSession, ComplianceMetrics, HealthcareChatContext } from "../types";
./packages/ai/src/services/cache-service.ts:1:import { createClient } from "@supabase/supabase-js";
./packages/ai/src/services/cache-service.ts:2:import type { CacheService, LoggerService, MetricsService } from "../types";
./packages/ai/src/services/index.ts:6:import { NoShowPredictionService } from "./no-show-prediction-service";
./packages/ai/src/services/index.ts:8:import { UniversalChatService } from "./universal-chat-service";
./packages/ai/src/services/no-show-prediction-service.d.ts:1:import type { LoggerService, MetricsService } from "@neonpro/core-services";
./packages/ai/src/services/no-show-prediction-service.d.ts:2:import type { ABTestResult, DriftDetectionResult, ModelVersion } from "@neonpro/types";
./packages/ai/src/services/no-show-prediction-service.d.ts:3:import type { AIServiceConfig, CacheService } from "./enhanced-service-base";
./packages/ai/src/services/no-show-prediction-service.d.ts:4:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/no-show-prediction-service.ts:4:import type { LoggerService, MetricsService } from "@neonpro/core-services";
./packages/ai/src/services/no-show-prediction-service.ts:5:import type { ABTestResult, DriftDetectionResult, ModelVersion } from "@neonpro/types";
./packages/ai/src/services/no-show-prediction-service.ts:6:import type { AIServiceConfig, CacheService } from "./enhanced-service-base";
./packages/ai/src/services/no-show-prediction-service.ts:7:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/no-show-prediction-service.ts:8:import { MLPipelineManagementService } from "./ml-pipeline-management";
./packages/ai/src/services/compliance-automation-service.ts:1:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/ai/src/services/compliance-automation-service.ts:2:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/no-show-prediction-service.js:3:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/no-show-prediction-service.js:4:import { MLPipelineManagementService } from "./ml-pipeline-management";
./packages/ai/src/services/roi-analytics-service.ts:4:import type { LoggerService, MetricsService } from "@neonpro/core-services";
./packages/ai/src/services/roi-analytics-service.ts:5:import type { AIServiceConfig, CacheService } from "./enhanced-service-base";
./packages/ai/src/services/roi-analytics-service.ts:6:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/monitoring-service.ts:4:import { createClient } from "@supabase/supabase-js";
./packages/ai/src/services/monitoring-service.ts:5:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/ai/src/services/monitoring-service.ts:6:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/monitoring-service.ts:7:import type { AIServiceInput, AIServiceOutput } from "./enhanced-service-base";
./packages/ai/src/services/batch-prediction-service.ts:4:import type { LoggerService, MetricsService } from "@neonpro/core-services";
./packages/ai/src/services/batch-prediction-service.ts:5:import type { EnhancedNoShowPredictionService } from "./enhanced-no-show-prediction-service";
./packages/ai/src/services/batch-prediction-service.ts:6:import type { AIServiceConfig, CacheService } from "./enhanced-service-base";
./packages/ai/src/services/batch-prediction-service.ts:7:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/batch-prediction-service.ts:8:import type {
./packages/ai/src/services/appointment-optimization-service.ts:4:import { createClient } from "@supabase/supabase-js";
./packages/ai/src/services/appointment-optimization-service.ts:5:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/appointment-optimization-service.ts:6:import type { AIServiceInput, AIServiceOutput } from "./enhanced-service-base";
./packages/ai/src/services/enhanced-no-show-prediction-service.ts:4:import type { LoggerService, MetricsService } from "@neonpro/core-services";
./packages/ai/src/services/enhanced-no-show-prediction-service.ts:5:import type { AIServiceConfig, CacheService } from "./enhanced-service-base";
./packages/ai/src/services/enhanced-no-show-prediction-service.ts:6:import type {
./packages/ai/src/services/enhanced-no-show-prediction-service.ts:14:import { NoShowPredictionService } from "./no-show-prediction-service";
./packages/ai/src/services/enhanced-no-show-prediction-service.d.ts:1:import type { LoggerService, MetricsService } from "@neonpro/core-services";
./packages/ai/src/services/enhanced-no-show-prediction-service.d.ts:2:import type { AIServiceConfig, CacheService } from "./enhanced-service-base";
./packages/ai/src/services/enhanced-no-show-prediction-service.d.ts:3:import type { AppointmentContext, ExternalFactors, FeatureImportance, PatientProfile, PredictionInput, PredictionOutput } from "./no-show-prediction-service";
./packages/ai/src/services/enhanced-no-show-prediction-service.d.ts:4:import { NoShowPredictionService } from "./no-show-prediction-service";
./packages/ai/src/services/healthcare-monitoring-service.ts:4:import type { LoggerService, MetricsService } from "@neonpro/core-services";
./packages/ai/src/services/healthcare-monitoring-service.ts:5:import type { AIServiceConfig, CacheService } from "./enhanced-service-base";
./packages/ai/src/services/healthcare-monitoring-service.ts:6:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/feature-flag-service.ts:4:import { createClient } from "@supabase/supabase-js";
./packages/ai/src/services/feature-flag-service.ts:5:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/ai/src/services/feature-flag-service.ts:6:import { EnhancedAIService } from "./enhanced-service-base";
./packages/ai/src/services/feature-flag-service.ts:7:import type { AIServiceInput, AIServiceOutput } from "./enhanced-service-base";
./packages/ai/src/services/enhanced-service-base.ts:13:import type { LoggerService, MetricsService } from "@neonpro/core-services";
./packages/ai/src/services/ml-pipeline-management.d.ts:11:import { EnhancedAIService } from "./enhanced-service-base";
./packages/devops/vitest.config.ts:3:import { defineConfig } from "vitest/config";
./packages/devops/src/cleanup/root-directory-cleanup.ts:7:import { existsSync, promises as fs } from "node:fs";
./packages/devops/src/cleanup/root-directory-cleanup.ts:8:import { extname, join } from "node:path";
./packages/devops/src/deployment/automation/trigger-client.ts:1:import { TriggerClient } from "@trigger.dev/sdk";
./packages/devops/src/deployment/automation/jobs/billing-emails.ts:1:import { createClient } from "@/app/utils/supabase/server";
./packages/devops/src/deployment/automation/jobs/billing-emails.ts:2:import { logger, task } from "@trigger.dev/sdk/v3";
./packages/devops/src/deployment/automation/jobs/billing-emails.ts:3:import { Resend } from "resend";
./packages/devops/src/deployment/automation/jobs/billing-emails.ts:4:import { JOB_IDS } from "../client";
./packages/devops/src/deployment/automation/jobs/billing-emails.ts:5:import type { InvoiceJobPayload } from "../client";
./packages/devops/src/deployment/automation/jobs/appointment-emails.ts:1:import { createClient } from "@/app/utils/supabase/server";
./packages/devops/src/deployment/automation/jobs/appointment-emails.ts:2:import { logger, task } from "@trigger.dev/sdk/v3";
./packages/devops/src/deployment/automation/jobs/appointment-emails.ts:3:import { Resend } from "resend";
./packages/devops/src/deployment/automation/jobs/appointment-emails.ts:4:import { JOB_IDS } from "../client";
./packages/devops/src/deployment/automation/jobs/appointment-emails.ts:5:import type { AppointmentJobPayload } from "../client";
./packages/devops/src/deployment/functions/stock-alerts-processor/index.ts:1:import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
./packages/devops/src/deployment/functions/stock-alerts-processor/index.ts:2:import { createClient } from "https://esm.sh/@supabase/supabase-js@2";
./packages/devops/src/deployment/functions/subscription-billing-processor/index.ts:10:import { serve } from "https://deno.land/std@0.208.0/http/server.ts";
./packages/devops/src/deployment/functions/subscription-billing-processor/index.ts:11:import { createClient } from "https://esm.sh/@supabase/supabase-js@2";
./packages/devops/src/deployment/functions/stock-reports-generator/index.ts:1:import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
./packages/devops/src/deployment/functions/stock-reports-generator/index.ts:2:import { createClient } from "https://esm.sh/@supabase/supabase-js@2";
./packages/devops/src/deployment/blue-green/deployer.ts:7:import { exec } from "node:child_process";
./packages/devops/src/deployment/blue-green/deployer.ts:8:import { promisify } from "node:util";
./packages/devops/src/deployment/blue-green/deployer.ts:9:import ora from "ora";
./packages/devops/src/deployment/blue-green/deployer.ts:10:import { DeploymentMonitor } from "./deployment-monitor";
./packages/devops/src/deployment/blue-green/deployer.ts:11:import type { MonitorConfig } from "./deployment-monitor";
./packages/devops/src/deployment/blue-green/deployer.ts:12:import { HealthChecker } from "./health-checker";
./packages/devops/src/deployment/blue-green/deployer.ts:13:import { RollbackManager } from "./rollback-manager";
./packages/devops/src/deployment/blue-green/deployer.ts:14:import { TrafficManager } from "./traffic-manager";
./packages/devops/src/docker/turborepo-docker-optimization.ts:7:import { execSync } from "node:child_process";
./packages/devops/src/docker/turborepo-docker-optimization.ts:8:import { promises as fs } from "node:fs";
./packages/devops/src/docker/turborepo-docker-optimization.ts:9:import { join } from "node:path";
./packages/devops/src/testing/e2e-healthcare-testing.ts:7:import { afterEach, beforeEach, describe, expect, vi } from "vitest";
./packages/devops/src/testing/performance-testing.ts:6:import { beforeEach, describe, expect, test } from "vitest";
./packages/devops/src/testing/security-testing.ts:6:import { beforeEach, describe, expect, test } from "vitest";
./packages/devops/src/testing/patient-privacy-testing.ts:7:import type { ComplianceMetrics } from "../types/testing";
./packages/devops/src/testing/accessibility-testing.ts:6:import { beforeEach, describe, expect, test } from "vitest";
./packages/devops/src/testing/testing-framework.ts:7:import { afterEach, beforeEach, describe, expect, test, vi } from "vitest";
./packages/devops/src/testing/testing-framework.ts:271:    import * as dataProtection from "@/lib/lgpd/data-protection"; vi.mock(
./packages/devops/src/testing/testing-framework.ts:285:    import * as medicalDevice from "@/lib/anvisa/medical-device"; vi.mock(
./packages/devops/src/testing/testing-framework.ts:299:    import * as professionalValidation from "@/lib/cfm/professional-validation"; vi.mock(
./packages/devops/src/testing/compliance-testing.ts:7:import { afterEach, beforeEach, describe, expect, test, vi } from "vitest";
./packages/devops/src/testing/compliance-testing.ts:8:import type { ComplianceMetrics } from "../types/testing";
./packages/devops/src/testing/healthcare-test-utils.ts:8:import type { SupabaseClient } from "@supabase/supabase-js";
./packages/devops/src/testing/healthcare-test-utils.ts:9:import { render } from "@testing-library/react";
./packages/devops/src/testing/healthcare-test-utils.ts:10:import type { RenderOptions } from "@testing-library/react";
./packages/devops/src/testing/healthcare-test-utils.ts:11:import { userEvent } from "@testing-library/user-event";
./packages/devops/src/testing/healthcare-test-utils.ts:12:import React from "react";
./packages/devops/src/testing/healthcare-test-utils.ts:13:import type { ReactElement } from "react";
./packages/devops/src/testing/healthcare-test-utils.ts:14:import { vi } from "vitest";
./packages/devops/src/testing/medical-accuracy-testing.ts:7:import { afterEach, beforeEach, describe, expect, test, vi } from "vitest";
./packages/devops/src/testing/medical-accuracy-testing.ts:8:import type { ComplianceMetrics } from "../types/testing";
./playwright.config.ts:9:import { defineConfig, devices } from "@playwright/test";
./playwright.config.ts:10:import { cpus } from "node:os";
./trigger.config.ts:1:import type { TriggerConfig } from "@trigger.dev/sdk/v3";
./apps/api/vitest.config.ts:3:import path from "node:path";
./apps/api/vitest.config.ts:4:import { defineConfig } from "vitest/config";
./apps/api/vitest.setup.ts:1:import { vi } from "vitest";
./apps/api/src/middleware/rate-limit.ts:9:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/rate-limit.ts:10:import { logger } from "../lib/logger";
./apps/api/src/middleware/errors/healthcare-error-handler.ts:1:import {
./apps/api/src/middleware/errors/healthcare-error-handler.ts:6:import { ErrorCategory, ErrorSeverity } from "@neonpro/shared/errors/healthcare-error-types";
./apps/api/src/middleware/errors/healthcare-error-handler.ts:7:import type { ErrorContext, HealthcareError } from "@neonpro/shared/errors/healthcare-error-types";
./apps/api/src/middleware/errors/healthcare-error-handler.ts:8:import type { Context, Hono } from "hono";
./apps/api/src/middleware/errors/healthcare-error-handler.ts:9:import { HTTPException } from "hono/http-exception";
./apps/api/src/middleware/errors/healthcare-error-handler.ts:10:import { auditLogger } from "../../lib/audit-logger";
./apps/api/src/middleware/errors/healthcare-error-handler.ts:11:import { logger } from "../../lib/logger";
./apps/api/src/middleware/healthcare-validation.ts:13:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/healthcare-validation.ts:14:import { z } from "zod";
./apps/api/src/middleware/healthcare-validation.ts:15:import { createError } from "./error-handler";
./apps/api/src/middleware/healthcare-validation.ts:16:import { HealthcareSecurityLogger } from "./healthcare-security";
./apps/api/src/middleware/cors.ts:9:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/cors.ts:10:import { cors } from "hono/cors";
./apps/api/src/middleware/cors.ts:11:import { logger } from "../lib/logger";
./apps/api/src/middleware/cors.ts:12:import {
./apps/api/src/middleware/audit.ts:9:import { UnifiedAuditService } from "@neonpro/security";
./apps/api/src/middleware/audit.ts:10:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/audit.ts:11:import { logger } from "../lib/logger";
./apps/api/src/middleware/audit.ts:12:import { createRouteRegex, extractResourceIds } from "../lib/regex-constants";
./apps/api/src/middleware/request-id.ts:9:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/request-id.ts:10:import { nanoid } from "nanoid";
./apps/api/src/middleware/request-id.ts:11:import { REQUEST_ID } from "../lib/constants";
./apps/api/src/middleware/healthcare-security.ts:13:import type { MiddlewareHandler } from "hono";
./apps/api/src/middleware/healthcare-security.ts:14:import type { RedisOptions } from "ioredis";
./apps/api/src/middleware/auditMiddleware.ts:1:import type { NextFunction, Request, Response } from "express";
./apps/api/src/middleware/auditMiddleware.ts:2:import { AuditAction, AuditResourceType, AuditService } from "../services/AuditService";
./apps/api/src/middleware/error-handler.ts:9:import type { Context, ErrorHandler } from "hono";
./apps/api/src/middleware/error-handler.ts:10:import type { StatusCode } from "hono/utils/http-status";
./apps/api/src/middleware/error-handler.ts:11:import { logger } from "../lib/logger";
./apps/api/src/middleware/lgpd.ts:9:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/lgpd.ts:10:import { createRouteRegex } from "../lib/regex-constants";
./apps/api/src/middleware/lgpd.ts:11:import { createError } from "./error-handler";
./apps/api/src/middleware/auth.ts:9:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/auth.ts:10:import { createError } from "./error-handler";
./apps/api/src/middleware/security/auth/jwt-validation.ts:14:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/security/auth/jwt-validation.ts:15:import { jwtVerify } from "jose";
./apps/api/src/middleware/security/auth/jwt-validation.ts:16:import type { JWTPayload, JWTVerifyResult } from "jose";
./apps/api/src/middleware/security/headers/security-headers-middleware.ts:15:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/security/headers/healthcare-cors-middleware.ts:15:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/security/headers/healthcare-cors-middleware.ts:16:import { cors } from "hono/cors";
./apps/api/src/middleware/security/index.ts:16:import type { MiddlewareHandler } from "hono";
./apps/api/src/middleware/security/index.ts:19:import { createJWTAuthMiddleware, HealthcareRole } from "./auth/jwt-validation";
./apps/api/src/middleware/security/index.ts:20:import { createHealthcareErrorHandler } from "./error-handling/healthcare-error-handler";
./apps/api/src/middleware/security/index.ts:21:import {
./apps/api/src/middleware/security/index.ts:26:import {
./apps/api/src/middleware/security/index.ts:30:import {
./apps/api/src/middleware/security/index.ts:34:import {
./apps/api/src/middleware/security/index.test.ts:3:import {
./apps/api/src/middleware/security/rate-limiting/healthcare-rate-limiter.ts:14:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/security/rate-limiting/healthcare-rate-limiter.ts:15:import { HealthcareRole } from "../auth/jwt-validation";
./apps/api/src/middleware/security/error-handling/healthcare-error-handler.ts:15:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/security/error-handling/healthcare-error-handler.ts:16:import { HTTPException } from "hono/http-exception";
./apps/api/src/middleware/security/validation/healthcare-validation-middleware.ts:14:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/security/validation/healthcare-validation-middleware.ts:15:import { HTTPException } from "hono/http-exception";
./apps/api/src/middleware/security/validation/healthcare-validation-middleware.ts:16:import { z, ZodError } from "zod";
./apps/api/src/middleware/security/validation/healthcare-validation-middleware.ts:17:import type { BrazilianHealthcareLicense, BrazilianState } from "./brazilian-healthcare-validator";
./apps/api/src/middleware/security/validation/healthcare-validation-middleware.ts:18:import {
./apps/api/src/middleware/security/validation/brazilian-healthcare-validator.ts:15:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/security/validation/brazilian-healthcare-validator.ts:16:import { z } from "zod";
./apps/api/src/middleware/audit.middleware.ts:1:import type { Context, Next } from "hono";
./apps/api/src/middleware/audit.middleware.ts:2:import { getCookie } from "hono/cookie";
./apps/api/src/middleware/audit.middleware.ts:3:import { verify } from "hono/jwt";
./apps/api/src/middleware/audit.middleware.ts:4:import { auditService } from "../services/audit.service";
./apps/api/src/middleware/audit.middleware.ts:5:import type { AuditContext, AuditEvent } from "../types/audit";
./apps/api/src/middleware/audit.middleware.ts:6:import { AuditAction, AuditSeverity, ResourceType } from "../types/audit";
./apps/api/src/middleware/healthcare-encryption.ts:13:import type { Context, MiddlewareHandler } from "hono";
./apps/api/src/middleware/healthcare-encryption.ts:14:import * as crypto from "node:crypto";
./apps/api/src/middleware/healthcare-encryption.ts:15:import { HealthcareSecurityLogger } from "./healthcare-security";
./apps/api/src/types/api.ts:7:import type { Database } from "@neonpro/database/types";
./apps/api/src/types/audit.ts:1:import { z } from "zod";
./apps/api/src/index.ts:26:import "dotenv/config";
./apps/api/src/index.ts:29:import { Hono } from "hono";
./apps/api/src/index.ts:30:import { compress } from "hono/compress";
./apps/api/src/index.ts:31:import { logger } from "hono/logger";
./apps/api/src/index.ts:32:import { prettyJSON } from "hono/pretty-json";
./apps/api/src/index.ts:33:import { timing } from "hono/timing";
./apps/api/src/index.ts:36:import {
./apps/api/src/index.ts:44:import { auditMiddleware } from "@/middleware/audit";
./apps/api/src/index.ts:45:import { errorHandler } from "@/middleware/error-handler";
./apps/api/src/index.ts:46:import { lgpdMiddleware } from "@/middleware/lgpd";
./apps/api/src/index.ts:47:import { rateLimitMiddleware } from "@/middleware/rate-limit";
./apps/api/src/index.ts:48:import { aiRoutes } from "@/routes/ai";
./apps/api/src/index.ts:49:import { analyticsRoutes } from "@/routes/analytics";
./apps/api/src/index.ts:50:import appointments from "@/routes/appointments";
./apps/api/src/index.ts:51:import auditRoutes from "@/routes/audit";
./apps/api/src/index.ts:52:import { authRoutes } from "@/routes/auth";
./apps/api/src/index.ts:53:import { clinicRoutes } from "@/routes/clinics";
./apps/api/src/index.ts:54:import complianceRoutes from "@/routes/compliance";
./apps/api/src/index.ts:55:import complianceAutomationRoutes from "@/routes/compliance-automation";
./apps/api/src/index.ts:56:import health from "@/routes/health";
./apps/api/src/index.ts:57:import patients from "@/routes/patients";
./apps/api/src/index.ts:58:import { professionalsRoutes } from "@/routes/professionals";
./apps/api/src/index.ts:59:import { servicesRoutes } from "@/routes/services";
./apps/api/src/index.ts:60:import type { AppEnv } from "@/types/env";
./apps/api/src/index.ts:61:import { HTTP_STATUS, RESPONSE_MESSAGES } from "./lib/constants";
./apps/api/src/routes/compliance-automation.ts:1:import { Hono } from "hono";
./apps/api/src/routes/compliance-automation.ts:3:import { HTTP_STATUS, MAGIC_NUMBERS } from "@neonpro/shared";
./apps/api/src/routes/compliance-automation.ts:5:import { COMPLIANCE_STANDARDS } from "./compliance-automation-constants";
./apps/api/src/routes/compliance-automation.ts:6:import {
./apps/api/src/routes/compliance-automation.ts:12:import type { ApiResponse } from "@neonpro/types";
./apps/api/src/routes/compliance-automation.ts:13:import type {
./apps/api/src/routes/patients.ts:7:import { zValidator } from "@hono/zod-validator";
./apps/api/src/routes/patients.ts:8:import { Hono } from "hono";
./apps/api/src/routes/patients.ts:9:import { z } from "zod";
./apps/api/src/routes/patients.ts:10:import { getDatabase } from "../lib/database";
./apps/api/src/routes/patients.ts:11:import type { AuthenticatedUser, CreatePatientRequest, PatientListParams } from "../types/api";
./apps/api/src/routes/patients.ts:12:import { createErrorResponse, createPaginatedResponse, createSuccessResponse } from "../types/api";
./apps/api/src/routes/compliance-automation-helpers-refactored.ts:12:import { COMPLIANCE_STANDARDS, MAGIC_NUMBERS } from "./compliance-automation-constants";
./apps/api/src/routes/compliance-automation-helpers-refactored.ts:13:import type {
./apps/api/src/routes/services.ts:9:import { zValidator } from "@hono/zod-validator";
./apps/api/src/routes/services.ts:10:import type { ApiResponse } from "@neonpro/shared/types";
./apps/api/src/routes/services.ts:11:import { Hono } from "hono";
./apps/api/src/routes/services.ts:12:import { z } from "zod";
./apps/api/src/routes/services.ts:13:import { HTTP_STATUS } from "../lib/constants";
./apps/api/src/routes/compliance-automation-helpers.ts:1:import { COMPLIANCE_STANDARDS, MAGIC_NUMBERS } from "./compliance-automation-constants";
./apps/api/src/routes/health.ts:1:import { createClient } from "@supabase/supabase-js";
./apps/api/src/routes/health.ts:2:import { Hono } from "hono";
./apps/api/src/routes/health.ts:3:import {
./apps/api/src/routes/health.ts:10:import { createErrorResponse, createSuccessResponse } from "../types/api";
./apps/api/src/routes/ai.ts:7:import { Hono } from "hono";
./apps/api/src/routes/ai.ts:8:// import arSimulatorRoutes from "./ai/_inactive_ar-simulator-endpoints";
./apps/api/src/routes/ai.ts:9:import { batchPredictionRoutes } from "./ai/batch-prediction-endpoints";
./apps/api/src/routes/ai.ts:10:import healthcareMonitoringRoutes from "./ai/healthcare-monitoring-endpoints";
./apps/api/src/routes/ai.ts:11:import mlPipelineRoutes from "./ai/ml-pipeline-endpoints";
./apps/api/src/routes/ai.ts:12:import monitoringRoutes from "./ai/monitoring-endpoints";
./apps/api/src/routes/ai.ts:13:import chatEndpoints from "./ai/universal-chat-endpoints";
./apps/api/src/routes/ai.ts:14:import chatHealthRoutes from "./ai/universal-chat-health";
./apps/api/src/routes/audit.ts:1:import { zValidator } from "@hono/zod-validator";
./apps/api/src/routes/audit.ts:2:import type { ApiResponse } from "@neonpro/shared/types";
./apps/api/src/routes/audit.ts:3:import { Hono } from "hono";
./apps/api/src/routes/audit.ts:4:import { z } from "zod";
./apps/api/src/routes/audit.ts:5:import { HTTP_STATUS } from "../lib/constants";
./apps/api/src/routes/audit.ts:6:import { auditMiddleware } from "../middleware/auditMiddleware";
./apps/api/src/routes/audit.ts:7:import { authMiddleware } from "../middleware/auth";
./apps/api/src/routes/audit.ts:8:import { AuditService, AuditResourceType } from '../services/AuditService';
./apps/api/src/routes/audit.ts:9:import type { AuditLogQuery } from '../services/AuditService';
./apps/api/src/routes/clinics.ts:1:import { Hono } from "hono";
./apps/api/src/routes/clinics.ts:2:import { HTTP_STATUS } from "../lib/constants.js";
./apps/api/src/routes/professionals.ts:9:import { zValidator } from "@hono/zod-validator";
./apps/api/src/routes/professionals.ts:10:import type { ApiResponse } from "@neonpro/shared/types";
./apps/api/src/routes/professionals.ts:11:import { Hono } from "hono";
./apps/api/src/routes/professionals.ts:12:import { z } from "zod";
./apps/api/src/routes/professionals.ts:13:import { HTTP_STATUS } from "../lib/constants.js";
./apps/api/src/routes/compliance.ts:1:import { zValidator } from "@hono/zod-validator";
./apps/api/src/routes/compliance.ts:2:import { AuditEventType, AuditSeverity, UnifiedAuditService } from "@neonpro/security";
./apps/api/src/routes/compliance.ts:3:import { Hono } from "hono";
./apps/api/src/routes/compliance.ts:4:import { z } from "zod";
./apps/api/src/routes/compliance.ts:5:import { HTTP_STATUS } from "../lib/constants";
./apps/api/src/routes/compliance.ts:6:import type { ApiResponse } from "../types/api";
./apps/api/src/routes/index.ts:7:import { Hono } from "hono";
./apps/api/src/routes/index.ts:8:import { cors } from "hono/cors";
./apps/api/src/routes/index.ts:9:import { logger } from "hono/logger";
./apps/api/src/routes/index.ts:10:import { prettyJSON } from "hono/pretty-json";
./apps/api/src/routes/index.ts:11:import { secureHeaders } from "hono/secure-headers";
./apps/api/src/routes/index.ts:14:import { aiRoutes } from "./ai";
./apps/api/src/routes/index.ts:15:import { analyticsRoutes } from "./analytics";
./apps/api/src/routes/index.ts:16:import appointments from "./appointments";
./apps/api/src/routes/index.ts:17:import { auditRoutes } from "./audit";
./apps/api/src/routes/index.ts:18:import { authRoutes } from "./auth";
./apps/api/src/routes/index.ts:19:import { clinicRoutes } from "./clinics";
./apps/api/src/routes/index.ts:20:import { complianceRoutes } from "./compliance";
./apps/api/src/routes/index.ts:21:import health from "./health";
./apps/api/src/routes/index.ts:22:import patients from "./patients";
./apps/api/src/routes/index.ts:23:import { professionalRoutes } from "./professionals";
./apps/api/src/routes/index.ts:24:import { servicesRoutes } from "./services";
./apps/api/src/routes/index.ts:27:import { auditMiddleware } from "../middleware/audit.middleware";
./apps/api/src/routes/index.ts:28:import { healthcareSecurityMiddleware } from "../middleware/healthcare-security";
./apps/api/src/routes/appointments.ts:7:import { zValidator } from "@hono/zod-validator";
./apps/api/src/routes/appointments.ts:8:import { Hono } from "hono";
./apps/api/src/routes/appointments.ts:9:import { z } from "zod";
./apps/api/src/routes/appointments.ts:10:import { getDatabase } from "../lib/database";
./apps/api/src/routes/appointments.ts:11:import type {
./apps/api/src/routes/appointments.ts:16:import { createErrorResponse, createPaginatedResponse, createSuccessResponse } from "../types/api";
./apps/api/src/routes/auth.ts:9:import { zValidator } from "@hono/zod-validator";
./apps/api/src/routes/auth.ts:10:import type { AuthToken, AuthUser } from "@neonpro/shared/schemas";
./apps/api/src/routes/auth.ts:11:import {
./apps/api/src/routes/auth.ts:19:import type { ApiResponse } from "@neonpro/shared/types";
./apps/api/src/routes/auth.ts:20:import { Hono } from "hono";
./apps/api/src/routes/auth.ts:21:import { HTTP_STATUS } from "../lib/constants.js";
./apps/api/src/routes/auth.ts:22:import { supabase } from "../lib/supabase.js";
./apps/api/src/routes/analytics.ts:9:import { zValidator } from "@hono/zod-validator";
./apps/api/src/routes/analytics.ts:10:import type { ApiResponse } from "@neonpro/shared/types";
./apps/api/src/routes/analytics.ts:11:import { Hono } from "hono";
./apps/api/src/routes/analytics.ts:12:import { z } from "zod";
./apps/api/src/routes/analytics.ts:13:import { HTTP_STATUS } from "../lib/constants.js";
./apps/api/src/routes/analytics.ts:14:import { supabase } from "../lib/supabase.js";
./apps/api/src/routes/ai/_inactive_ar-simulator-endpoints_backup.ts:8:import { ARResultsSimulatorService } from "@/services/ar-simulator/ARResultsSimulatorService";
./apps/api/src/routes/ai/_inactive_ar-simulator-endpoints_backup.ts:9:import { Hono } from "hono";
./apps/api/src/routes/ai/_inactive_ar-simulator-endpoints_backup.ts:11:import { HTTP_STATUS } from "./ar-simulator-constants";
./apps/api/src/routes/ai/_inactive_ar-simulator-endpoints_backup.ts:12:import { getErrorMessage } from "./ar-simulator-helpers";
./apps/api/src/routes/ai/_inactive_ar-simulator-endpoints_backup.ts:13:import { CompareSimulationsSchema, CreateSimulationSchema } from "./ar-simulator-schemas";
./apps/api/src/routes/ai/universal-chat-endpoints.ts:7:import { openai } from "@ai-sdk/openai";
./apps/api/src/routes/ai/universal-chat-endpoints.ts:8:import { createClient } from "@supabase/supabase-js";
./apps/api/src/routes/ai/universal-chat-endpoints.ts:9:import { streamText } from "ai";
./apps/api/src/routes/ai/universal-chat-endpoints.ts:10:import { Hono } from "hono";
./apps/api/src/routes/ai/batch-prediction-templates.ts:4:import { ERROR_MESSAGES, STATUS_CODES } from "./batch-prediction-constants";
./apps/api/src/routes/ai/_inactive_ar-simulator-endpoints.ts:8:import { ARResultsSimulatorService } from "@/services/ar-simulator/ARResultsSimulatorService";
./apps/api/src/routes/ai/_inactive_ar-simulator-endpoints.ts:9:import { Hono } from "hono";
./apps/api/src/routes/ai/_inactive_ar-simulator-endpoints.ts:11:import { HTTP_STATUS } from "./ar-simulator-constants";
./apps/api/src/routes/ai/_inactive_ar-simulator-endpoints.ts:12:import { getErrorMessage } from "./ar-simulator-helpers";
./apps/api/src/routes/ai/_inactive_ar-simulator-endpoints.ts:13:import { CompareSimulationsSchema, CreateSimulationSchema } from "./ar-simulator-schemas";
./apps/api/src/routes/ai/ml-pipeline-endpoints.ts:6:import type {
./apps/api/src/routes/ai/ml-pipeline-endpoints.ts:16:import { Hono } from "hono";
./apps/api/src/routes/ai/universal-chat-health.ts:1:import { createClient } from "@supabase/supabase-js";
./apps/api/src/routes/ai/universal-chat-health.ts:2:import { Hono } from "hono";
./apps/api/src/routes/ai/batch-prediction-endpoints.ts:4:import { zValidator } from "@hono/zod-validator";
./apps/api/src/routes/ai/batch-prediction-endpoints.ts:5:import { Hono } from "hono";
./apps/api/src/routes/ai/batch-prediction-endpoints.ts:6:import { z } from "zod";
./apps/api/src/routes/ai/batch-prediction-endpoints.ts:7:import { BatchJobFiltersSchema, CreateBatchJobSchema } from "./batch-prediction-schemas";
./apps/api/src/routes/ai/batch-prediction-endpoints.ts:8:import { BatchPredictionService } from "./batch-prediction-services";
./apps/api/src/routes/ai/batch-prediction-endpoints.ts:10:import { MAGIC_NUMBERS } from "./batch-prediction-constants-extended";
./apps/api/src/routes/ai/batch-prediction-endpoints.ts:11:import { getErrorMessage } from "./batch-prediction-helpers";
./apps/api/src/routes/ai/healthcare-monitoring-endpoints.ts:1:import { Hono } from "hono";
./apps/api/src/routes/ai/healthcare-monitoring-endpoints.ts:2:import { z } from "zod";
./apps/api/src/routes/ai/healthcare-monitoring-endpoints.ts:4:import type { ApiResponse } from "@neonpro/types";
./apps/api/src/routes/ai/ar-simulator-schemas.ts:3:import { z } from "zod";
./apps/api/src/routes/ai/ar-simulator-schemas.ts:4:import { VALIDATION_LIMITS } from "./ar-simulator-constants";
./apps/api/src/routes/ai/enhanced-prediction-endpoints.ts:4:import { zValidator } from "@hono/zod-validator";
./apps/api/src/routes/ai/enhanced-prediction-endpoints.ts:6:import { enhancedNoShowPredictionService } from "@neonpro/ai/services/enhanced-no-show-prediction-service";
./apps/api/src/routes/ai/enhanced-prediction-endpoints.ts:7:import { Hono } from "hono";
./apps/api/src/routes/ai/enhanced-prediction-endpoints.ts:8:import { cache } from "hono/cache";
./apps/api/src/routes/ai/enhanced-prediction-endpoints.ts:9:import { cors } from "hono/cors";
./apps/api/src/routes/ai/enhanced-prediction-endpoints.ts:10:import { logger } from "hono/logger";
./apps/api/src/routes/ai/enhanced-prediction-endpoints.ts:11:import { timing } from "hono/timing";
./apps/api/src/routes/ai/enhanced-prediction-endpoints.ts:12:import { z } from "zod";
./apps/api/src/routes/ai/batch-prediction-helpers-refactored.test.ts:15:  // In TS test runners, top-level exports are available for import by path,
./apps/api/src/routes/ai/batch-prediction-schemas.ts:4:import { z } from "zod";
./apps/api/src/routes/ai/batch-prediction-schemas.ts:5:import {
./apps/api/src/routes/ai/batch-prediction-services.ts:4:import { v4 as uuidv4 } from "uuid";
./apps/api/src/routes/ai/batch-prediction-services.ts:5:import type { z } from "zod";
./apps/api/src/routes/ai/batch-prediction-services.ts:6:import { ERROR_MESSAGES, JOB_STATUS, STATUS_CODES } from "./batch-prediction-constants";
./apps/api/src/routes/ai/batch-prediction-services.ts:7:import type {
./apps/api/src/routes/ai/ar-simulator-endpoints.ts:8:import { ARResultsSimulatorService } from "@/services/ar-simulator/ARResultsSimulatorService";
./apps/api/src/routes/ai/ar-simulator-endpoints.ts:9:import { Hono } from "hono";
./apps/api/src/routes/ai/ar-simulator-endpoints.ts:11:import { HTTP_STATUS } from "./ar-simulator-constants";
./apps/api/src/routes/ai/ar-simulator-endpoints.ts:12:import { getErrorMessage } from "./ar-simulator-helpers";
./apps/api/src/routes/ai/ar-simulator-endpoints.ts:13:import { CompareSimulationsSchema, CreateSimulationSchema } from "./ar-simulator-schemas";
./apps/api/src/routes/ai/_inactive_ar-simulator-schemas.ts:3:import { z } from "zod";
./apps/api/src/routes/ai/_inactive_ar-simulator-schemas.ts:4:import { VALIDATION_LIMITS } from "./ar-simulator-constants";
./apps/api/src/routes/ai/monitoring-endpoints.ts:1:import { createClient } from "@supabase/supabase-js";
./apps/api/src/routes/ai/monitoring-endpoints.ts:2:import { Hono } from "hono";
./apps/api/src/__tests__/auth/login.test.ts:13:import type { Context } from "hono";
./apps/api/src/__tests__/auth/login.test.ts:14:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/api/src/__tests__/routes/patients.test.ts:13:import type { Context } from "hono";
./apps/api/src/__tests__/routes/patients.test.ts:14:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/api/src/services/audit.service.ts:1:import { createClient } from "@supabase/supabase-js";
./apps/api/src/services/audit.service.ts:2:import { z } from "zod";
./apps/api/src/services/audit.service.ts:3:import type {
./apps/api/src/services/audit.service.ts:14:import {
./apps/api/src/services/audit.service.test.ts:2:import { jest } from "@jest/globals";
./apps/api/src/services/ar-simulator/ARResultsSimulatorService.ts:8:import { supabase } from "@/lib/supabase";
./apps/api/src/services/ar-simulator/_inactive_ARResultsSimulatorService.ts:8:import { supabase } from "@/lib/supabase";
./apps/api/src/services/AuditService.ts:1:import type { Request } from "express";
./apps/api/src/services/AuditService.ts:2:import { supabase } from "../lib/supabase";
./apps/api/src/services/behavioral-crm/PatientSegmentationService.ts:8:import { supabase } from "@/lib/supabase";
./apps/api/src/services/behavioral-crm/PatientSegmentationService.ts:9:import { BehavioralAnalysisService } from "./BehavioralAnalysisService";
./apps/api/src/services/behavioral-crm/PatientSegmentationService.ts:10:import type { PatientBehaviorProfile } from "./BehavioralAnalysisService";
./apps/api/src/services/behavioral-crm/BehavioralAnalysisService-refactored.ts:13:import { supabase } from "@/lib/supabase";
./apps/api/src/services/behavioral-crm/BehavioralAnalysisService-refactored.ts:14:import {
./apps/api/src/services/behavioral-crm/BehavioralAnalysisService-refactored.ts:23:import type {
./apps/api/src/services/behavioral-crm/StrategyGeneratorService.ts:8:import { supabase } from "@/lib/supabase";
./apps/api/src/services/behavioral-crm/StrategyGeneratorService.ts:9:import type { PatientBehaviorProfile } from "./BehavioralAnalysisService";
./apps/api/src/services/behavioral-crm/StrategyGeneratorService.ts:10:import type { PatientSegment } from "./PatientSegmentationService";
./apps/api/src/services/behavioral-crm/BehavioralAnalysisService.ts:8:import { supabase } from "@/lib/supabase";
./apps/api/src/lib/database.ts:7:import { createAdminClient, createClient, getSupabaseConfig } from "@neonpro/database/client";
./apps/api/src/lib/database.ts:8:import { performHealthCheck, quickHealthCheck } from "@neonpro/database/health-check";
./apps/api/src/lib/database.ts:9:import { quickRLSCheck, validateRLSPolicies } from "@neonpro/database/rls-validator";
./apps/api/src/lib/database.ts:10:import type { Database } from "@neonpro/database/types";
./apps/api/src/lib/supabase.ts:6:import type { Database } from "@neonpro/types";
./apps/api/src/lib/supabase.ts:7:import { createClient } from "@supabase/supabase-js";
./apps/web/vitest.config.ts:3:import path from "node:path";
./apps/web/vitest.config.ts:4:import { defineConfig } from "vitest/config";
./apps/web/playwright.config.ts:1:import { defineConfig, devices } from "@playwright/test";
./apps/web/tests/auth/login.test.tsx:6:import { cleanup, render, screen } from "@testing-library/react";
./apps/web/tests/auth/login.test.tsx:7:import userEvent from "@testing-library/user-event";
./apps/web/tests/auth/login.test.tsx:8:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/core/ui-components.test.tsx:6:import { cleanup, render, screen } from "@testing-library/react";
./apps/web/tests/core/ui-components.test.tsx:7:import { afterEach, describe, expect, it } from "vitest";
./apps/web/tests/setup/global-mocks.ts:6:import { vi } from "vitest";
./apps/web/tests/setup/global-mocks.ts:7:import type { MockedFunction } from "vitest";
./apps/web/tests/patient-management/patient-form.test.tsx:6:import { cleanup, render, screen } from "@testing-library/react";
./apps/web/tests/patient-management/patient-form.test.tsx:7:import userEvent from "@testing-library/user-event";
./apps/web/tests/patient-management/patient-form.test.tsx:8:import { afterEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/e2e/_inactive_ai-features-prediction.spec.ts:1:import { expect, test } from "@playwright/test";
./apps/web/tests/e2e/accessibility-compliance.spec.ts:1:import AxeBuilder from "@axe-core/playwright";
./apps/web/tests/e2e/accessibility-compliance.spec.ts:2:import { expect, test } from "@playwright/test";
./apps/web/tests/e2e/healthcare-auth-flow.spec.ts:1:import { expect, test } from "@playwright/test";
./apps/web/tests/e2e/ai-features-prediction.spec.ts:1:import { expect, test } from "@playwright/test";
./apps/web/tests/e2e/ai-chat-assistant.spec.ts:1:import { expect, test } from "@playwright/test";
./apps/web/tests/e2e/visual-regression.spec.ts:1:import { expect, test } from "@playwright/test";
./apps/web/tests/components/ui/button.test.tsx:14:import { Button } from "@neonpro/ui";
./apps/web/tests/components/ui/button.test.tsx:15:import { cleanup, render, screen } from "@testing-library/react";
./apps/web/tests/components/ui/button.test.tsx:16:import userEvent from "@testing-library/user-event";
./apps/web/tests/components/ui/button.test.tsx:17:import { afterEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/components/ui/card.test.tsx:14:import { Card, CardContent, CardHeader, CardTitle } from "@neonpro/ui";
./apps/web/tests/components/ui/card.test.tsx:15:import { cleanup, render, screen } from "@testing-library/react";
./apps/web/tests/components/ui/card.test.tsx:16:import userEvent from "@testing-library/user-event";
./apps/web/tests/components/ui/card.test.tsx:17:import { afterEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/components/ui/form.test.tsx:14:import {
./apps/web/tests/components/ui/form.test.tsx:23:import { cleanup, render, screen, waitFor } from "@testing-library/react";
./apps/web/tests/components/ui/form.test.tsx:24:import userEvent from "@testing-library/user-event";
./apps/web/tests/components/ui/form.test.tsx:25:import { afterEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/hooks/use-auth.test.tsx:8:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./apps/web/tests/hooks/use-auth.test.tsx:9:import { cleanup, renderHook } from "@testing-library/react";
./apps/web/tests/hooks/use-auth.test.tsx:10:import type { ReactNode } from "react";
./apps/web/tests/hooks/use-auth.test.tsx:11:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/hooks/use-auth.test.tsx:14:import { useAuth } from "../../hooks/enhanced/use-auth";
./apps/web/tests/hooks/use-patients.test.tsx:13:import {
./apps/web/tests/hooks/use-patients.test.tsx:19:import { cleanup, renderHook, waitFor } from "@testing-library/react";
./apps/web/tests/hooks/use-patients.test.tsx:20:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/hooks/use-patients.test.tsx:23:import { usePatientManagement } from "../../hooks/enhanced/use-patients";
./apps/web/tests/hooks/simple-auth.test.tsx:5:import { describe, expect, it, vi } from "vitest";
./apps/web/tests/hooks/simple-auth.test.tsx:39:import { apiClient, ApiHelpers } from "@neonpro/shared/api-client";
./apps/web/tests/external-chat-widget.test.ts:1:import { expect, test } from "@playwright/test";
./apps/web/tests/performance/ai-services.performance.test.ts:4:import { performance } from "node:perf_hooks";
./apps/web/tests/performance/ai-services.performance.test.ts:5:import { afterAll, beforeAll, describe, expect, it } from "vitest";
./apps/web/tests/debug-mock.test.ts:2:import { describe, expect, it } from "vitest";
./apps/web/tests/integration/integration-test-setup.ts:4:import { QueryClient } from "@tanstack/react-query";
./apps/web/tests/integration/integration-test-setup.ts:5:import { afterAll, afterEach, beforeAll, beforeEach } from "vitest";
./apps/web/tests/integration/ai-services.integration.test.tsx:4:import { createClient } from "@supabase/supabase-js";
./apps/web/tests/integration/ai-services.integration.test.tsx:5:import { afterAll, beforeAll, describe, expect, it } from "vitest";
./apps/web/tests/integration/ai-services.integration.test.tsx:6:import TestIntegrationSetup, {
./apps/web/tests/integration/ai-services-ecosystem.integration.test.tsx:1:import { createClient } from "@supabase/supabase-js";
./apps/web/tests/integration/ai-services-ecosystem.integration.test.tsx:2:import { afterAll, beforeAll, describe, expect, it } from "vitest";
./apps/web/tests/integration/api-client-integration.test.tsx:4:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./apps/web/tests/integration/api-client-integration.test.tsx:5:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/integration/real-time-updates.test.tsx:4:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./apps/web/tests/integration/real-time-updates.test.tsx:5:import { act, waitFor } from "@testing-library/react";
./apps/web/tests/integration/real-time-updates.test.tsx:6:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/integration/auth-flow.integration.test.tsx:4:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./apps/web/tests/integration/auth-flow.integration.test.tsx:5:import { act, fireEvent, render, screen, waitFor } from "@testing-library/react";
./apps/web/tests/integration/auth-flow.integration.test.tsx:6:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/integration/auth-flow.integration.test.tsx:7:import { getGlobalSupabaseMock, resetAllGlobalMocks } from "../../../../tools/tests/test-utils";
./apps/web/tests/integration/lgpd-compliance-flow.test.tsx:4:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./apps/web/tests/integration/lgpd-compliance-flow.test.tsx:5:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/integration/patient-crud.integration.test.tsx:4:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./apps/web/tests/integration/patient-crud.integration.test.tsx:5:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/integration/ai-database.integration.test.tsx:4:import { createClient } from "@supabase/supabase-js";
./apps/web/tests/integration/ai-database.integration.test.tsx:5:import { afterEach, beforeAll, describe, expect, it } from "vitest";
./apps/web/tests/integration/ai-database.integration.test.tsx:6:import { mockSupabaseClient } from "../setup/global-mocks";
./apps/web/tests/integration/ai-database.integration.test.tsx:7:import TestIntegrationSetup, {
./apps/web/tests/integration/emergency-access-protocol.test.tsx:4:import { QueryClient } from "@tanstack/react-query";
./apps/web/tests/integration/emergency-access-protocol.test.tsx:5:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/tests/integration/emergency-access-protocol.test.tsx:80:import { mockNotificationService } from "../setup/global-mocks";
./apps/web/tests/integration/database-integration.test.tsx:4:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./apps/web/tests/integration/database-integration.test.tsx:5:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/types/hooks.ts:1:import type { Database } from "./supabase";
./apps/web/contexts/auth-context.tsx:5:import { createClient } from "@/app/utils/supabase/client";
./apps/web/contexts/auth-context.tsx:6:import type { AuthError, Session, User } from "@supabase/supabase-js";
./apps/web/contexts/auth-context.tsx:7:import { createContext, useContext, useEffect, useState } from "react";
./apps/web/contexts/auth-context.tsx:8:import type { ReactNode } from "react";
./apps/web/contexts/auth-context-new.tsx:3:import { useRouter } from "next/navigation";
./apps/web/contexts/auth-context-new.tsx:4:import type { ReactNode } from "react";
./apps/web/contexts/auth-context-new.tsx:5:import { createContext, useContext, useEffect, useState } from "react";
./apps/web/components/PatientDashboard.tsx:3:import {
./apps/web/components/PatientDashboard.tsx:22:import {
./apps/web/components/PatientDashboard.tsx:34:import { useState } from "react";
./apps/web/components/auth/webauthn-manager.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/auth/webauthn-manager.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/auth/webauthn-manager.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/auth/webauthn-manager.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/auth/webauthn-manager.tsx:7:import { Bluetooth, Nfc, Plus, Shield, Smartphone, Trash2, Usb } from "lucide-react";
./apps/web/components/auth/webauthn-manager.tsx:8:import { useEffect, useState } from "react";
./apps/web/components/auth/signup-form.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/auth/signup-form.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/auth/signup-form.tsx:5:import { Checkbox } from "@/components/ui/checkbox";
./apps/web/components/auth/signup-form.tsx:6:import { Icons } from "@/components/ui/icons";
./apps/web/components/auth/signup-form.tsx:7:import { Input } from "@/components/ui/input";
./apps/web/components/auth/signup-form.tsx:8:import { Label } from "@/components/ui/label";
./apps/web/components/auth/signup-form.tsx:9:import { useAuth } from "@/contexts/auth-context";
./apps/web/components/auth/signup-form.tsx:10:import { toastHelpers } from "@/lib/toast-helpers";
./apps/web/components/auth/signup-form.tsx:11:import { AlertCircle, Check, Eye, EyeOff, UserPlus } from "lucide-react";
./apps/web/components/auth/signup-form.tsx:12:import Link from "next/link";
./apps/web/components/auth/signup-form.tsx:13:import { useRouter } from "next/navigation";
./apps/web/components/auth/signup-form.tsx:14:import { useState } from "react";
./apps/web/components/auth/signup-form.tsx:15:import { Separator } from "../ui/separator";
./apps/web/components/auth/signup-form.tsx:16:import { GoogleAuthButton } from "./google-auth-button";
./apps/web/components/auth/login-page.tsx:11:import { LoginForm } from "@/app/login/login-form";
./apps/web/components/auth/login-page.tsx:12:import { useSearch } from "@tanstack/react-router";
./apps/web/components/auth/login-page.tsx:13:import { Heart } from "lucide-react";
./apps/web/components/auth/login-page.tsx:14:import Link from "next/link";
./apps/web/components/auth/google-auth-button.tsx:3:import { useState } from "react";
./apps/web/components/auth/google-auth-button.tsx:4:import { supabase } from "../../lib/supabase";
./apps/web/components/auth/google-auth-button.tsx:5:import { Button } from "../ui/button";
./apps/web/components/PatientsList.tsx:3:import { Avatar, AvatarFallback } from "@/components/ui/avatar";
./apps/web/components/PatientsList.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/PatientsList.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/PatientsList.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/PatientsList.tsx:7:import { Skeleton } from "@/components/ui/skeleton";
./apps/web/components/PatientsList.tsx:8:import { ArrowRight, Users } from "lucide-react";
./apps/web/components/PatientsList.tsx:9:import { useRouter } from "next/navigation";
./apps/web/components/PatientsList.tsx:10:import { DASHBOARD_CONSTANTS, PATIENT_SKELETON_INDEXES } from "./constants";
./apps/web/components/pwa/HealthcareServiceWorker.tsx:9:import {
./apps/web/components/pwa/HealthcareServiceWorker.tsx:18:import { useEffect, useState } from "react";
./apps/web/components/pwa/HealthcareServiceWorker.tsx:19:import { Badge } from "../ui/badge";
./apps/web/components/pwa/HealthcareServiceWorker.tsx:20:import { Button } from "../ui/button";
./apps/web/components/pwa/HealthcareServiceWorker.tsx:21:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../ui/card";
./apps/web/components/pwa/HealthcareServiceWorker.tsx:22:import { Progress } from "../ui/progress";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:6:import { Checkbox } from "@/components/ui/checkbox";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:7:import {
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:15:import { Input } from "@/components/ui/input";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:16:import { Label } from "@/components/ui/label";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:17:import { Progress } from "@/components/ui/progress";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:18:import { Separator } from "@/components/ui/separator";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:19:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:20:import { Textarea } from "@/components/ui/textarea";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:21:import type { PatientConsent, TreatmentPlan } from "@/types/treatments";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:22:import { motion } from "framer-motion";
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:23:import {
./apps/web/components/treatments/CosmeticConsentBrazilian.tsx:33:import { useState } from "react";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:7:import {
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:14:import {
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:21:import { Input } from "@/components/ui/input";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:22:import { Label } from "@/components/ui/label";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:23:import { Progress } from "@/components/ui/progress";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:24:import {
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:31:import { Separator } from "@/components/ui/separator";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:32:import { Switch } from "@/components/ui/switch";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:33:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:34:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:35:import type { LGPDPhotoConsentStatus, TreatmentPhoto, TreatmentSession } from "@/types/treatments";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:36:import { motion } from "framer-motion";
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:37:import {
./apps/web/components/treatments/BeforeAfterSecureGallery.tsx:55:import { useState } from "react";
./apps/web/components/treatments/AestheticTreatmentPlan.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/treatments/AestheticTreatmentPlan.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/treatments/AestheticTreatmentPlan.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/treatments/AestheticTreatmentPlan.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/treatments/AestheticTreatmentPlan.tsx:7:import { Progress } from "@/components/ui/progress";
./apps/web/components/treatments/AestheticTreatmentPlan.tsx:8:import { Separator } from "@/components/ui/separator";
./apps/web/components/treatments/AestheticTreatmentPlan.tsx:9:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/treatments/AestheticTreatmentPlan.tsx:10:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/components/treatments/AestheticTreatmentPlan.tsx:11:import type {
./apps/web/components/treatments/AestheticTreatmentPlan.tsx:19:import { motion } from "framer-motion";
./apps/web/components/treatments/AestheticTreatmentPlan.tsx:20:import {
./apps/web/components/treatments/AestheticTreatmentPlan.tsx:33:import { useState } from "react";
./apps/web/components/PatientCard.tsx:1:import { Calendar, Mail, Phone, User } from "lucide-react";
./apps/web/components/PatientCard.tsx:2:import React from "react";
./apps/web/components/PatientCard.tsx:3:import type { CardComponentProps, Patient, PatientEventHandler } from "./types/healthcare";
./apps/web/components/PatientCard.tsx:4:import { Badge } from "./ui/badge";
./apps/web/components/PatientCard.tsx:5:import { Button } from "./ui/button";
./apps/web/components/PatientCard.tsx:6:import { Card, CardContent, CardHeader, CardTitle } from "./ui/card";
./apps/web/components/examples/external-chat-example.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/examples/external-chat-example.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/examples/external-chat-example.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/examples/external-chat-example.tsx:6:import { ExternalChatWidget } from "@/components/ui/external-chat-widget";
./apps/web/components/examples/external-chat-example.tsx:7:import { useChatHandoff } from "@/hooks/use-chat-handoff";
./apps/web/components/examples/external-chat-example.tsx:8:import { useCallback, useState } from "react";
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:4:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:5:import { Separator } from "@/components/ui/separator";
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:6:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:7:import { cn } from "@/lib/utils";
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:8:import {
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:23:import React from "react";
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:26:import type { InterventionAction } from "../no-show/intervention-dashboard";
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:27:import InterventionDashboard from "../no-show/intervention-dashboard";
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:28:import type {
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:34:import PerformanceMetrics from "../no-show/performance-metrics";
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:35:import type { RiskFactor } from "../no-show/risk-factor-breakdown";
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:36:import RiskFactorBreakdown from "../no-show/risk-factor-breakdown";
./apps/web/components/examples/anti-no-show-dashboard-example.tsx:37:import RiskIndicator, { RiskIndicatorList, RiskLevel } from "../no-show/risk-indicator";
./apps/web/components/examples/IntegrationExample.tsx:11:import {
./apps/web/components/examples/IntegrationExample.tsx:20:import type { CreateAppointment, CreatePatient, Login } from "@neonpro/shared/schemas";
./apps/web/components/examples/IntegrationExample.tsx:21:import { useState } from "react";
./apps/web/components/examples/ai-first-patterns-example.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/examples/ai-first-patterns-example.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/examples/ai-first-patterns-example.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/examples/ai-first-patterns-example.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/examples/ai-first-patterns-example.tsx:7:import { Separator } from "@/components/ui/separator";
./apps/web/components/examples/ai-first-patterns-example.tsx:8:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/examples/ai-first-patterns-example.tsx:9:import { cn } from "@/lib/utils";
./apps/web/components/examples/ai-first-patterns-example.tsx:10:import React, { useEffect, useState } from "react";
./apps/web/components/examples/ai-first-patterns-example.tsx:13:import {
./apps/web/components/examples/ai-first-patterns-example.tsx:19:import {
./apps/web/components/examples/ai-first-patterns-example.tsx:26:import {
./apps/web/components/examples/ai-first-patterns-example.tsx:36:import {
./apps/web/components/examples/ai-first-patterns-example.tsx:42:import {
./apps/web/components/examples/ai-assistant-dashboard-example.tsx:3:import { ComplianceMonitor } from "@/components/ui/compliance-monitor";
./apps/web/components/examples/ai-assistant-dashboard-example.tsx:4:import {
./apps/web/components/examples/ai-assistant-dashboard-example.tsx:9:import { PerformanceInsights } from "@/components/ui/performance-insights";
./apps/web/components/examples/ai-assistant-dashboard-example.tsx:10:import {
./apps/web/components/examples/ai-assistant-dashboard-example.tsx:16:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/examples/ai-assistant-dashboard-example.tsx:17:import React, { useState } from "react";
./apps/web/components/regulatory-documents/regulatory-documents-list.tsx:3:import { useRegulatoryDocuments } from "@/hooks/use-regulatory-documents";
./apps/web/components/regulatory-documents/regulatory-documents-list.tsx:4:import { useState } from "react";
./apps/web/components/settings-layout.tsx:11:import { Breadcrumbs } from "@/components/breadcrumbs";
./apps/web/components/settings-layout.tsx:12:import { MainNavigation } from "@/components/main-navigation";
./apps/web/components/settings-layout.tsx:13:import { useAuth } from "@/contexts/auth-context";
./apps/web/components/settings-layout.tsx:14:import { cn } from "@/lib/utils";
./apps/web/components/settings-layout.tsx:15:import { Link, Outlet, useLocation } from "@tanstack/react-router";
./apps/web/components/settings-layout.tsx:16:import { Bell, Building, CreditCard, Plug, Settings, Shield, User } from "lucide-react";
./apps/web/components/settings-layout.tsx:17:import type React from "react";
./apps/web/components/forms/loading-error-states.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/components/forms/loading-error-states.tsx:4:import { Card, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/forms/loading-error-states.tsx:5:import { Skeleton } from "@/components/ui/skeleton";
./apps/web/components/forms/loading-error-states.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/forms/loading-error-states.tsx:7:import {
./apps/web/components/forms/loading-error-states.tsx:15:import React from "react";
./apps/web/components/forms/form-field.tsx:3:import { Checkbox } from "@/components/ui/checkbox";
./apps/web/components/forms/form-field.tsx:4:import { Input } from "@/components/ui/input";
./apps/web/components/forms/form-field.tsx:5:import { Label } from "@/components/ui/label";
./apps/web/components/forms/form-field.tsx:6:import {
./apps/web/components/forms/form-field.tsx:13:import { Textarea } from "@/components/ui/textarea";
./apps/web/components/forms/form-field.tsx:14:import { cn } from "@/lib/utils";
./apps/web/components/forms/form-field.tsx:15:import { AlertTriangle, CheckCircle, Info } from "lucide-react";
./apps/web/components/forms/form-field.tsx:16:import React from "react";
./apps/web/components/forms/form-provider.tsx:3:import React, { createContext, useCallback, useContext, useState } from "react";
./apps/web/components/forms/form-provider.tsx:4:import type { ValidationSchema } from "./validation";
./apps/web/components/forms/form-provider.tsx:5:import { validateSchema, ValidationResult } from "./validation";
./apps/web/components/router-integration.tsx:11:import { useAuth } from "@/contexts/auth-context";
./apps/web/components/router-integration.tsx:12:import { router } from "@/lib/router";
./apps/web/components/router-integration.tsx:13:import { RouterProvider } from "@/providers/router-provider";
./apps/web/components/router-integration.tsx:14:import { useQueryClient } from "@tanstack/react-query";
./apps/web/components/router-integration.tsx:15:import React from "react";
./apps/web/components/layout/app-layout.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/components/layout/app-layout.tsx:4:import {
./apps/web/components/layout/app-layout.tsx:15:import {
./apps/web/components/layout/app-layout.tsx:26:import Link from "next/link";
./apps/web/components/layout/app-layout.tsx:27:import { usePathname } from "next/navigation";
./apps/web/components/layout/app-layout.tsx:28:import type * as React from "react";
./apps/web/components/layout/MainLayout.tsx:9:import {
./apps/web/components/layout/MainLayout.tsx:15:import { MobileBottomNavigation, MobileNavigation } from "@/components/mobile/MobileNavigation";
./apps/web/components/layout/MainLayout.tsx:16:import { Toaster } from "@/components/ui/toaster";
./apps/web/components/layout/MainLayout.tsx:17:import { useEffect, useState } from "react";
./apps/web/components/ClinicDashboard.tsx:3:import {
./apps/web/components/ClinicDashboard.tsx:22:import {
./apps/web/components/ClinicDashboard.tsx:35:import { useState } from "react";
./apps/web/components/root-layout.tsx:11:import { Toaster } from "@/components/ui/toaster";
./apps/web/components/root-layout.tsx:12:import { Outlet } from "@tanstack/react-router";
./apps/web/components/root-layout.tsx:13:import { TanStackRouterDevtools } from "@tanstack/router-devtools";
./apps/web/components/dynamic/animation-engine.tsx:3:import { LoadingWithMessage } from "@/components/ui/loading-skeleton";
./apps/web/components/dynamic/animation-engine.tsx:4:import dynamic from "next/dynamic";
./apps/web/components/dynamic/animation-engine.tsx:5:import { Suspense, useCallback, useState } from "react";
./apps/web/components/dynamic/image-processor.tsx:3:import { LoadingWithMessage } from "@/components/ui/loading-skeleton";
./apps/web/components/dynamic/image-processor.tsx:4:import dynamic from "next/dynamic";
./apps/web/components/dynamic/image-processor.tsx:5:import { Suspense, useCallback, useState } from "react";
./apps/web/components/dynamic/payment-processor.tsx:3:import { LoadingWithMessage } from "@/components/ui/loading-skeleton";
./apps/web/components/dynamic/payment-processor.tsx:4:import dynamic from "next/dynamic";
./apps/web/components/dynamic/payment-processor.tsx:5:import { Suspense, useCallback, useState } from "react";
./apps/web/components/dynamic/excel-processor.tsx:3:import { LoadingWithMessage } from "@/components/ui/loading-skeleton";
./apps/web/components/dynamic/excel-processor.tsx:4:import dynamic from "next/dynamic";
./apps/web/components/dynamic/excel-processor.tsx:5:import { Suspense, useCallback, useState } from "react";
./apps/web/components/dynamic/pdf-generator.tsx:3:import { LoadingWithMessage } from "@/components/ui/loading-skeleton";
./apps/web/components/dynamic/pdf-generator.tsx:4:import dynamic from "next/dynamic";
./apps/web/components/dynamic/pdf-generator.tsx:5:import { Suspense, useCallback, useState } from "react";
./apps/web/components/dynamic/pdf-generator.tsx:7:// Dynamic import for PDF generation libraries
./apps/web/components/dynamic/pdf-generator.tsx:16:// Dynamic import for jsPDF specifically
./apps/web/components/dynamic/pdf-generator.tsx:25:// Dynamic import for React-PDF
./apps/web/components/compliance/hooks.ts:6:import { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/components/compliance/hooks.ts:7:import { complianceService } from "./ComplianceService";
./apps/web/components/compliance/hooks.ts:8:import type {
./apps/web/components/compliance/ComplianceOrchestrator.ts:2:import { ComplianceService } from './ComplianceService';
./apps/web/components/compliance/ComplianceOrchestrator.ts:3:import { ComplianceTestRunner } from './testing/ComplianceTestRunner';
./apps/web/components/compliance/ComplianceOrchestrator.ts:4:import { ComplianceReportGenerator } from './reporting/ComplianceReportGenerator';
./apps/web/components/compliance/ComplianceOrchestrator.ts:5:import { ReportScheduler } from './reporting/ReportScheduler';
./apps/web/components/compliance/ComplianceOrchestrator.ts:6:import { ViolationDetector } from './workflows/ViolationDetector';
./apps/web/components/compliance/ComplianceOrchestrator.ts:7:import { RemediationEngine } from './workflows/RemediationEngine';
./apps/web/components/compliance/ComplianceOrchestrator.ts:8:import { WorkflowManager } from './workflows/WorkflowManager';
./apps/web/components/compliance/ComplianceOrchestrator.ts:9:import { AuditPreparationEngine } from './audit/AuditPreparationEngine';
./apps/web/components/compliance/ComplianceOrchestrator.ts:10:import { EvidenceCollector } from './audit/EvidenceCollector';
./apps/web/components/compliance/ComplianceOrchestrator.ts:11:import { FeedbackCollector, ImprovementEngine } from './feedback';
./apps/web/components/compliance/ComplianceOrchestrator.ts:12:import type { 
./apps/web/components/compliance/audit/EvidenceCollector.ts:6:import type { ComplianceFramework } from "../types";
./apps/web/components/compliance/audit/EvidenceCollector.ts:7:import type { AuditEvidence } from "./AuditPreparationEngine";
./apps/web/components/compliance/audit/EvidenceCollector.ts:8:import { AuditPreparation } from "./AuditPreparationEngine";
./apps/web/components/compliance/audit/AuditPreparationEngine.ts:6:import { complianceService } from "../ComplianceService";
./apps/web/components/compliance/audit/AuditPreparationEngine.ts:7:import type { ComplianceFramework } from "../types";
./apps/web/components/compliance/audit/AuditPreparationEngine.ts:8:import { ComplianceScore, ComplianceViolation } from "../types";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:7:import {
./apps/web/components/compliance/workflows/WorkflowManager.tsx:15:import { Input } from "@/components/ui/input";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:16:import { Label } from "@/components/ui/label";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:17:import { Progress } from "@/components/ui/progress";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:18:import {
./apps/web/components/compliance/workflows/WorkflowManager.tsx:25:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:26:import { cn } from "@/lib/utils";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:27:import {
./apps/web/components/compliance/workflows/WorkflowManager.tsx:51:import React, { useEffect, useState } from "react";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:52:import type { ComplianceFramework } from "../types";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:53:import { ViolationSeverity } from "../types";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:54:import type { RemediationWorkflow } from "./RemediationEngine";
./apps/web/components/compliance/workflows/WorkflowManager.tsx:55:import { RemediationStep, RemediationTimelineEvent } from "./RemediationEngine";
./apps/web/components/compliance/workflows/ViolationDetector.ts:6:import type { ComplianceFramework, ComplianceViolation, ViolationSeverity } from '../types';
./apps/web/components/compliance/workflows/ViolationDetector.ts:7:import { complianceService } from '../ComplianceService';
./apps/web/components/compliance/workflows/RemediationEngine.ts:6:import type { ComplianceFramework, ComplianceViolation, ViolationSeverity } from "../types";
./apps/web/components/compliance/workflows/RemediationEngine.ts:7:import { ViolationStatus } from "../types";
./apps/web/components/compliance/workflows/RemediationEngine.ts:8:import type { ViolationDetectionRule } from "./ViolationDetector";
./apps/web/components/compliance/automation/AutomationDashboard.tsx:9:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/components/compliance/automation/AutomationDashboard.tsx:10:import { Badge } from "@/components/ui/badge";
./apps/web/components/compliance/automation/AutomationDashboard.tsx:11:import { Button } from "@/components/ui/button";
./apps/web/components/compliance/automation/AutomationDashboard.tsx:12:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/compliance/automation/AutomationDashboard.tsx:13:import { Progress } from "@/components/ui/progress";
./apps/web/components/compliance/automation/AutomationDashboard.tsx:14:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/compliance/automation/AutomationDashboard.tsx:15:import {
./apps/web/components/compliance/automation/AutomationDashboard.tsx:32:import { useCallback, useState } from "react";
./apps/web/components/compliance/ComplianceSystemValidator.ts:2:import type { ComplianceOrchestrator } from "./ComplianceOrchestrator";
./apps/web/components/compliance/ComplianceSystemValidator.ts:3:import type { ComplianceFramework, SystemHealthCheck } from "./types";
./apps/web/components/compliance/feedback/FeedbackCollector.ts:2:import { createClient } from "@supabase/supabase-js";
./apps/web/components/compliance/feedback/FeedbackCollector.ts:3:import type {
./apps/web/components/compliance/feedback/ImprovementEngine.ts:2:import type { 
./apps/web/components/compliance/ComplianceDashboard.tsx:2:import { formatDistanceToNow } from "date-fns";
./apps/web/components/compliance/ComplianceDashboard.tsx:3:import React, { useEffect, useMemo, useState } from "react";
./apps/web/components/compliance/ComplianceDashboard.tsx:4:import { toast } from "sonner";
./apps/web/components/compliance/ComplianceDashboard.tsx:7:import { Badge } from "@/components/ui/badge";
./apps/web/components/compliance/ComplianceDashboard.tsx:8:import { Button } from "@/components/ui/button";
./apps/web/components/compliance/ComplianceDashboard.tsx:9:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/compliance/ComplianceDashboard.tsx:10:import { ScrollArea } from "@/components/ui/scroll-area";
./apps/web/components/compliance/ComplianceDashboard.tsx:11:import {
./apps/web/components/compliance/ComplianceDashboard.tsx:20:import {
./apps/web/components/compliance/ComplianceDashboard.tsx:40:import { ComplianceService } from "./ComplianceService";
./apps/web/components/compliance/ComplianceDashboard.tsx:41:import type {
./apps/web/components/compliance/testing/ANVISATester.ts:6:import type { ComplianceTestResult, ComplianceViolation } from "../types";
./apps/web/components/compliance/testing/CFMTester.ts:6:import type { ComplianceTestResult, ComplianceViolation } from "../types";
./apps/web/components/compliance/testing/WCAGTester.ts:6:import type { ComplianceTestResult, ComplianceViolation } from "../types";
./apps/web/components/compliance/testing/ComplianceTestRunner.ts:6:import type { ComplianceFramework, ComplianceViolation } from "../types";
./apps/web/components/compliance/testing/ComplianceTestRunner.ts:7:import { ComplianceCheckResult } from "../types";
./apps/web/components/compliance/testing/ComplianceTestRunner.ts:8:import { ANVISATester } from "./ANVISATester";
./apps/web/components/compliance/testing/ComplianceTestRunner.ts:9:import { CFMTester } from "./CFMTester";
./apps/web/components/compliance/testing/ComplianceTestRunner.ts:10:import { LGPDTester } from "./LGPDTester";
./apps/web/components/compliance/testing/ComplianceTestRunner.ts:11:import { WCAGTester } from "./WCAGTester";
./apps/web/components/compliance/testing/LGPDTester.ts:6:import type { ComplianceTestResult, ComplianceViolation } from "../types";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:6:import { Checkbox } from "@/components/ui/checkbox";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:7:import {
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:15:import { Input } from "@/components/ui/input";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:16:import { Label } from "@/components/ui/label";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:17:import {
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:24:import { Switch } from "@/components/ui/switch";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:25:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:26:import { cn } from "@/lib/utils";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:27:import {
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:44:import React, { useEffect, useState } from "react";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:45:import type { ComplianceFramework } from "../types";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:46:import type { GeneratedReport, ReportGenerationConfig } from "./ComplianceReportGenerator";
./apps/web/components/compliance/reporting/ComplianceReportManager.tsx:47:import type { ReportSchedule } from "./ReportScheduler";
./apps/web/components/compliance/reporting/ReportScheduler.ts:6:import { complianceService } from "../ComplianceService";
./apps/web/components/compliance/reporting/ReportScheduler.ts:7:import type { ComplianceFramework } from "../types";
./apps/web/components/compliance/reporting/ReportScheduler.ts:8:import type { GeneratedReport, ReportGenerationConfig } from "./ComplianceReportGenerator";
./apps/web/components/compliance/reporting/ReportScheduler.ts:9:import { ComplianceReportGenerator } from "./ComplianceReportGenerator";
./apps/web/components/compliance/reporting/ComplianceReportGenerator.ts:6:import type { 
./apps/web/components/compliance/reporting/ComplianceReportGenerator.ts:11:import {
./apps/web/components/compliance/ComplianceService.ts:6:import { createClient } from "@/lib/supabase/client";
./apps/web/components/compliance/ComplianceService.ts:7:import type {
./apps/web/components/voice-navigation/VoiceNavigationButton.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/voice-navigation/VoiceNavigationButton.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/voice-navigation/VoiceNavigationButton.tsx:5:import { Popover, PopoverContent, PopoverTrigger } from "@/components/ui/popover";
./apps/web/components/voice-navigation/VoiceNavigationButton.tsx:6:import { useVoiceNavigation } from "@/hooks/use-voice-navigation";
./apps/web/components/voice-navigation/VoiceNavigationButton.tsx:7:import { cn } from "@/lib/utils";
./apps/web/components/voice-navigation/VoiceNavigationButton.tsx:8:import { Activity, Command, Mic, MicOff, Volume2 } from "lucide-react";
./apps/web/components/voice-navigation/VoiceNavigationButton.tsx:9:import { useState } from "react";
./apps/web/components/OptimizedImage.tsx:8:import { cn } from "@/lib/utils";
./apps/web/components/OptimizedImage.tsx:9:import Image from "next/image";
./apps/web/components/OptimizedImage.tsx:10:import { useState } from "react";
./apps/web/components/dashboard/healthcare-dashboard.tsx:9:import { AuditEventType, AuditSeverity, UnifiedAuditService } from "@neonpro/security";
./apps/web/components/dashboard/healthcare-dashboard.tsx:11:import { useHealthcarePermissions } from "@neonpro/domain/hooks";
./apps/web/components/dashboard/healthcare-dashboard.tsx:12:import { validateHealthcareAccess } from "@neonpro/security/auth";
./apps/web/components/dashboard/healthcare-dashboard.tsx:14:import type { HealthcareDashboardData } from "@neonpro/types/healthcare";
./apps/web/components/dashboard/healthcare-dashboard.tsx:17:import {
./apps/web/components/dashboard/healthcare-dashboard.tsx:37:import { format } from "date-fns";
./apps/web/components/dashboard/healthcare-dashboard.tsx:38:import { ptBR } from "date-fns/locale";
./apps/web/components/dashboard/healthcare-dashboard.tsx:39:import { motion } from "framer-motion";
./apps/web/components/dashboard/healthcare-dashboard.tsx:41:import { Activity, AlertCircle, Calendar, Download, TrendingUp, Users } from "lucide-react";
./apps/web/components/dashboard/healthcare-dashboard.tsx:42:import { useCallback, useMemo, useState } from "react";
./apps/web/components/dashboard/ai-powered/RealTimeActivityDashboard.tsx:9:import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
./apps/web/components/dashboard/ai-powered/RealTimeActivityDashboard.tsx:10:import { Badge } from "@/components/ui/badge";
./apps/web/components/dashboard/ai-powered/RealTimeActivityDashboard.tsx:11:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/dashboard/ai-powered/RealTimeActivityDashboard.tsx:12:import { ScrollArea } from "@/components/ui/scroll-area";
./apps/web/components/dashboard/ai-powered/RealTimeActivityDashboard.tsx:13:import {
./apps/web/components/dashboard/ai-powered/RealTimeActivityDashboard.tsx:29:import { useEffect, useState } from "react";
./apps/web/components/dashboard/ai-powered/HealthMonitoringDashboard.tsx:9:import { Badge } from "@/components/ui/badge";
./apps/web/components/dashboard/ai-powered/HealthMonitoringDashboard.tsx:10:import { Button } from "@/components/ui/button";
./apps/web/components/dashboard/ai-powered/HealthMonitoringDashboard.tsx:11:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/dashboard/ai-powered/HealthMonitoringDashboard.tsx:12:import { Progress } from "@/components/ui/progress";
./apps/web/components/dashboard/ai-powered/HealthMonitoringDashboard.tsx:13:import {
./apps/web/components/dashboard/ai-powered/HealthMonitoringDashboard.tsx:25:import { useEffect, useState } from "react";
./apps/web/components/dashboard/ai-powered/PerformanceMetricsDashboard.tsx:9:import { Badge } from "@/components/ui/badge";
./apps/web/components/dashboard/ai-powered/PerformanceMetricsDashboard.tsx:10:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/dashboard/ai-powered/PerformanceMetricsDashboard.tsx:11:import { Progress } from "@/components/ui/progress";
./apps/web/components/dashboard/ai-powered/PerformanceMetricsDashboard.tsx:12:import {
./apps/web/components/dashboard/ai-powered/PerformanceMetricsDashboard.tsx:27:import { useEffect, useState } from "react";
./apps/web/components/dashboard/ai-powered/PerformanceMetricsDashboard.tsx:28:import {
./apps/web/components/dashboard/ai-powered/ComplianceStatusDashboard.tsx:9:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/components/dashboard/ai-powered/ComplianceStatusDashboard.tsx:10:import { Badge } from "@/components/ui/badge";
./apps/web/components/dashboard/ai-powered/ComplianceStatusDashboard.tsx:11:import { Button } from "@/components/ui/button";
./apps/web/components/dashboard/ai-powered/ComplianceStatusDashboard.tsx:12:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/dashboard/ai-powered/ComplianceStatusDashboard.tsx:13:import { Progress } from "@/components/ui/progress";
./apps/web/components/dashboard/ai-powered/ComplianceStatusDashboard.tsx:14:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/dashboard/ai-powered/ComplianceStatusDashboard.tsx:15:import {
./apps/web/components/dashboard/ai-powered/ComplianceStatusDashboard.tsx:26:import { useEffect, useState } from "react";
./apps/web/components/dashboard/ai-powered/AIAnalyticsDashboard.tsx:9:import { Badge } from "@/components/ui/badge";
./apps/web/components/dashboard/ai-powered/AIAnalyticsDashboard.tsx:10:import { Button } from "@/components/ui/button";
./apps/web/components/dashboard/ai-powered/AIAnalyticsDashboard.tsx:11:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/dashboard/ai-powered/AIAnalyticsDashboard.tsx:12:import { Progress } from "@/components/ui/progress";
./apps/web/components/dashboard/ai-powered/AIAnalyticsDashboard.tsx:13:import { Skeleton } from "@/components/ui/skeleton";
./apps/web/components/dashboard/ai-powered/AIAnalyticsDashboard.tsx:14:import {
./apps/web/components/dashboard/ai-powered/AIAnalyticsDashboard.tsx:26:import { useEffect, useState } from "react";
./apps/web/components/dashboard/SystemStatusSection.tsx:1:import { Badge } from "@/components/ui/badge";
./apps/web/components/dashboard/SystemStatusSection.tsx:2:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/dashboard/SystemStatusSection.tsx:3:import { Activity, Cloud, Database, Shield, Zap } from "lucide-react";
./apps/web/components/dashboard/dashboard-overview.tsx:11:import { Badge } from "@/components/ui/badge";
./apps/web/components/dashboard/dashboard-overview.tsx:12:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/dashboard/dashboard-overview.tsx:13:import { useAuth } from "@/contexts/auth-context";
./apps/web/components/dashboard/dashboard-overview.tsx:14:import { useSearch } from "@tanstack/react-router";
./apps/web/components/dashboard/dashboard-overview.tsx:15:import { Activity, Calendar, Clock, DollarSign, TrendingUp, Users } from "lucide-react";
./apps/web/components/dashboard/DashboardLayout.tsx:9:import { Badge } from "@/components/ui/badge";
./apps/web/components/dashboard/DashboardLayout.tsx:10:import { Button } from "@/components/ui/button";
./apps/web/components/dashboard/DashboardLayout.tsx:11:import { Card, CardContent } from "@/components/ui/card";
./apps/web/components/dashboard/DashboardLayout.tsx:12:import {
./apps/web/components/dashboard/DashboardLayout.tsx:19:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/dashboard/DashboardLayout.tsx:20:import {
./apps/web/components/dashboard/DashboardLayout.tsx:31:import { Suspense, useState } from "react";
./apps/web/components/dashboard/DashboardLayout.tsx:34:import { AIAnalyticsDashboard } from "./ai-powered/AIAnalyticsDashboard";
./apps/web/components/dashboard/DashboardLayout.tsx:35:import { ComplianceStatusDashboard } from "./ai-powered/ComplianceStatusDashboard";
./apps/web/components/dashboard/DashboardLayout.tsx:36:import { HealthMonitoringDashboard } from "./ai-powered/HealthMonitoringDashboard";
./apps/web/components/dashboard/DashboardLayout.tsx:37:import { PerformanceMetricsDashboard } from "./ai-powered/PerformanceMetricsDashboard";
./apps/web/components/dashboard/DashboardLayout.tsx:38:import { RealTimeActivityDashboard } from "./ai-powered/RealTimeActivityDashboard";
./apps/web/components/dashboard/DashboardLayout.tsx:39:import { DASHBOARD_REGISTRY } from "./ai-powered";
./apps/web/components/dashboard/DashboardLayout.tsx:40:import type { DashboardType } from "./ai-powered";
./apps/web/components/dashboard/QuickActionsSection.tsx:1:import { Button } from "@/components/ui/button";
./apps/web/components/dashboard/QuickActionsSection.tsx:2:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/dashboard/QuickActionsSection.tsx:3:import { Calendar, FileText, Phone, Plus, User } from "lucide-react";
./apps/web/components/appointments-layout.tsx:11:import { Breadcrumbs } from "@/components/breadcrumbs";
./apps/web/components/appointments-layout.tsx:12:import { MainNavigation } from "@/components/main-navigation";
./apps/web/components/appointments-layout.tsx:13:import { Badge } from "@/components/ui/badge";
./apps/web/components/appointments-layout.tsx:14:import { Button } from "@/components/ui/button";
./apps/web/components/appointments-layout.tsx:15:import { Outlet } from "@tanstack/react-router";
./apps/web/components/appointments-layout.tsx:16:import { Calendar, Clock, Filter, Plus } from "lucide-react";
./apps/web/components/breadcrumbs.tsx:11:import { cn } from "@/lib/utils";
./apps/web/components/breadcrumbs.tsx:12:import { Link, useLocation, useParams } from "@tanstack/react-router";
./apps/web/components/breadcrumbs.tsx:13:import { ChevronRight, Home } from "lucide-react";
./apps/web/components/breadcrumbs.tsx:14:import type React from "react";
./apps/web/components/lgpd/ConsentBanner.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/components/lgpd/ConsentBanner.tsx:4:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/lgpd/ConsentBanner.tsx:5:import { Checkbox } from "@/components/ui/checkbox";
./apps/web/components/lgpd/ConsentBanner.tsx:6:import {
./apps/web/components/lgpd/ConsentBanner.tsx:17:import { useEffect, useState } from "react";
./apps/web/components/lgpd/LGPDComplianceDashboard.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/lgpd/LGPDComplianceDashboard.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/lgpd/LGPDComplianceDashboard.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/lgpd/LGPDComplianceDashboard.tsx:6:import {
./apps/web/components/lgpd/LGPDComplianceDashboard.tsx:13:import { Progress } from "@/components/ui/progress";
./apps/web/components/lgpd/LGPDComplianceDashboard.tsx:14:import {
./apps/web/components/lgpd/LGPDComplianceDashboard.tsx:26:import { useEffect, useState } from "react";
./apps/web/components/AppointmentView.tsx:3:import {
./apps/web/components/AppointmentView.tsx:27:import {
./apps/web/components/AppointmentView.tsx:37:import { useCallback, useState } from "react";
./apps/web/components/AppointmentView.tsx:38:import type { Appointment, Professional } from "./types/healthcare";
./apps/web/components/accessibility/eye-tracking-interaction.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/accessibility/eye-tracking-interaction.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/accessibility/eye-tracking-interaction.tsx:5:import { Card, CardContent } from "@/components/ui/card";
./apps/web/components/accessibility/eye-tracking-interaction.tsx:6:import { Progress } from "@/components/ui/progress";
./apps/web/components/accessibility/eye-tracking-interaction.tsx:7:import { Slider } from "@/components/ui/slider";
./apps/web/components/accessibility/eye-tracking-interaction.tsx:8:import { Switch } from "@/components/ui/switch";
./apps/web/components/accessibility/eye-tracking-interaction.tsx:9:import {
./apps/web/components/accessibility/eye-tracking-interaction.tsx:19:import React, { createContext, useCallback, useContext, useEffect, useRef, useState } from "react";
./apps/web/components/accessibility/one-handed-operation-mode.tsx:3:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/components/accessibility/one-handed-operation-mode.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/accessibility/one-handed-operation-mode.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/accessibility/one-handed-operation-mode.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/accessibility/one-handed-operation-mode.tsx:7:import { Progress } from "@/components/ui/progress";
./apps/web/components/accessibility/one-handed-operation-mode.tsx:8:import {
./apps/web/components/accessibility/one-handed-operation-mode.tsx:15:import { Slider } from "@/components/ui/slider";
./apps/web/components/accessibility/one-handed-operation-mode.tsx:16:import { Switch } from "@/components/ui/switch";
./apps/web/components/accessibility/one-handed-operation-mode.tsx:17:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/accessibility/one-handed-operation-mode.tsx:18:import {
./apps/web/components/accessibility/one-handed-operation-mode.tsx:38:import React, {
./apps/web/components/accessibility/switch-navigation-controller.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/accessibility/switch-navigation-controller.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/accessibility/switch-navigation-controller.tsx:5:import { Card, CardContent } from "@/components/ui/card";
./apps/web/components/accessibility/switch-navigation-controller.tsx:6:import { Slider } from "@/components/ui/slider";
./apps/web/components/accessibility/switch-navigation-controller.tsx:7:import { Switch } from "@/components/ui/switch";
./apps/web/components/accessibility/switch-navigation-controller.tsx:8:import { AlertCircle, CheckCircle2, Pause, Play, RotateCcw, Settings, Zap } from "lucide-react";
./apps/web/components/accessibility/switch-navigation-controller.tsx:9:import React, { createContext, useCallback, useContext, useEffect, useRef, useState } from "react";
./apps/web/components/accessibility/tremor-friendly-controls.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/accessibility/tremor-friendly-controls.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/accessibility/tremor-friendly-controls.tsx:5:import { Card, CardContent } from "@/components/ui/card";
./apps/web/components/accessibility/tremor-friendly-controls.tsx:6:import { Progress } from "@/components/ui/progress";
./apps/web/components/accessibility/tremor-friendly-controls.tsx:7:import { Slider } from "@/components/ui/slider";
./apps/web/components/accessibility/tremor-friendly-controls.tsx:8:import { Switch } from "@/components/ui/switch";
./apps/web/components/accessibility/tremor-friendly-controls.tsx:9:import {
./apps/web/components/accessibility/tremor-friendly-controls.tsx:22:import React, {
./apps/web/components/accessibility/accessibility-integration-example.tsx:3:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/components/accessibility/accessibility-integration-example.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/accessibility/accessibility-integration-example.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/accessibility/accessibility-integration-example.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/accessibility/accessibility-integration-example.tsx:7:import { Progress } from "@/components/ui/progress";
./apps/web/components/accessibility/accessibility-integration-example.tsx:8:import {
./apps/web/components/accessibility/accessibility-integration-example.tsx:15:import { Slider } from "@/components/ui/slider";
./apps/web/components/accessibility/accessibility-integration-example.tsx:16:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/accessibility/accessibility-integration-example.tsx:17:import {
./apps/web/components/accessibility/accessibility-integration-example.tsx:44:import React, { useCallback, useEffect, useState } from "react";
./apps/web/components/accessibility/accessibility-integration-example.tsx:47:import {
./apps/web/components/accessibility/accessibility-integration-example.tsx:52:import {
./apps/web/components/accessibility/accessibility-integration-example.tsx:57:import {
./apps/web/components/accessibility/accessibility-integration-example.tsx:62:import {
./apps/web/components/accessibility/accessibility-integration-example.tsx:67:import {
./apps/web/components/accessibility/accessibility-integration-example.tsx:72:import {
./apps/web/components/accessibility/accessibility-integration-example.tsx:77:import {
./apps/web/components/accessibility/accessibility-integration-example.tsx:82:import {
./apps/web/components/accessibility/AccessibilityComponents.tsx:10:import { Badge } from "@/components/ui/badge";
./apps/web/components/accessibility/AccessibilityComponents.tsx:11:import { Button } from "@/components/ui/button";
./apps/web/components/accessibility/AccessibilityComponents.tsx:12:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/accessibility/AccessibilityComponents.tsx:13:import { Popover, PopoverContent, PopoverTrigger } from "@/components/ui/popover";
./apps/web/components/accessibility/AccessibilityComponents.tsx:14:import { Slider } from "@/components/ui/slider";
./apps/web/components/accessibility/AccessibilityComponents.tsx:15:import { Switch } from "@/components/ui/switch";
./apps/web/components/accessibility/AccessibilityComponents.tsx:16:import {
./apps/web/components/accessibility/AccessibilityComponents.tsx:34:import { useEffect, useRef, useState } from "react";
./apps/web/components/accessibility/voice-medical-controller.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/accessibility/voice-medical-controller.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/accessibility/voice-medical-controller.tsx:5:import { Card, CardContent } from "@/components/ui/card";
./apps/web/components/accessibility/voice-medical-controller.tsx:6:import { Progress } from "@/components/ui/progress";
./apps/web/components/accessibility/voice-medical-controller.tsx:7:import { Slider } from "@/components/ui/slider";
./apps/web/components/accessibility/voice-medical-controller.tsx:8:import { Switch } from "@/components/ui/switch";
./apps/web/components/accessibility/voice-medical-controller.tsx:9:import {
./apps/web/components/accessibility/voice-medical-controller.tsx:23:import React, { createContext, useCallback, useContext, useEffect, useRef, useState } from "react";
./apps/web/components/accessibility/medical-term.tsx:1:import { cn } from "@/lib/utils";
./apps/web/components/accessibility/medical-term.tsx:2:import type React from "react";
./apps/web/components/accessibility/medical-term.tsx:3:import { useEffect, useRef } from "react";
./apps/web/components/accessibility/assistive-technology-api.tsx:3:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/components/accessibility/assistive-technology-api.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/accessibility/assistive-technology-api.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/accessibility/assistive-technology-api.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/accessibility/assistive-technology-api.tsx:7:import { Progress } from "@/components/ui/progress";
./apps/web/components/accessibility/assistive-technology-api.tsx:8:import {
./apps/web/components/accessibility/assistive-technology-api.tsx:15:import { Slider } from "@/components/ui/slider";
./apps/web/components/accessibility/assistive-technology-api.tsx:16:import { Switch } from "@/components/ui/switch";
./apps/web/components/accessibility/assistive-technology-api.tsx:17:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/accessibility/assistive-technology-api.tsx:18:import {
./apps/web/components/accessibility/assistive-technology-api.tsx:51:import React, {
./apps/web/components/accessibility/assistive-technology-api.tsx:62:import { useCognitiveAccessibility } from "./cognitive-accessibility-helper";
./apps/web/components/accessibility/assistive-technology-api.tsx:63:import { useEyeTracking } from "./eye-tracking-interaction";
./apps/web/components/accessibility/assistive-technology-api.tsx:64:import { useOneHandedOperation } from "./one-handed-operation-mode";
./apps/web/components/accessibility/assistive-technology-api.tsx:65:import { useSwitchNavigation } from "./switch-navigation-controller";
./apps/web/components/accessibility/assistive-technology-api.tsx:66:import { useTremorFriendly } from "./tremor-friendly-controls";
./apps/web/components/accessibility/assistive-technology-api.tsx:67:import { useVisualAccessibility } from "./visual-accessibility-enhancer";
./apps/web/components/accessibility/assistive-technology-api.tsx:68:import { useVoiceMedical } from "./voice-medical-controller";
./apps/web/components/accessibility/visual-accessibility-enhancer.tsx:3:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/components/accessibility/visual-accessibility-enhancer.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/accessibility/visual-accessibility-enhancer.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/accessibility/visual-accessibility-enhancer.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/accessibility/visual-accessibility-enhancer.tsx:7:import { Progress } from "@/components/ui/progress";
./apps/web/components/accessibility/visual-accessibility-enhancer.tsx:8:import {
./apps/web/components/accessibility/visual-accessibility-enhancer.tsx:15:import { Slider } from "@/components/ui/slider";
./apps/web/components/accessibility/visual-accessibility-enhancer.tsx:16:import { Switch } from "@/components/ui/switch";
./apps/web/components/accessibility/visual-accessibility-enhancer.tsx:17:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/accessibility/visual-accessibility-enhancer.tsx:18:import {
./apps/web/components/accessibility/visual-accessibility-enhancer.tsx:49:import React, {
./apps/web/components/accessibility/cognitive-accessibility-helper.tsx:3:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/components/accessibility/cognitive-accessibility-helper.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/accessibility/cognitive-accessibility-helper.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/accessibility/cognitive-accessibility-helper.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/accessibility/cognitive-accessibility-helper.tsx:7:import { Progress } from "@/components/ui/progress";
./apps/web/components/accessibility/cognitive-accessibility-helper.tsx:8:import {
./apps/web/components/accessibility/cognitive-accessibility-helper.tsx:15:import { Slider } from "@/components/ui/slider";
./apps/web/components/accessibility/cognitive-accessibility-helper.tsx:16:import { Switch } from "@/components/ui/switch";
./apps/web/components/accessibility/cognitive-accessibility-helper.tsx:17:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/accessibility/cognitive-accessibility-helper.tsx:18:import {
./apps/web/components/accessibility/cognitive-accessibility-helper.tsx:47:import React, {
./apps/web/components/mobile/CriticalInfoDisplay.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/mobile/CriticalInfoDisplay.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/mobile/CriticalInfoDisplay.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/mobile/CriticalInfoDisplay.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/mobile/CriticalInfoDisplay.tsx:7:import {
./apps/web/components/mobile/CriticalInfoDisplay.tsx:18:import React from "react";
./apps/web/components/mobile/SessionSyncManager.tsx:17:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/mobile/SessionSyncManager.tsx:18:import { Badge } from "@/components/ui/badge";
./apps/web/components/mobile/SessionSyncManager.tsx:19:import { Button } from "@/components/ui/button";
./apps/web/components/mobile/SessionSyncManager.tsx:20:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/mobile/SessionSyncManager.tsx:21:import { Progress } from "@/components/ui/progress";
./apps/web/components/mobile/SessionSyncManager.tsx:22:import { Separator } from "@/components/ui/separator";
./apps/web/components/mobile/SessionSyncManager.tsx:23:import { cn } from "@/lib/utils";
./apps/web/components/mobile/SessionSyncManager.tsx:24:import { createClient } from "@/utils/supabase/client";
./apps/web/components/mobile/SessionSyncManager.tsx:25:import {
./apps/web/components/mobile/SessionSyncManager.tsx:43:import React, { useCallback, useEffect, useRef, useState } from "react";
./apps/web/components/mobile/QRHandoffGenerator.tsx:16:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/mobile/QRHandoffGenerator.tsx:17:import { Badge } from "@/components/ui/badge";
./apps/web/components/mobile/QRHandoffGenerator.tsx:18:import { Button } from "@/components/ui/button";
./apps/web/components/mobile/QRHandoffGenerator.tsx:19:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/mobile/QRHandoffGenerator.tsx:20:import { Progress } from "@/components/ui/progress";
./apps/web/components/mobile/QRHandoffGenerator.tsx:21:import { cn } from "@/lib/utils";
./apps/web/components/mobile/QRHandoffGenerator.tsx:22:import {
./apps/web/components/mobile/QRHandoffGenerator.tsx:35:import { QRCodeSVG } from "qrcode.react";
./apps/web/components/mobile/QRHandoffGenerator.tsx:36:import React, { useCallback, useEffect, useRef, useState } from "react";
./apps/web/components/mobile/MobileNavigation.tsx:9:import { Badge } from "@/components/ui/badge";
./apps/web/components/mobile/MobileNavigation.tsx:10:import { Button } from "@/components/ui/button";
./apps/web/components/mobile/MobileNavigation.tsx:11:import {
./apps/web/components/mobile/MobileNavigation.tsx:19:import { cn } from "@/lib/utils";
./apps/web/components/mobile/MobileNavigation.tsx:20:import {
./apps/web/components/mobile/MobileNavigation.tsx:34:import Link from "next/link";
./apps/web/components/mobile/MobileNavigation.tsx:35:import { usePathname } from "next/navigation";
./apps/web/components/mobile/MobileNavigation.tsx:36:import { useEffect, useState } from "react";
./apps/web/components/mobile/EmergencyModeInterface.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/mobile/EmergencyModeInterface.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/mobile/EmergencyModeInterface.tsx:5:import { Card, CardContent } from "@/components/ui/card";
./apps/web/components/mobile/EmergencyModeInterface.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/mobile/EmergencyModeInterface.tsx:7:import {
./apps/web/components/mobile/EmergencyModeInterface.tsx:20:import React, { useEffect, useState } from "react";
./apps/web/components/mobile/EmergencyModeInterface.tsx:23:import CriticalInfoDisplay from "./CriticalInfoDisplay";
./apps/web/components/mobile/EmergencyModeInterface.tsx:24:import EmergencyPatientLookup from "./EmergencyPatientLookup";
./apps/web/components/mobile/EmergencyModeInterface.tsx:25:import OfflineSyncManager from "./OfflineSyncManager";
./apps/web/components/mobile/OfflineQueueManager.tsx:18:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/mobile/OfflineQueueManager.tsx:19:import { Badge } from "@/components/ui/badge";
./apps/web/components/mobile/OfflineQueueManager.tsx:20:import { Button } from "@/components/ui/button";
./apps/web/components/mobile/OfflineQueueManager.tsx:21:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/mobile/OfflineQueueManager.tsx:22:import { Progress } from "@/components/ui/progress";
./apps/web/components/mobile/OfflineQueueManager.tsx:23:import { ScrollArea } from "@/components/ui/scroll-area";
./apps/web/components/mobile/OfflineQueueManager.tsx:24:import { Separator } from "@/components/ui/separator";
./apps/web/components/mobile/OfflineQueueManager.tsx:25:import { cn } from "@/lib/utils";
./apps/web/components/mobile/OfflineQueueManager.tsx:26:import {
./apps/web/components/mobile/OfflineQueueManager.tsx:45:import React, { useCallback, useEffect, useRef, useState } from "react";
./apps/web/components/mobile/OfflineSyncManager.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/mobile/OfflineSyncManager.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/mobile/OfflineSyncManager.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/mobile/OfflineSyncManager.tsx:6:import { Progress } from "@/components/ui/progress";
./apps/web/components/mobile/OfflineSyncManager.tsx:7:import { cn } from "@/lib/utils";
./apps/web/components/mobile/OfflineSyncManager.tsx:8:import {
./apps/web/components/mobile/OfflineSyncManager.tsx:22:import React, { useCallback, useEffect, useRef, useState } from "react";
./apps/web/components/mobile/ConflictResolver.tsx:18:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/mobile/ConflictResolver.tsx:19:import { Badge } from "@/components/ui/badge";
./apps/web/components/mobile/ConflictResolver.tsx:20:import { Button } from "@/components/ui/button";
./apps/web/components/mobile/ConflictResolver.tsx:21:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/mobile/ConflictResolver.tsx:22:import { ScrollArea } from "@/components/ui/scroll-area";
./apps/web/components/mobile/ConflictResolver.tsx:23:import { Separator } from "@/components/ui/separator";
./apps/web/components/mobile/ConflictResolver.tsx:24:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/mobile/ConflictResolver.tsx:25:import { cn } from "@/lib/utils";
./apps/web/components/mobile/ConflictResolver.tsx:26:import { createClient } from "@/utils/supabase/client";
./apps/web/components/mobile/ConflictResolver.tsx:27:import {
./apps/web/components/mobile/ConflictResolver.tsx:43:import React, { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/components/mobile/CrossDeviceDemo.tsx:17:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/mobile/CrossDeviceDemo.tsx:18:import { Badge } from "@/components/ui/badge";
./apps/web/components/mobile/CrossDeviceDemo.tsx:19:import { Button } from "@/components/ui/button";
./apps/web/components/mobile/CrossDeviceDemo.tsx:20:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/mobile/CrossDeviceDemo.tsx:21:import { Separator } from "@/components/ui/separator";
./apps/web/components/mobile/CrossDeviceDemo.tsx:22:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/mobile/CrossDeviceDemo.tsx:23:import { cn } from "@/lib/utils";
./apps/web/components/mobile/CrossDeviceDemo.tsx:24:import {
./apps/web/components/mobile/CrossDeviceDemo.tsx:41:import React, { useCallback, useEffect, useState } from "react";
./apps/web/components/mobile/CrossDeviceDemo.tsx:44:import ConflictResolver from "./ConflictResolver";
./apps/web/components/mobile/CrossDeviceDemo.tsx:45:import OfflineQueueManager from "./OfflineQueueManager";
./apps/web/components/mobile/CrossDeviceDemo.tsx:46:import QRHandoffGenerator from "./QRHandoffGenerator";
./apps/web/components/mobile/CrossDeviceDemo.tsx:47:import SessionSyncManager from "./SessionSyncManager";
./apps/web/components/mobile/EmergencyPatientLookup.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/components/mobile/EmergencyPatientLookup.tsx:4:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/mobile/EmergencyPatientLookup.tsx:5:import { Input } from "@/components/ui/input";
./apps/web/components/mobile/EmergencyPatientLookup.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/mobile/EmergencyPatientLookup.tsx:7:import { AlertTriangle, Clock, Heart, Phone, Search, User } from "lucide-react";
./apps/web/components/mobile/EmergencyPatientLookup.tsx:8:import React, { useCallback, useEffect, useState } from "react";
./apps/web/components/mobile/MobileDashboardCards.tsx:10:import { Badge } from "@/components/ui/badge";
./apps/web/components/mobile/MobileDashboardCards.tsx:11:import { Button } from "@/components/ui/button";
./apps/web/components/mobile/MobileDashboardCards.tsx:12:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/mobile/MobileDashboardCards.tsx:13:import { Progress } from "@/components/ui/progress";
./apps/web/components/mobile/MobileDashboardCards.tsx:14:import { cn } from "@/lib/utils";
./apps/web/components/mobile/MobileDashboardCards.tsx:15:import {
./apps/web/components/mobile/MobileDashboardCards.tsx:28:import { useCallback, useEffect, useState } from "react";
./apps/web/components/ui/progress.tsx:3:import * as ProgressPrimitive from "@radix-ui/react-progress";
./apps/web/components/ui/progress.tsx:4:import type * as React from "react";
./apps/web/components/ui/progress.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/ui/router-loading.tsx:11:import { Heart } from "lucide-react";
./apps/web/components/ui/button.tsx:1:import { Slot } from "@radix-ui/react-slot";
./apps/web/components/ui/button.tsx:2:import { cva } from "class-variance-authority";
./apps/web/components/ui/button.tsx:3:import type { VariantProps } from "class-variance-authority";
./apps/web/components/ui/button.tsx:4:import type * as React from "react";
./apps/web/components/ui/button.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/ui/badge.tsx:1:import { Slot } from "@radix-ui/react-slot";
./apps/web/components/ui/badge.tsx:2:import { cva } from "class-variance-authority";
./apps/web/components/ui/badge.tsx:3:import type { VariantProps } from "class-variance-authority";
./apps/web/components/ui/badge.tsx:4:import type * as React from "react";
./apps/web/components/ui/badge.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/ui/scroll-area.tsx:3:import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area";
./apps/web/components/ui/scroll-area.tsx:4:import type * as React from "react";
./apps/web/components/ui/scroll-area.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/ui/confidence-indicator.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/ui/confidence-indicator.tsx:4:import { cn } from "@/lib/utils";
./apps/web/components/ui/table.tsx:3:import type * as React from "react";
./apps/web/components/ui/table.tsx:5:import { cn } from "@/lib/utils";
./apps/web/components/ui/toast.tsx:3:import { cn } from "@/lib/utils";
./apps/web/components/ui/toast.tsx:4:import * as ToastPrimitives from "@radix-ui/react-toast";
./apps/web/components/ui/toast.tsx:5:import { cva } from "class-variance-authority";
./apps/web/components/ui/toast.tsx:6:import type { VariantProps } from "class-variance-authority";
./apps/web/components/ui/toast.tsx:7:import { X } from "lucide-react";
./apps/web/components/ui/toast.tsx:8:import * as React from "react";
./apps/web/components/ui/not-found.tsx:11:import { Button } from "@/components/ui/button";
./apps/web/components/ui/not-found.tsx:12:import { Link } from "@tanstack/react-router";
./apps/web/components/ui/not-found.tsx:13:import { ArrowLeft, Home, Search } from "lucide-react";
./apps/web/components/ui/sheet.tsx:3:import * as SheetPrimitive from "@radix-ui/react-dialog";
./apps/web/components/ui/sheet.tsx:4:import { XIcon } from "lucide-react";
./apps/web/components/ui/sheet.tsx:5:import type * as React from "react";
./apps/web/components/ui/sheet.tsx:7:import { cn } from "@/lib/utils";
./apps/web/components/ui/card.tsx:1:import { cva } from "class-variance-authority";
./apps/web/components/ui/card.tsx:2:import type { VariantProps } from "class-variance-authority";
./apps/web/components/ui/card.tsx:3:import type * as React from "react";
./apps/web/components/ui/card.tsx:5:import { cn } from "@/lib/utils";
./apps/web/components/ui/results-visualization.tsx:3:import React, { useState, useMemo } from 'react';
./apps/web/components/ui/results-visualization.tsx:4:import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
./apps/web/components/ui/results-visualization.tsx:5:import { Button } from '@/components/ui/button';
./apps/web/components/ui/results-visualization.tsx:6:import { Badge } from '@/components/ui/badge';
./apps/web/components/ui/results-visualization.tsx:7:import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
./apps/web/components/ui/results-visualization.tsx:8:import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
./apps/web/components/ui/results-visualization.tsx:9:import { cn } from '@/lib/utils';
./apps/web/components/ui/results-visualization.tsx:10:import { 
./apps/web/components/ui/sidebar.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/components/ui/sidebar.tsx:4:import { Input } from "@/components/ui/input";
./apps/web/components/ui/sidebar.tsx:5:import { Separator } from "@/components/ui/separator";
./apps/web/components/ui/sidebar.tsx:6:import {
./apps/web/components/ui/sidebar.tsx:13:import { Skeleton } from "@/components/ui/skeleton";
./apps/web/components/ui/sidebar.tsx:14:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/components/ui/sidebar.tsx:15:import { useIsMobile } from "@/hooks/use-mobile";
./apps/web/components/ui/sidebar.tsx:16:import { cn } from "@/lib/utils";
./apps/web/components/ui/sidebar.tsx:17:import { Slot } from "@radix-ui/react-slot";
./apps/web/components/ui/sidebar.tsx:18:import { cva } from "class-variance-authority";
./apps/web/components/ui/sidebar.tsx:19:import type { VariantProps } from "class-variance-authority";
./apps/web/components/ui/sidebar.tsx:20:import { PanelLeftIcon } from "lucide-react";
./apps/web/components/ui/sidebar.tsx:21:import * as React from "react";
./apps/web/components/ui/dropdown-menu.tsx:3:import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu";
./apps/web/components/ui/dropdown-menu.tsx:4:import { CheckIcon, ChevronRightIcon, CircleIcon } from "lucide-react";
./apps/web/components/ui/dropdown-menu.tsx:5:import type * as React from "react";
./apps/web/components/ui/dropdown-menu.tsx:7:import { cn } from "@/lib/utils";
./apps/web/components/ui/use-toast.ts:3:import type { ToastActionElement, ToastProps } from "@/components/ui/toast";
./apps/web/components/ui/use-toast.ts:4:import * as React from "react";
./apps/web/components/ui/tooltip.tsx:3:import * as TooltipPrimitive from "@radix-ui/react-tooltip";
./apps/web/components/ui/tooltip.tsx:4:import * as React from "react";
./apps/web/components/ui/tooltip.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/ui/confidence-patterns.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/ui/confidence-patterns.tsx:4:import { Progress } from "@/components/ui/progress";
./apps/web/components/ui/confidence-patterns.tsx:5:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/components/ui/confidence-patterns.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/ui/confidence-patterns.tsx:7:import React from "react";
./apps/web/components/ui/loading-skeleton.tsx:3:import { Skeleton } from "@/components/ui/skeleton";
./apps/web/components/ui/loading-skeleton.tsx:4:import { cn } from "@/lib/utils";
./apps/web/components/ui/context-switching.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/ui/context-switching.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/ui/context-switching.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/ui/context-switching.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/ui/context-switching.tsx:7:import { Progress } from "@/components/ui/progress";
./apps/web/components/ui/context-switching.tsx:8:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/components/ui/context-switching.tsx:9:import { cn } from "@/lib/utils";
./apps/web/components/ui/context-switching.tsx:10:import React, { createContext, useCallback, useContext, useEffect, useState } from "react";
./apps/web/components/ui/separator.tsx:3:import * as SeparatorPrimitive from "@radix-ui/react-separator";
./apps/web/components/ui/separator.tsx:4:import type * as React from "react";
./apps/web/components/ui/separator.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/ui/label.tsx:3:import * as LabelPrimitive from "@radix-ui/react-label";
./apps/web/components/ui/label.tsx:4:import type * as React from "react";
./apps/web/components/ui/label.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/ui/message-renderer.tsx:3:import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
./apps/web/components/ui/message-renderer.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/ui/message-renderer.tsx:5:import { cn } from "@/lib/utils";
./apps/web/components/ui/message-renderer.tsx:6:import { AlertTriangle, Bot, CheckCircle, User } from "lucide-react";
./apps/web/components/ui/message-renderer.tsx:7:import { useMemo } from "react";
./apps/web/components/ui/message-renderer.tsx:8:import { ConfidenceIndicator } from "./confidence-indicator";
./apps/web/components/ui/switch.tsx:3:import * as SwitchPrimitive from "@radix-ui/react-switch";
./apps/web/components/ui/switch.tsx:4:import type * as React from "react";
./apps/web/components/ui/switch.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/ui/input.tsx:1:import { cn } from "@/lib/utils";
./apps/web/components/ui/input.tsx:2:import type * as React from "react";
./apps/web/components/ui/input.tsx:3:import { forwardRef, useEffect, useRef, useState } from "react";
./apps/web/components/ui/dialog.tsx:3:import * as DialogPrimitive from "@radix-ui/react-dialog";
./apps/web/components/ui/dialog.tsx:4:import { XIcon } from "lucide-react";
./apps/web/components/ui/dialog.tsx:5:import type * as React from "react";
./apps/web/components/ui/dialog.tsx:7:import { cn } from "@/lib/utils";
./apps/web/components/ui/skeleton.tsx:1:import { cn } from "@/lib/utils";
./apps/web/components/ui/performance-insights.tsx:3:import React, { useState, useEffect, useMemo } from 'react';
./apps/web/components/ui/performance-insights.tsx:4:import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
./apps/web/components/ui/performance-insights.tsx:5:import { Badge } from '@/components/ui/badge';
./apps/web/components/ui/performance-insights.tsx:6:import { Button } from '@/components/ui/button';
./apps/web/components/ui/performance-insights.tsx:7:import { Progress } from '@/components/ui/progress';
./apps/web/components/ui/performance-insights.tsx:8:import { cn } from '@/lib/utils';
./apps/web/components/ui/performance-insights.tsx:9:import { 
./apps/web/components/ui/checkbox.tsx:3:import * as CheckboxPrimitive from "@radix-ui/react-checkbox";
./apps/web/components/ui/checkbox.tsx:4:import { CheckIcon } from "lucide-react";
./apps/web/components/ui/checkbox.tsx:5:import type * as React from "react";
./apps/web/components/ui/checkbox.tsx:7:import { cn } from "@/lib/utils";
./apps/web/components/ui/TestComponent.tsx:2:import React from "react";
./apps/web/components/ui/external-chat-widget.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/ui/external-chat-widget.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/ui/external-chat-widget.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/ui/external-chat-widget.tsx:6:import { Input } from "@/components/ui/input";
./apps/web/components/ui/external-chat-widget.tsx:7:import { ScrollArea } from "@/components/ui/scroll-area";
./apps/web/components/ui/external-chat-widget.tsx:8:import { Separator } from "@/components/ui/separator";
./apps/web/components/ui/external-chat-widget.tsx:9:import { cn } from "@/lib/utils";
./apps/web/components/ui/external-chat-widget.tsx:10:import {
./apps/web/components/ui/external-chat-widget.tsx:22:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/components/ui/external-chat-widget.tsx:24:import { ConfidenceIndicator } from "./confidence-indicator";
./apps/web/components/ui/external-chat-widget.tsx:25:import { MessageRenderer } from "./message-renderer";
./apps/web/components/ui/external-chat-widget.tsx:26:import type { Message } from "./message-renderer";
./apps/web/components/ui/external-chat-widget.tsx:27:import { VoiceInput } from "./voice-input";
./apps/web/components/ui/tabs.tsx:3:import * as TabsPrimitive from "@radix-ui/react-tabs";
./apps/web/components/ui/tabs.tsx:4:import type * as React from "react";
./apps/web/components/ui/tabs.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/ui/empty-state.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/components/ui/empty-state.tsx:4:import { Card, CardContent } from "@/components/ui/card";
./apps/web/components/ui/empty-state.tsx:5:import { cn } from "@/lib/utils";
./apps/web/components/ui/empty-state.tsx:6:import type React from "react";
./apps/web/components/ui/voice-interaction-ux.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/ui/voice-interaction-ux.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/ui/voice-interaction-ux.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/ui/voice-interaction-ux.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/ui/voice-interaction-ux.tsx:7:import { Progress } from "@/components/ui/progress";
./apps/web/components/ui/voice-interaction-ux.tsx:8:import { Switch } from "@/components/ui/switch";
./apps/web/components/ui/voice-interaction-ux.tsx:9:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/components/ui/voice-interaction-ux.tsx:10:import { cn } from "@/lib/utils";
./apps/web/components/ui/voice-interaction-ux.tsx:11:import React, { useCallback, useEffect, useRef, useState } from "react";
./apps/web/components/ui/voice-interaction-ux.tsx:12:import { ConfidencePatterns } from "./confidence-patterns";
./apps/web/components/ui/loading-spinner.tsx:3:import { cn } from "@/lib/utils";
./apps/web/components/ui/internal-assistant-panel.tsx:3:import React, { useState, useCallback, useRef, useEffect } from 'react';
./apps/web/components/ui/internal-assistant-panel.tsx:4:import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
./apps/web/components/ui/internal-assistant-panel.tsx:5:import { Button } from '@/components/ui/button';
./apps/web/components/ui/internal-assistant-panel.tsx:6:import { Input } from '@/components/ui/input';
./apps/web/components/ui/internal-assistant-panel.tsx:7:import { Badge } from '@/components/ui/badge';
./apps/web/components/ui/internal-assistant-panel.tsx:8:import { ScrollArea } from '@/components/ui/scroll-area';
./apps/web/components/ui/internal-assistant-panel.tsx:9:import { Separator } from '@/components/ui/separator';
./apps/web/components/ui/internal-assistant-panel.tsx:10:import { Textarea } from '@/components/ui/textarea';
./apps/web/components/ui/internal-assistant-panel.tsx:11:import { cn } from '@/lib/utils';
./apps/web/components/ui/internal-assistant-panel.tsx:12:import {
./apps/web/components/ui/textarea.tsx:1:import type * as React from "react";
./apps/web/components/ui/textarea.tsx:3:import { cn } from "@/lib/utils";
./apps/web/components/ui/router-error.tsx:11:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/components/ui/router-error.tsx:12:import { Button } from "@/components/ui/button";
./apps/web/components/ui/router-error.tsx:13:import { Link } from "@tanstack/react-router";
./apps/web/components/ui/router-error.tsx:14:import { AlertTriangle, Home, RefreshCw } from "lucide-react";
./apps/web/components/ui/toaster.tsx:3:import {
./apps/web/components/ui/toaster.tsx:11:import { useToast } from "@/components/ui/use-toast";
./apps/web/components/ui/voice-input.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/components/ui/voice-input.tsx:4:import { cn } from "@/lib/utils";
./apps/web/components/ui/voice-input.tsx:5:import { Mic, MicOff, Square } from "lucide-react";
./apps/web/components/ui/voice-input.tsx:6:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/components/ui/voice-input.tsx:7:import { ConfidenceIndicator } from "./confidence-indicator";
./apps/web/components/ui/ai-loading-states.tsx:3:import { Progress } from "@/components/ui/progress";
./apps/web/components/ui/ai-loading-states.tsx:4:import { Skeleton } from "@/components/ui/skeleton";
./apps/web/components/ui/ai-loading-states.tsx:5:import { cn } from "@/lib/utils";
./apps/web/components/ui/ai-loading-states.tsx:6:import React, { useEffect, useState } from "react";
./apps/web/components/ui/select.tsx:3:import * as SelectPrimitive from "@radix-ui/react-select";
./apps/web/components/ui/select.tsx:4:import { CheckIcon, ChevronDownIcon, ChevronUpIcon } from "lucide-react";
./apps/web/components/ui/select.tsx:5:import type * as React from "react";
./apps/web/components/ui/select.tsx:7:import { cn } from "@/lib/utils";
./apps/web/components/ui/compliance-monitor.tsx:3:import React, { useState, useEffect, useMemo } from 'react';
./apps/web/components/ui/compliance-monitor.tsx:4:import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
./apps/web/components/ui/compliance-monitor.tsx:5:import { Badge } from '@/components/ui/badge';
./apps/web/components/ui/compliance-monitor.tsx:6:import { Button } from '@/components/ui/button';
./apps/web/components/ui/compliance-monitor.tsx:7:import { Progress } from '@/components/ui/progress';
./apps/web/components/ui/compliance-monitor.tsx:8:import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';
./apps/web/components/ui/compliance-monitor.tsx:9:import { cn } from '@/lib/utils';
./apps/web/components/ui/compliance-monitor.tsx:10:import { 
./apps/web/components/ui/icons.tsx:1:import { Loader2 } from "lucide-react";
./apps/web/components/ui/error-boundary.tsx:1:import type React from "react";
./apps/web/components/ui/error-boundary.tsx:2:import { Component } from "react";
./apps/web/components/ui/error-boundary.tsx:3:import type { ErrorInfo, ReactNode } from "react";
./apps/web/components/ui/avatar.tsx:3:import * as AvatarPrimitive from "@radix-ui/react-avatar";
./apps/web/components/ui/avatar.tsx:4:import type * as React from "react";
./apps/web/components/ui/avatar.tsx:6:import { cn } from "@/lib/utils";
./apps/web/components/ui/error-boundary-ai.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/components/ui/error-boundary-ai.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/components/ui/error-boundary-ai.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/components/ui/error-boundary-ai.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/ui/error-boundary-ai.tsx:7:import { cn } from "@/lib/utils";
./apps/web/components/ui/error-boundary-ai.tsx:8:import type { ErrorInfo, ReactNode } from "react";
./apps/web/components/ui/error-boundary-ai.tsx:9:import React, { Component } from "react";
./apps/web/components/ui/alert.tsx:1:import { cva } from "class-variance-authority";
./apps/web/components/ui/alert.tsx:2:import type { VariantProps } from "class-variance-authority";
./apps/web/components/ui/alert.tsx:3:import type * as React from "react";
./apps/web/components/ui/alert.tsx:5:import { cn } from "@/lib/utils";
./apps/web/components/patient/RealTimeAvailability.tsx:9:import { Badge } from "@/components/ui/badge";
./apps/web/components/patient/RealTimeAvailability.tsx:10:import { Button } from "@/components/ui/button";
./apps/web/components/patient/RealTimeAvailability.tsx:11:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/patient/RealTimeAvailability.tsx:12:import { Progress } from "@/components/ui/progress";
./apps/web/components/patient/RealTimeAvailability.tsx:13:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/patient/RealTimeAvailability.tsx:14:import {
./apps/web/components/patient/RealTimeAvailability.tsx:27:import { useCallback, useState } from "react";
./apps/web/components/StandardModal.tsx:1:import { X } from "lucide-react";
./apps/web/components/StandardModal.tsx:2:import React from "react";
./apps/web/components/StandardModal.tsx:3:import type { ModalComponentProps } from "./types/healthcare";
./apps/web/components/StandardModal.tsx:4:import { Button } from "./ui/button";
./apps/web/components/StandardModal.tsx:5:import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "./ui/dialog";
./apps/web/components/theme-provider.tsx:3:import { ThemeProvider as NextThemesProvider } from "next-themes";
./apps/web/components/theme-provider.tsx:4:import type { ThemeProviderProps } from "next-themes/dist/types";
./apps/web/components/patients-layout.tsx:11:import { Breadcrumbs } from "@/components/breadcrumbs";
./apps/web/components/patients-layout.tsx:12:import { MainNavigation } from "@/components/main-navigation";
./apps/web/components/patients-layout.tsx:13:import { Button } from "@/components/ui/button";
./apps/web/components/patients-layout.tsx:14:import { Outlet } from "@tanstack/react-router";
./apps/web/components/patients-layout.tsx:15:import { Filter, Plus, Search } from "lucide-react";
./apps/web/components/no-show/risk-indicator.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/no-show/risk-indicator.tsx:4:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/components/no-show/risk-indicator.tsx:5:import { cn } from "@/lib/utils";
./apps/web/components/no-show/risk-indicator.tsx:6:import { AlertTriangle, CheckCircle, Clock, XCircle } from "lucide-react";
./apps/web/components/no-show/risk-indicator.tsx:7:import React from "react";
./apps/web/components/no-show/risk-factor-breakdown.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/no-show/risk-factor-breakdown.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/no-show/risk-factor-breakdown.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/no-show/risk-factor-breakdown.tsx:6:import { Collapsible, CollapsibleContent, CollapsibleTrigger } from "@/components/ui/collapsible";
./apps/web/components/no-show/risk-factor-breakdown.tsx:7:import { Progress } from "@/components/ui/progress";
./apps/web/components/no-show/risk-factor-breakdown.tsx:8:import { Separator } from "@/components/ui/separator";
./apps/web/components/no-show/risk-factor-breakdown.tsx:9:import { cn } from "@/lib/utils";
./apps/web/components/no-show/risk-factor-breakdown.tsx:10:import {
./apps/web/components/no-show/risk-factor-breakdown.tsx:24:import React from "react";
./apps/web/components/no-show/intervention-dashboard.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/no-show/intervention-dashboard.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/no-show/intervention-dashboard.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/no-show/intervention-dashboard.tsx:6:import { Checkbox } from "@/components/ui/checkbox";
./apps/web/components/no-show/intervention-dashboard.tsx:7:import {
./apps/web/components/no-show/intervention-dashboard.tsx:14:import { Input } from "@/components/ui/input";
./apps/web/components/no-show/intervention-dashboard.tsx:15:import {
./apps/web/components/no-show/intervention-dashboard.tsx:22:import { Separator } from "@/components/ui/separator";
./apps/web/components/no-show/intervention-dashboard.tsx:23:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/no-show/intervention-dashboard.tsx:24:import { Textarea } from "@/components/ui/textarea";
./apps/web/components/no-show/intervention-dashboard.tsx:25:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/components/no-show/intervention-dashboard.tsx:26:import { cn } from "@/lib/utils";
./apps/web/components/no-show/intervention-dashboard.tsx:27:import {
./apps/web/components/no-show/intervention-dashboard.tsx:47:import React from "react";
./apps/web/components/no-show/performance-metrics.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/components/no-show/performance-metrics.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/components/no-show/performance-metrics.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/components/no-show/performance-metrics.tsx:6:import { Progress } from "@/components/ui/progress";
./apps/web/components/no-show/performance-metrics.tsx:7:import {
./apps/web/components/no-show/performance-metrics.tsx:14:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/components/no-show/performance-metrics.tsx:15:import { cn } from "@/lib/utils";
./apps/web/components/no-show/performance-metrics.tsx:16:import {
./apps/web/components/no-show/performance-metrics.tsx:33:import React from "react";
./apps/web/components/dashboard-layout.tsx:11:import { Breadcrumbs } from "@/components/breadcrumbs";
./apps/web/components/dashboard-layout.tsx:12:import { MainNavigation } from "@/components/main-navigation";
./apps/web/components/dashboard-layout.tsx:13:import { useAuth } from "@/contexts/auth-context";
./apps/web/components/dashboard-layout.tsx:14:import { Outlet } from "@tanstack/react-router";
./apps/web/components/optimized/optimized-image.tsx:3:import { cn } from "@/lib/utils";
./apps/web/components/optimized/optimized-image.tsx:4:import Image from "next/image";
./apps/web/components/optimized/optimized-image.tsx:5:import { useCallback, useState } from "react";
./apps/web/components/optimized/font-optimizer.tsx:3:import { Inter, JetBrains_Mono, Lora } from "next/font/google";
./apps/web/components/optimized/font-optimizer.tsx:4:import localFont from "next/font/local";
./apps/web/components/optimized/font-optimizer.tsx:5:import { useEffect, useRef, useState } from "react";
./apps/web/components/responsive/GestureNavigation.tsx:1:import { cn } from "@/lib/utils";
./apps/web/components/responsive/GestureNavigation.tsx:2:import { ChevronLeft, ChevronRight, Menu, X } from "lucide-react";
./apps/web/components/responsive/GestureNavigation.tsx:3:import React, { useCallback, useEffect, useRef, useState } from "react";
./apps/web/components/responsive/GestureNavigation.tsx:4:import { useResponsive } from "./ResponsiveLayout";
./apps/web/components/responsive/ResponsiveLayout.tsx:1:import { useMediaQuery } from "@/hooks/use-media-query";
./apps/web/components/responsive/ResponsiveLayout.tsx:2:import React, { createContext, useContext, useEffect, useState } from "react";
./apps/web/components/responsive/TouchOptimizedControls.tsx:1:import { Button } from "@/components/ui/button";
./apps/web/components/responsive/TouchOptimizedControls.tsx:2:import { Input } from "@/components/ui/input";
./apps/web/components/responsive/TouchOptimizedControls.tsx:3:import { Label } from "@/components/ui/label";
./apps/web/components/responsive/TouchOptimizedControls.tsx:4:import { Textarea } from "@/components/ui/textarea";
./apps/web/components/responsive/TouchOptimizedControls.tsx:5:import { cn } from "@/lib/utils";
./apps/web/components/responsive/TouchOptimizedControls.tsx:6:import React, { forwardRef, useState } from "react";
./apps/web/components/responsive/TouchOptimizedControls.tsx:7:import { useResponsive } from "./ResponsiveLayout";
./apps/web/components/main-navigation.tsx:11:import { Badge } from "@/components/ui/badge";
./apps/web/components/main-navigation.tsx:12:import { Button } from "@/components/ui/button";
./apps/web/components/main-navigation.tsx:13:import { useAuth } from "@/contexts/auth-context";
./apps/web/components/main-navigation.tsx:14:import { cn } from "@/lib/utils";
./apps/web/components/main-navigation.tsx:15:import { Link, useLocation } from "@tanstack/react-router";
./apps/web/components/main-navigation.tsx:16:import {
./apps/web/components/main-navigation.tsx:27:import React from "react";
./apps/web/components/patient-portal/education-center.tsx:3:import {
./apps/web/components/patient-portal/education-center.tsx:18:import { cn } from "@neonpro/utils";
./apps/web/components/patient-portal/education-center.tsx:19:import {
./apps/web/components/patient-portal/education-center.tsx:44:import { useState } from "react";
./apps/web/components/patient-portal/treatment-journey.tsx:3:import {
./apps/web/components/patient-portal/treatment-journey.tsx:17:import { cn } from "@neonpro/utils";
./apps/web/components/patient-portal/treatment-journey.tsx:18:import {
./apps/web/components/patient-portal/treatment-journey.tsx:33:import { useState } from "react";
./apps/web/components/patient-portal/appointment-management.tsx:3:import {
./apps/web/components/patient-portal/appointment-management.tsx:17:import { cn } from "@neonpro/utils";
./apps/web/components/patient-portal/appointment-management.tsx:18:import {
./apps/web/components/patient-portal/appointment-management.tsx:35:import { useState } from "react";
./apps/web/components/patient-portal/payment-billing.tsx:3:import {
./apps/web/components/patient-portal/payment-billing.tsx:18:import { cn } from "@neonpro/utils";
./apps/web/components/patient-portal/payment-billing.tsx:19:import {
./apps/web/components/patient-portal/payment-billing.tsx:42:import { useState } from "react";
./apps/web/components/patient-portal/communication-hub.tsx:3:import {
./apps/web/components/patient-portal/communication-hub.tsx:17:import { cn } from "@neonpro/utils";
./apps/web/components/patient-portal/communication-hub.tsx:18:import {
./apps/web/components/patient-portal/communication-hub.tsx:39:import { useState } from "react";
./apps/web/tailwind.config.ts:1:import type { Config } from "tailwindcss";
./apps/web/tailwind.config.ts:2:import tailwindcssAnimate from "tailwindcss-animate";
./apps/web/middleware.ts:1:import { createServerClient } from "@supabase/ssr";
./apps/web/middleware.ts:2:import type { CookieOptions } from "@supabase/ssr";
./apps/web/middleware.ts:3:import { NextResponse } from "next/server";
./apps/web/middleware.ts:4:import type { NextRequest } from "next/server";
./apps/web/hooks/useServices.ts:3:import { createClient } from "@/app/utils/supabase/client";
./apps/web/hooks/useServices.ts:4:import type { Database } from "@/types/supabase";
./apps/web/hooks/useServices.ts:5:import { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/hooks/useTreatments.ts:3:import { createClient } from "@/app/utils/supabase/client";
./apps/web/hooks/useTreatments.ts:4:import type {
./apps/web/hooks/useTreatments.ts:13:import { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/hooks/use-ai-scheduling.ts:3:import type { SchedulingResult } from "@neonpro/core-services/scheduling";
./apps/web/hooks/use-ai-scheduling.ts:4:import { useCallback, useState } from "react";
./apps/web/hooks/useComplianceAutomation.ts:1:import { supabase } from "@/lib/supabase";
./apps/web/hooks/useComplianceAutomation.ts:2:import { useCallback, useEffect, useState } from "react";
./apps/web/hooks/use-voice-navigation.ts:6:import { voiceNavigationService } from "@/lib/services/voice-navigation-service";
./apps/web/hooks/use-voice-navigation.ts:7:import type { VoiceCommand, VoiceNavigationState } from "@/lib/services/voice-navigation-service";
./apps/web/hooks/use-voice-navigation.ts:8:import { useCallback, useEffect, useState } from "react";
./apps/web/hooks/useAppointments.ts:3:import { createClient } from "@/app/utils/supabase/client";
./apps/web/hooks/useAppointments.ts:4:import type { Database } from "@/types/supabase";
./apps/web/hooks/useAppointments.ts:5:import { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/hooks/enhanced/use-appointments.ts:10:import { apiClient, ApiHelpers } from "@neonpro/shared/api-client";
./apps/web/hooks/enhanced/use-appointments.ts:11:import type { ApiResponse } from "@neonpro/shared/api-client";
./apps/web/hooks/enhanced/use-appointments.ts:13:import {
./apps/web/hooks/enhanced/use-appointments.ts:27:import type {
./apps/web/hooks/enhanced/use-appointments.ts:40:import { useCallback, useMemo } from "react";
./apps/web/hooks/enhanced/use-appointments.ts:42:import {
./apps/web/hooks/enhanced/use-auth.ts:10:import { apiClient, ApiHelpers } from "@neonpro/shared/api-client";
./apps/web/hooks/enhanced/use-auth.ts:11:import type { ApiResponse } from "@neonpro/shared/api-client";
./apps/web/hooks/enhanced/use-auth.ts:12:import {
./apps/web/hooks/enhanced/use-auth.ts:26:import type {
./apps/web/hooks/enhanced/use-auth.ts:44:import { useRouter } from "next/navigation";
./apps/web/hooks/enhanced/use-auth.ts:45:import { useCallback, useMemo } from "react";
./apps/web/hooks/enhanced/use-auth.ts:47:import { QueryKeys, useHealthcareQueryUtils } from "@/lib/query/query-utils";
./apps/web/hooks/enhanced/use-patients.ts:10:import { apiClient, ApiHelpers } from "@neonpro/shared/api-client";
./apps/web/hooks/enhanced/use-patients.ts:11:import type { ApiResponse } from "@neonpro/shared/api-client";
./apps/web/hooks/enhanced/use-patients.ts:13:import {
./apps/web/hooks/enhanced/use-patients.ts:23:import type {
./apps/web/hooks/enhanced/use-patients.ts:35:import { useCallback, useMemo } from "react";
./apps/web/hooks/enhanced/use-patients.ts:37:import {
./apps/web/hooks/useSystemHealth.ts:3:import { createClient } from "@/lib/supabase/client";
./apps/web/hooks/useSystemHealth.ts:4:import type {
./apps/web/hooks/useSystemHealth.ts:10:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/hooks/usePermissions.ts:1:import { useAuth } from "./useAuth";
./apps/web/hooks/use-chat-handoff.ts:3:import { useCallback, useRef, useState } from "react";
./apps/web/hooks/use-no-show-prediction.ts:3:import type { RiskLevel } from "@/components/no-show/risk-indicator";
./apps/web/hooks/use-no-show-prediction.ts:4:import { useCallback, useEffect, useState } from "react";
./apps/web/hooks/useDashboardMetrics.ts:3:import { createClient } from "@/app/utils/supabase/client";
./apps/web/hooks/useDashboardMetrics.ts:4:import { useEffect, useState } from "react";
./apps/web/hooks/use-regulatory-documents.ts:1:import { useEffect, useState } from "react";
./apps/web/hooks/useFinancialData.ts:3:import { createClient } from "@/app/utils/supabase/client";
./apps/web/hooks/useFinancialData.ts:4:import type { Database } from "@/types/supabase";
./apps/web/hooks/useFinancialData.ts:5:import { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/hooks/api/useAppointments.ts:9:import { apiClient } from "@neonpro/shared/api-client";
./apps/web/hooks/api/useAppointments.ts:10:import type {
./apps/web/hooks/api/useAppointments.ts:21:import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
./apps/web/hooks/api/usePatients.ts:9:import { apiClient } from "@neonpro/shared/api-client";
./apps/web/hooks/api/usePatients.ts:10:import type {
./apps/web/hooks/api/usePatients.ts:17:import { useInfiniteQuery, useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
./apps/web/hooks/api/useAuth.ts:9:import { apiClient } from "@neonpro/shared/api-client";
./apps/web/hooks/api/useAuth.ts:10:import type {
./apps/web/hooks/api/useAuth.ts:20:import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
./apps/web/hooks/usePatients.ts:3:import { createClient } from "@/app/utils/supabase/client";
./apps/web/hooks/usePatients.ts:4:import type { Database } from "@/types/supabase";
./apps/web/hooks/usePatients.ts:5:import { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/hooks/use-mobile.ts:1:import * as React from "react";
./apps/web/hooks/use-mobile.ts:28:import { useChat } from "@ai-sdk/react";
./apps/web/hooks/use-mobile.ts:29:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/hooks/use-mobile.ts:30:import type {
./apps/web/hooks/useStaffMembers.ts:3:import { createClient } from "@/app/utils/supabase/client";
./apps/web/hooks/useStaffMembers.ts:4:import type { Database } from "@/types/supabase";
./apps/web/hooks/useStaffMembers.ts:5:import { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/hooks/use-patients.ts:1:// Re-export from usePatients.ts for kebab-case import compatibility
./apps/web/hooks/useAIAnalytics.ts:3:import { createClient } from "@/lib/supabase/client";
./apps/web/hooks/useAIAnalytics.ts:4:import type {
./apps/web/hooks/useAIAnalytics.ts:10:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/hooks/useAuth.ts:1:import { useEffect, useState } from "react";
./apps/web/hooks/useAuth.ts:4:import { supabase } from "../lib/supabase";
./apps/web/app/auth/callback/route.ts:1:import { NextResponse } from "next/server";
./apps/web/app/auth/callback/route.ts:2:import type { NextRequest } from "next/server";
./apps/web/app/auth/callback/route.ts:3:import { supabase } from "../../../lib/supabase";
./apps/web/app/auth/popup-callback/route.ts:1:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/auth/popup-callback/route.ts:2:import { NextResponse } from "next/server";
./apps/web/app/auth/popup-callback/route.ts:3:import type { NextRequest } from "next/server";
./apps/web/app/auth/confirm/route.ts:7:import { createServerClient } from "@supabase/ssr";
./apps/web/app/auth/confirm/route.ts:8:import type { EmailOtpType } from "@supabase/supabase-js";
./apps/web/app/auth/confirm/route.ts:9:import { cookies } from "next/headers";
./apps/web/app/auth/confirm/route.ts:10:import { NextResponse } from "next/server";
./apps/web/app/auth/confirm/route.ts:11:import type { NextRequest } from "next/server";
./apps/web/app/team/components/performance-analytics.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/app/team/components/performance-analytics.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/app/team/components/performance-analytics.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/team/components/performance-analytics.tsx:6:import { Progress } from "@/components/ui/progress";
./apps/web/app/team/components/performance-analytics.tsx:7:import {
./apps/web/app/team/components/performance-analytics.tsx:14:import {
./apps/web/app/team/components/performance-analytics.tsx:22:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/team/components/performance-analytics.tsx:23:import {
./apps/web/app/team/components/performance-analytics.tsx:41:import { useMemo, useState } from "react";
./apps/web/app/team/components/staff-management.tsx:3:import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
./apps/web/app/team/components/staff-management.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/app/team/components/staff-management.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/team/components/staff-management.tsx:6:import {
./apps/web/app/team/components/staff-management.tsx:14:import { Input } from "@/components/ui/input";
./apps/web/app/team/components/staff-management.tsx:15:import { Progress } from "@/components/ui/progress";
./apps/web/app/team/components/staff-management.tsx:16:import {
./apps/web/app/team/components/staff-management.tsx:23:import {
./apps/web/app/team/components/staff-management.tsx:31:import {
./apps/web/app/team/components/staff-management.tsx:50:import { useMemo, useState } from "react";
./apps/web/app/team/components/staff-management.tsx:52:import type {
./apps/web/app/team/components/resource-allocation.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/app/team/components/resource-allocation.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/app/team/components/resource-allocation.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/team/components/resource-allocation.tsx:6:import {
./apps/web/app/team/components/resource-allocation.tsx:14:import { Input } from "@/components/ui/input";
./apps/web/app/team/components/resource-allocation.tsx:15:import { Progress } from "@/components/ui/progress";
./apps/web/app/team/components/resource-allocation.tsx:16:import {
./apps/web/app/team/components/resource-allocation.tsx:23:import {
./apps/web/app/team/components/resource-allocation.tsx:31:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/team/components/resource-allocation.tsx:32:import {
./apps/web/app/team/components/resource-allocation.tsx:53:import { useMemo, useState } from "react";
./apps/web/app/team/components/resource-allocation.tsx:55:import type { EquipmentStatus, FacilityRoom, MedicalEquipment } from "@/types/team-coordination"; // Mock medical equipment data with ANVISA compliance
./apps/web/app/team/components/communication-hub.tsx:3:import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
./apps/web/app/team/components/communication-hub.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/app/team/components/communication-hub.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/app/team/components/communication-hub.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/team/components/communication-hub.tsx:7:import {
./apps/web/app/team/components/communication-hub.tsx:15:import {
./apps/web/app/team/components/communication-hub.tsx:23:import { Input } from "@/components/ui/input";
./apps/web/app/team/components/communication-hub.tsx:24:import {
./apps/web/app/team/components/communication-hub.tsx:31:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/team/components/communication-hub.tsx:32:import { Textarea } from "@/components/ui/textarea";
./apps/web/app/team/components/communication-hub.tsx:33:import {
./apps/web/app/team/components/communication-hub.tsx:54:import { useMemo, useState } from "react";
./apps/web/app/team/components/communication-hub.tsx:56:import type { CommunicationPriority, PatientHandoff, TeamMessage } from "@/types/team-coordination"; // Mock team messages with Brazilian healthcare context
./apps/web/app/team/components/scheduling-system.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/app/team/components/scheduling-system.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/app/team/components/scheduling-system.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/app/team/components/scheduling-system.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/team/components/scheduling-system.tsx:7:import {
./apps/web/app/team/components/scheduling-system.tsx:14:import { AlertTriangle, Plus, RefreshCw, Save, Shield, X } from "lucide-react";
./apps/web/app/team/components/scheduling-system.tsx:15:import { useMemo, useState } from "react";
./apps/web/app/team/components/scheduling-system.tsx:17:import type { Schedule, ScheduleConflict } from "@/types/team-coordination"; // Mock schedule data for the current week
./apps/web/app/team/page.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/app/team/page.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/app/team/page.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/app/team/page.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/team/page.tsx:7:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/team/page.tsx:8:import {
./apps/web/app/team/page.tsx:20:import { useState } from "react";
./apps/web/app/team/page.tsx:22:import { CommunicationHub } from "./components/communication-hub";
./apps/web/app/team/page.tsx:23:import { PerformanceAnalytics } from "./components/performance-analytics";
./apps/web/app/team/page.tsx:24:import { ResourceAllocation } from "./components/resource-allocation";
./apps/web/app/team/page.tsx:25:import { SchedulingSystem } from "./components/scheduling-system";
./apps/web/app/team/page.tsx:27:import { StaffManagement } from "./components/staff-management";
./apps/web/app/loading.tsx:1:import { Loader2 } from "lucide-react";
./apps/web/app/test-ai-chat/page.tsx:8:import { ChatProvider } from "@neonpro/ai/chat";
./apps/web/app/test-ai-chat/page.tsx:9:import type { ChatInterface as ChatInterfaceType } from "@neonpro/types/ai-chat";
./apps/web/app/test-ai-chat/page.tsx:10:import { ChatInterface } from "@neonpro/ui";
./apps/web/app/test-ai-chat/page.tsx:11:import { Badge } from "@neonpro/ui/components/Badge";
./apps/web/app/test-ai-chat/page.tsx:12:import { Button } from "@neonpro/ui/components/Button";
./apps/web/app/test-ai-chat/page.tsx:13:import { Card } from "@neonpro/ui/components/Card";
./apps/web/app/test-ai-chat/page.tsx:14:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@neonpro/ui/components/Tabs";
./apps/web/app/test-ai-chat/page.tsx:15:import { Bot, Globe, Lock, UserCheck, Users, Zap } from "lucide-react";
./apps/web/app/test-ai-chat/page.tsx:16:import { useState } from "react";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:3:import { Alert as AlertUI, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:7:import {
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:15:import { Input } from "@/components/ui/input";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:16:import {
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:23:import { Separator } from "@/components/ui/separator";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:24:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:25:import { useStaffAlerts } from "@/hooks/use-staff-alerts";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:26:import { cn } from "@/lib/utils";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:27:import type { StaffAlert } from "@/types/staff-alerts";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:28:import {
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:35:import { formatDistanceToNow } from "date-fns";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:36:import { ptBR } from "date-fns/locale";
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:37:import {
./apps/web/app/components/staff-alerts/staff-alert-dashboard.tsx:54:import { useEffect, useState } from "react";
./apps/web/app/components/auth/mfa-status.tsx:3:import { useMFA } from "@neonpro/domain/hooks/auth/use-mfa";
./apps/web/app/components/auth/mfa-status.tsx:4:import { MfaMethod } from "@neonpro/security/auth/mfa-service";
./apps/web/app/components/auth/mfa-status.tsx:5:import { useState } from "react";
./apps/web/app/components/auth/mfa-setup.tsx:3:import { useMFA } from "@neonpro/domain/hooks/auth/use-mfa";
./apps/web/app/components/auth/mfa-setup.tsx:4:import { MfaMethod } from "@neonpro/security/auth/mfa-service";
./apps/web/app/components/auth/mfa-setup.tsx:5:import { QRCodeSVG } from "qrcode.react";
./apps/web/app/components/auth/mfa-setup.tsx:6:import { useState } from "react";
./apps/web/app/components/neonpro-healthcare-dashboard.tsx:3:import {
./apps/web/app/components/neonpro-healthcare-dashboard.tsx:39:import { format } from "date-fns/format";
./apps/web/app/components/neonpro-healthcare-dashboard.tsx:40:import { ptBR } from "date-fns/locale";
./apps/web/app/components/neonpro-healthcare-dashboard.tsx:41:import { AnimatePresence, motion } from "framer-motion";
./apps/web/app/components/neonpro-healthcare-dashboard.tsx:43:import {
./apps/web/app/components/neonpro-healthcare-dashboard.tsx:71:import type React from "react";
./apps/web/app/components/neonpro-healthcare-dashboard.tsx:72:import { createContext, useCallback, useEffect, useMemo, useReducer, useState } from "react";
./apps/web/app/components/monitoring/ai-services-dashboard.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/app/components/monitoring/ai-services-dashboard.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/app/components/monitoring/ai-services-dashboard.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/app/components/monitoring/ai-services-dashboard.tsx:6:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/components/monitoring/ai-services-dashboard.tsx:7:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/components/monitoring/ai-services-dashboard.tsx:8:import {
./apps/web/app/components/monitoring/ai-services-dashboard.tsx:20:import type React from "react";
./apps/web/app/components/monitoring/ai-services-dashboard.tsx:21:import { useCallback, useEffect, useState } from "react";
./apps/web/app/components/monitoring/ai-services-dashboard.tsx:22:import {
./apps/web/app/components/sidebar.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/app/components/sidebar.tsx:4:import { ScrollArea } from "@/components/ui/scroll-area";
./apps/web/app/components/sidebar.tsx:5:import { cn } from "@/lib/utils";
./apps/web/app/components/sidebar.tsx:6:import {
./apps/web/app/components/sidebar.tsx:17:import Link from "next/link";
./apps/web/app/components/sidebar.tsx:18:import { usePathname } from "next/navigation";
./apps/web/app/components/staff-training/training-interface.tsx:3:import {
./apps/web/app/components/staff-training/training-interface.tsx:14:import { Badge } from "@/components/ui/badge";
./apps/web/app/components/staff-training/training-interface.tsx:15:import { Button } from "@/components/ui/button";
./apps/web/app/components/staff-training/training-interface.tsx:16:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/components/staff-training/training-interface.tsx:17:import { Progress } from "@/components/ui/progress";
./apps/web/app/components/staff-training/training-interface.tsx:18:import { Separator } from "@/components/ui/separator";
./apps/web/app/components/staff-training/training-interface.tsx:19:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/components/staff-training/training-interface.tsx:20:import { useStaffTraining } from "@/hooks/use-staff-training";
./apps/web/app/components/staff-training/training-interface.tsx:21:import { cn } from "@/lib/utils";
./apps/web/app/components/staff-training/training-interface.tsx:22:import type { TrainingModule } from "@/types/staff-training";
./apps/web/app/components/staff-training/training-interface.tsx:23:import {
./apps/web/app/components/staff-training/training-interface.tsx:29:import {
./apps/web/app/components/staff-training/training-interface.tsx:45:import { useEffect, useState } from "react";
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:6:import {
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:14:import { Input } from "@/components/ui/input";
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:15:import {
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:22:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:23:import { usePerformanceMonitoring } from "@/hooks/use-performance-monitoring";
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:24:import { cn } from "@/lib/utils";
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:25:import type { DashboardKPI, ExportOptions } from "@/types/performance-monitoring";
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:26:import { CHART_COLORS, KPI_LABELS_PT } from "@/types/performance-monitoring";
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:27:import { formatDistanceToNow } from "date-fns";
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:28:import { ptBR } from "date-fns/locale";
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:29:import {
./apps/web/app/components/performance-monitoring/performance-dashboard.tsx:46:import { useEffect, useState } from "react";
./apps/web/app/components/intelligent-scheduler.tsx:3:import { AISchedulingEngine } from "@/lib/ai-scheduling";
./apps/web/app/components/intelligent-scheduler.tsx:4:import type {
./apps/web/app/components/intelligent-scheduler.tsx:14:import type React from "react";
./apps/web/app/components/intelligent-scheduler.tsx:15:import { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/app/components/healthcare-loading.tsx:3:import { Card, CardContent, Progress } from "@neonpro/ui";
./apps/web/app/components/healthcare-loading.tsx:4:import { motion } from "framer-motion";
./apps/web/app/components/healthcare-loading.tsx:5:import { Activity, Heart, Shield, Stethoscope } from "lucide-react";
./apps/web/app/components/error-boundaries/healthcare-error-boundary.tsx:3:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/app/components/error-boundaries/healthcare-error-boundary.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/app/components/error-boundaries/healthcare-error-boundary.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/components/error-boundaries/healthcare-error-boundary.tsx:6:import {
./apps/web/app/components/error-boundaries/healthcare-error-boundary.tsx:11:import type { ErrorContext, HealthcareError } from "@neonpro/shared/errors/healthcare-error-types";
./apps/web/app/components/error-boundaries/healthcare-error-boundary.tsx:12:import { AlertTriangle, Phone, RefreshCw } from "lucide-react";
./apps/web/app/components/error-boundaries/healthcare-error-boundary.tsx:13:import type { ErrorInfo, ReactNode } from "react";
./apps/web/app/components/error-boundaries/healthcare-error-boundary.tsx:14:import React, { Component } from "react";
./apps/web/app/components/scheduling-analytics-dashboard.tsx:3:import type { SchedulingAnalytics } from "@neonpro/core-services/scheduling";
./apps/web/app/components/scheduling-analytics-dashboard.tsx:4:import type React from "react";
./apps/web/app/components/scheduling-analytics-dashboard.tsx:5:import { useEffect, useMemo, useState } from "react";
./apps/web/app/components/ai-scheduling-demo.tsx:3:import { useAIScheduling } from "@/hooks/use-ai-scheduling";
./apps/web/app/components/ai-scheduling-demo.tsx:4:import type {
./apps/web/app/components/ai-scheduling-demo.tsx:10:import type React from "react";
./apps/web/app/components/ai-scheduling-demo.tsx:11:import { useState } from "react";
./apps/web/app/components/ai-scheduling-demo.tsx:12:import { IntelligentScheduler } from "./intelligent-scheduler";
./apps/web/app/components/ai-scheduling-demo.tsx:13:import { SchedulingAnalyticsDashboard } from "./scheduling-analytics-dashboard";
./apps/web/app/components/dashboard/AppointmentsList.tsx:3:import { RiskIndicatorWithTooltip } from "@/components/no-show/risk-indicator";
./apps/web/app/components/dashboard/AppointmentsList.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/app/components/dashboard/AppointmentsList.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/components/dashboard/AppointmentsList.tsx:6:import { Skeleton } from "@/components/ui/skeleton";
./apps/web/app/components/dashboard/AppointmentsList.tsx:7:import { useEnhancedAppointments } from "@/hooks/use-no-show-prediction";
./apps/web/app/components/dashboard/AppointmentsList.tsx:8:import { INTERVENTION_ACTIONS_PT } from "@/types/no-show-prediction";
./apps/web/app/components/dashboard/AppointmentsList.tsx:9:import { AlertTriangle, ArrowRight, Calendar, Clock } from "lucide-react";
./apps/web/app/components/dashboard/AppointmentsList.tsx:10:import { useRouter } from "next/navigation";
./apps/web/app/components/dashboard/AppointmentsList.tsx:11:import { APPOINTMENT_SKELETON_INDEXES, DASHBOARD_CONSTANTS } from "./constants";
./apps/web/app/components/dashboard/HeroSection.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/app/components/dashboard/HeroSection.tsx:4:import { ArrowRight, Calendar, FileText, Heart, Shield, Star, Stethoscope } from "lucide-react";
./apps/web/app/components/dashboard/HeroSection.tsx:5:import { useRouter } from "next/navigation";
./apps/web/app/components/dashboard/MetricsCards.tsx:3:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/components/dashboard/MetricsCards.tsx:4:import { Skeleton } from "@/components/ui/skeleton";
./apps/web/app/components/dashboard/MetricsCards.tsx:5:import { Activity, BarChart3, Calendar, TrendingUp, Users } from "lucide-react";
./apps/web/app/components/dashboard/MetricsCards.tsx:6:import { DASHBOARD_CONSTANTS } from "./constants";
./apps/web/app/components/chat/universal-ai-chat.tsx:3:import { MedicalTerm } from "@/components/accessibility/medical-term";
./apps/web/app/components/chat/universal-ai-chat.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/app/components/chat/universal-ai-chat.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/app/components/chat/universal-ai-chat.tsx:6:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/components/chat/universal-ai-chat.tsx:7:import { Input } from "@/components/ui/input";
./apps/web/app/components/chat/universal-ai-chat.tsx:8:import { ScrollArea } from "@/components/ui/scroll-area";
./apps/web/app/components/chat/universal-ai-chat.tsx:9:import { useToast } from "@/components/ui/use-toast";
./apps/web/app/components/chat/universal-ai-chat.tsx:10:import { useEmergencyPerformance } from "@/hooks/use-emergency-performance";
./apps/web/app/components/chat/universal-ai-chat.tsx:11:import { useEmergencyVoiceCommands } from "@/hooks/use-emergency-voice-commands";
./apps/web/app/components/chat/universal-ai-chat.tsx:12:import { cn } from "@/lib/utils";
./apps/web/app/components/chat/universal-ai-chat.tsx:13:import { useKeyboardNavigation } from "@/src/hooks/accessibility/use-keyboard-navigation";
./apps/web/app/components/chat/universal-ai-chat.tsx:14:import { AnimatePresence, motion } from "framer-motion";
./apps/web/app/components/chat/universal-ai-chat.tsx:15:import {
./apps/web/app/components/chat/universal-ai-chat.tsx:35:import type React from "react";
./apps/web/app/components/chat/universal-ai-chat.tsx:36:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/app/components/header.tsx:1:import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
./apps/web/app/components/header.tsx:2:import { Button } from "@/components/ui/button";
./apps/web/app/components/header.tsx:3:import {
./apps/web/app/components/header.tsx:11:import { SidebarTrigger } from "@/components/ui/sidebar";
./apps/web/app/components/header.tsx:12:import { Bell, Search, Settings, User } from "lucide-react";
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:6:import { usePhase4Validation } from "@/app/hooks/use-phase4-validation";
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:7:import type {
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:13:import { ValidationLabels, ValidationLevel } from "@/app/types/phase4-validation";
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:14:import { Badge } from "@/components/ui/badge";
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:15:import { Button } from "@/components/ui/button";
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:16:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:17:import {
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:25:import { Input } from "@/components/ui/input";
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:26:import { Label } from "@/components/ui/label";
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:27:import { Progress } from "@/components/ui/progress";
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:28:import {
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:35:import { Switch } from "@/components/ui/switch";
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:36:import {
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:44:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:45:import { Textarea } from "@/components/ui/textarea";
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:46:import {
./apps/web/app/components/phase4-validation/validation-dashboard.tsx:78:import React, { useEffect, useState } from "react";
./apps/web/app/components/no-show/patient-risk-context.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/app/components/no-show/patient-risk-context.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/app/components/no-show/patient-risk-context.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/components/no-show/patient-risk-context.tsx:6:import { Separator } from "@/components/ui/separator";
./apps/web/app/components/no-show/patient-risk-context.tsx:7:import { cn } from "@/lib/utils";
./apps/web/app/components/no-show/patient-risk-context.tsx:8:import type { PatientRiskContextProps } from "@/types/no-show-prediction";
./apps/web/app/components/no-show/patient-risk-context.tsx:9:import { INTERVENTION_ACTIONS_PT, RiskFactor } from "@/types/no-show-prediction";
./apps/web/app/components/no-show/patient-risk-context.tsx:10:import {
./apps/web/app/components/no-show/patient-risk-context.tsx:21:import { useState } from "react";
./apps/web/app/components/no-show/patient-risk-context.tsx:22:import { RiskIndicatorWithTooltip } from "./risk-indicator";
./apps/web/app/components/no-show/anti-no-show-dashboard.tsx:3:import { getDashboardStats, getPredictions } from "@/app/lib/services/no-show-prediction";
./apps/web/app/components/no-show/anti-no-show-dashboard.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/app/components/no-show/anti-no-show-dashboard.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/app/components/no-show/anti-no-show-dashboard.tsx:6:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/components/no-show/anti-no-show-dashboard.tsx:7:import { Progress } from "@/components/ui/progress";
./apps/web/app/components/no-show/anti-no-show-dashboard.tsx:8:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/components/no-show/anti-no-show-dashboard.tsx:9:import { useToast } from "@/components/ui/use-toast";
./apps/web/app/components/no-show/anti-no-show-dashboard.tsx:10:import { cn } from "@/lib/utils";
./apps/web/app/components/no-show/anti-no-show-dashboard.tsx:11:import { AnimatePresence, motion } from "framer-motion";
./apps/web/app/components/no-show/anti-no-show-dashboard.tsx:12:import {
./apps/web/app/components/no-show/anti-no-show-dashboard.tsx:32:import { useCallback, useEffect, useState } from "react";
./apps/web/app/components/no-show/risk-indicator.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/app/components/no-show/risk-indicator.tsx:4:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/app/components/no-show/risk-indicator.tsx:5:import { cn } from "@/lib/utils";
./apps/web/app/components/no-show/risk-indicator.tsx:6:import type { RiskIndicatorProps } from "@/types/no-show-prediction";
./apps/web/app/components/no-show/risk-indicator.tsx:7:import { RISK_COLORS, RISK_LABELS_PT, RISK_THRESHOLDS } from "@/types/no-show-prediction";
./apps/web/app/components/no-show/risk-indicator.tsx:8:import { AlertCircle, AlertTriangle, CheckCircle, XCircle } from "lucide-react";
./apps/web/app/components/healthcare-sidebar.tsx:3:import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
./apps/web/app/components/healthcare-sidebar.tsx:4:import {
./apps/web/app/components/healthcare-sidebar.tsx:17:import {
./apps/web/app/components/healthcare-sidebar.tsx:34:import Link from "next/link";
./apps/web/app/components/healthcare-sidebar.tsx:35:import { usePathname } from "next/navigation";
./apps/web/app/profile/page.tsx:3:import {
./apps/web/app/profile/page.tsx:31:import { Activity, Camera, Edit, Lock, Save, Shield } from "lucide-react";
./apps/web/app/profile/page.tsx:32:import { useState } from "react";
./apps/web/app/hooks/use-retention-analytics.ts:1:import { useState } from "react";
./apps/web/app/hooks/use-barcode-scanner.ts:1:import { useState } from "react";
./apps/web/app/hooks/use-ai-scheduling.ts:3:import { AISchedulingEngine } from "@/lib/ai-scheduling";
./apps/web/app/hooks/use-ai-scheduling.ts:4:import type {
./apps/web/app/hooks/use-ai-scheduling.ts:13:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/app/hooks/use-multi-location-inventory.ts:1:import { useState } from "react";
./apps/web/app/hooks/use-marketing-roi.ts:1:import { useState } from "react";
./apps/web/app/hooks/use-staff-alerts.ts:3:import type {
./apps/web/app/hooks/use-staff-alerts.ts:9:import { EscalationRule, StaffMember } from "@/types/staff-alerts";
./apps/web/app/hooks/use-staff-alerts.ts:10:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/app/hooks/use-email.ts:1:import { useState } from "react";
./apps/web/app/hooks/use-emergency-patient-search.ts:3:import { useCallback, useMemo, useState } from "react";
./apps/web/app/hooks/use-treatment-followups.ts:1:import { useState } from "react";
./apps/web/app/hooks/use-auth.ts:3:import { createClient } from "@supabase/supabase-js";
./apps/web/app/hooks/use-auth.ts:4:import { useEffect, useState } from "react";
./apps/web/app/hooks/use-whatsapp.ts:1:import { useState } from "react";
./apps/web/app/hooks/use-phase4-validation.ts:6:import type {
./apps/web/app/hooks/use-phase4-validation.ts:17:import {
./apps/web/app/hooks/use-phase4-validation.ts:24:import { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/app/hooks/use-no-show-prediction.ts:3:import type { AppointmentWithRisk, NoShowPrediction } from "@/types/no-show-prediction";
./apps/web/app/hooks/use-no-show-prediction.ts:4:import { RISK_THRESHOLDS } from "@/types/no-show-prediction";
./apps/web/app/hooks/use-no-show-prediction.ts:5:import { useCallback, useEffect, useState } from "react";
./apps/web/app/hooks/use-inventory-reports.ts:1:import { useState } from "react";
./apps/web/app/hooks/use-workflow-automation.ts:3:import type {
./apps/web/app/hooks/use-workflow-automation.ts:9:import { ActionResult } from "@/types/workflow-automation";
./apps/web/app/hooks/use-workflow-automation.ts:10:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/app/hooks/use-communication.ts:1:import { useState } from "react";
./apps/web/app/hooks/use-performance-monitoring.ts:3:import type {
./apps/web/app/hooks/use-performance-monitoring.ts:12:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/app/hooks/use-sms.ts:1:import { useState } from "react";
./apps/web/app/hooks/use-emergency-appointments.ts:3:import { useCallback, useMemo, useState } from "react";
./apps/web/app/hooks/use-staff-training.ts:3:import type {
./apps/web/app/hooks/use-staff-training.ts:12:import { PracticalExerciseResult } from "@/types/staff-training";
./apps/web/app/hooks/use-staff-training.ts:13:import { useCallback, useEffect, useState } from "react";
./apps/web/app/hooks/use-patients.ts:3:import { useCallback, useEffect, useState } from "react";
./apps/web/app/layout.tsx:1:import type { Metadata } from "next";
./apps/web/app/layout.tsx:2:import { Inter, JetBrains_Mono } from "next/font/google";
./apps/web/app/layout.tsx:3:import "./globals.css";
./apps/web/app/layout.tsx:5:import { Toaster } from "@/components/ui/toaster";
./apps/web/app/layout.tsx:6:import { QueryProvider } from "@/providers/query-provider";
./apps/web/app/pacientes/page-new.tsx:3:import { EmptyState, ErrorBoundary, StateManager } from "@/components/forms/loading-error-states";
./apps/web/app/pacientes/page-new.tsx:4:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/app/pacientes/page-new.tsx:5:import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
./apps/web/app/pacientes/page-new.tsx:6:import { Badge } from "@/components/ui/badge";
./apps/web/app/pacientes/page-new.tsx:7:import { Button } from "@/components/ui/button";
./apps/web/app/pacientes/page-new.tsx:8:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/pacientes/page-new.tsx:9:import { Checkbox } from "@/components/ui/checkbox";
./apps/web/app/pacientes/page-new.tsx:10:import {
./apps/web/app/pacientes/page-new.tsx:19:import { Input } from "@/components/ui/input";
./apps/web/app/pacientes/page-new.tsx:20:import { Label } from "@/components/ui/label";
./apps/web/app/pacientes/page-new.tsx:21:import { ScrollArea } from "@/components/ui/scroll-area";
./apps/web/app/pacientes/page-new.tsx:22:import {
./apps/web/app/pacientes/page-new.tsx:29:import { Separator } from "@/components/ui/separator";
./apps/web/app/pacientes/page-new.tsx:30:import { Skeleton } from "@/components/ui/skeleton";
./apps/web/app/pacientes/page-new.tsx:31:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/pacientes/page-new.tsx:32:import { Textarea } from "@/components/ui/textarea";
./apps/web/app/pacientes/page-new.tsx:33:import { useAuth } from "@/contexts/auth-context-new";
./apps/web/app/pacientes/page-new.tsx:34:import {
./apps/web/app/pacientes/page-new.tsx:58:import { useCallback, useEffect, useState } from "react";
./apps/web/app/pacientes/page.tsx:3:// import { useAuth } from "@/contexts/auth-context"; // Commented out - not used
./apps/web/app/pacientes/page.tsx:4:import {
./apps/web/app/pacientes/page.tsx:41:import { Calendar, Edit, Heart, Mail, Phone, Plus, Search, Trash2 } from "lucide-react";
./apps/web/app/pacientes/page.tsx:42:import { useState } from "react";
./apps/web/app/dashboard/analytics/components/CustomReportBuilder.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/app/dashboard/analytics/components/CustomReportBuilder.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/app/dashboard/analytics/components/CustomReportBuilder.tsx:5:import { Input } from "@/components/ui/input";
./apps/web/app/dashboard/analytics/components/CustomReportBuilder.tsx:6:import { Label } from "@/components/ui/label";
./apps/web/app/dashboard/analytics/components/CustomReportBuilder.tsx:7:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/dashboard/analytics/components/CustomReportBuilder.tsx:8:import { Textarea } from "@/components/ui/textarea";
./apps/web/app/dashboard/analytics/components/CustomReportBuilder.tsx:9:import { motion } from "framer-motion";
./apps/web/app/dashboard/analytics/components/CustomReportBuilder.tsx:10:import {
./apps/web/app/dashboard/analytics/components/CustomReportBuilder.tsx:24:import { useState } from "react";
./apps/web/app/dashboard/analytics/report-builder/page.tsx:1:import CustomReportBuilder from "../components/CustomReportBuilder";
./apps/web/app/dashboard/analytics/page.tsx:9:import { AIAnalyticsDashboard } from "@/components/dashboard/ai-powered";
./apps/web/app/dashboard/page-new.tsx:3:import {
./apps/web/app/dashboard/page-new.tsx:9:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/app/dashboard/page-new.tsx:10:import { Badge } from "@/components/ui/badge";
./apps/web/app/dashboard/page-new.tsx:11:import { Button } from "@/components/ui/button";
./apps/web/app/dashboard/page-new.tsx:12:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/dashboard/page-new.tsx:13:import { Skeleton } from "@/components/ui/skeleton";
./apps/web/app/dashboard/page-new.tsx:14:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/dashboard/page-new.tsx:15:import { useAuth } from "@/contexts/auth-context-new";
./apps/web/app/dashboard/page-new.tsx:16:import {
./apps/web/app/dashboard/page-new.tsx:32:import { useEffect, useState } from "react";
./apps/web/app/dashboard/compliance/page.tsx:9:import { ComplianceStatusDashboard } from "@/components/dashboard/ai-powered";
./apps/web/app/dashboard/health/page.tsx:9:import { HealthMonitoringDashboard } from "@/components/dashboard/ai-powered";
./apps/web/app/dashboard/page.tsx:9:import { DashboardLayout } from "@/components/dashboard/DashboardLayout";
./apps/web/app/consent/components/DigitalSignature.tsx:3:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/app/consent/components/DigitalSignature.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/app/consent/components/DigitalSignature.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/app/consent/components/DigitalSignature.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/consent/components/DigitalSignature.tsx:7:import { Checkbox } from "@/components/ui/checkbox";
./apps/web/app/consent/components/DigitalSignature.tsx:8:import {
./apps/web/app/consent/components/DigitalSignature.tsx:15:import { Input } from "@/components/ui/input";
./apps/web/app/consent/components/DigitalSignature.tsx:16:import { Label } from "@/components/ui/label";
./apps/web/app/consent/components/DigitalSignature.tsx:17:import { Progress } from "@/components/ui/progress";
./apps/web/app/consent/components/DigitalSignature.tsx:18:import { Separator } from "@/components/ui/separator";
./apps/web/app/consent/components/DigitalSignature.tsx:19:import {
./apps/web/app/consent/components/DigitalSignature.tsx:29:import type React from "react";
./apps/web/app/consent/components/DigitalSignature.tsx:30:import { useRef, useState } from "react";
./apps/web/app/consent/page.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/app/consent/page.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/app/consent/page.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/consent/page.tsx:6:import { Checkbox } from "@/components/ui/checkbox";
./apps/web/app/consent/page.tsx:7:import {
./apps/web/app/consent/page.tsx:14:import { Input } from "@/components/ui/input";
./apps/web/app/consent/page.tsx:15:import { Label } from "@/components/ui/label";
./apps/web/app/consent/page.tsx:16:import { Progress } from "@/components/ui/progress";
./apps/web/app/consent/page.tsx:17:import {
./apps/web/app/consent/page.tsx:24:import { Separator } from "@/components/ui/separator";
./apps/web/app/consent/page.tsx:25:import {
./apps/web/app/consent/page.tsx:33:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/consent/page.tsx:34:import {
./apps/web/app/consent/page.tsx:54:import { useState } from "react";
./apps/web/app/utils/supabase/server.ts:6:import { createServerClient } from "@supabase/ssr";
./apps/web/app/utils/supabase/server.ts:7:import { cookies } from "next/headers";
./apps/web/app/utils/supabase/client.ts:6:import { createBrowserClient } from "@supabase/ssr";
./apps/web/app/login/page-new.tsx:1:import type { Metadata } from "next";
./apps/web/app/login/page-new.tsx:2:import { Suspense } from "react";
./apps/web/app/login/page-new.tsx:3:import { LoginForm, LoginFormSkeleton } from "./login-form-new";
./apps/web/app/login/login-form.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/app/login/login-form.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/app/login/login-form.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/login/login-form.tsx:6:import { Icons } from "@/components/ui/icons";
./apps/web/app/login/login-form.tsx:7:import { Input } from "@/components/ui/input";
./apps/web/app/login/login-form.tsx:8:import { Label } from "@/components/ui/label";
./apps/web/app/login/login-form.tsx:9:import { useAuth } from "@/contexts/auth-context";
./apps/web/app/login/login-form.tsx:10:import { toastHelpers } from "@/lib/toast-helpers";
./apps/web/app/login/login-form.tsx:11:import { AlertCircle, Eye, EyeOff } from "lucide-react";
./apps/web/app/login/login-form.tsx:12:import { useRouter } from "next/navigation";
./apps/web/app/login/login-form.tsx:13:import { useState } from "react";
./apps/web/app/login/login-form-new.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/app/login/login-form-new.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/app/login/login-form-new.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/login/login-form-new.tsx:6:import { Checkbox } from "@/components/ui/checkbox";
./apps/web/app/login/login-form-new.tsx:7:import { Icons } from "@/components/ui/icons";
./apps/web/app/login/login-form-new.tsx:8:import { Input } from "@/components/ui/input";
./apps/web/app/login/login-form-new.tsx:9:import { Label } from "@/components/ui/label";
./apps/web/app/login/login-form-new.tsx:10:import { useAuth } from "@/contexts/auth-context-new";
./apps/web/app/login/login-form-new.tsx:11:import { AlertCircle, Eye, EyeOff, Lock, Shield, UserCheck } from "lucide-react";
./apps/web/app/login/login-form-new.tsx:12:import Link from "next/link";
./apps/web/app/login/login-form-new.tsx:13:import { useRouter } from "next/navigation";
./apps/web/app/login/login-form-new.tsx:14:import { useEffect, useState } from "react";
./apps/web/app/login/page.tsx:1:import type { Metadata } from "next";
./apps/web/app/login/page.tsx:2:import Link from "next/link";
./apps/web/app/login/page.tsx:4:import { LoginForm } from "./login-form";
./apps/web/app/pricing/page.tsx:3:import {
./apps/web/app/pricing/page.tsx:13:import { Briefcase, Building2, Check, Shield, Star, Users, Zap } from "lucide-react";
./apps/web/app/pricing/page.tsx:14:import { useRouter } from "next/navigation";
./apps/web/app/pricing/page.tsx:15:import type React from "react";
./apps/web/app/global-error.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/app/global-error.tsx:4:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/global-error.tsx:5:import { AlertTriangle, Home, RefreshCw } from "lucide-react";
./apps/web/app/global-error.tsx:6:import { useEffect } from "react";
./apps/web/app/agenda.tsx:3:import { formatDate, formatTime } from "@/lib/utils";
./apps/web/app/agenda.tsx:4:import { Button, Card } from "@neonpro/ui";
./apps/web/app/agenda.tsx:5:import { AnimatePresence, motion } from "framer-motion";
./apps/web/app/agenda.tsx:6:import {
./apps/web/app/agenda.tsx:19:import { useState } from "react";
./apps/web/app/test-dashboard/page.tsx:3:import NeonProHealthcareDashboard from "../components/neonpro-healthcare-dashboard";
./apps/web/app/page.tsx:3:import { useAppointments } from "@/hooks/useAppointments";
./apps/web/app/page.tsx:4:import { useDashboardMetrics } from "@/hooks/useDashboardMetrics";
./apps/web/app/page.tsx:5:import { usePatients } from "@/hooks/usePatients";
./apps/web/app/page.tsx:6:import { PatientsList } from "../components/PatientsList";
./apps/web/app/page.tsx:7:import { AppointmentsList } from "./components/dashboard/AppointmentsList";
./apps/web/app/page.tsx:8:import { HeroSection } from "./components/dashboard/HeroSection";
./apps/web/app/page.tsx:9:import { MetricsCards } from "./components/dashboard/MetricsCards";
./apps/web/app/api/handoff/generate/route.ts:14:import { createClient } from "@/utils/supabase/server";
./apps/web/app/api/handoff/generate/route.ts:15:import { cookies } from "next/headers";
./apps/web/app/api/handoff/generate/route.ts:16:import type { NextRequest } from "next/server";
./apps/web/app/api/handoff/generate/route.ts:17:import { NextResponse } from "next/server";
./apps/web/app/api/handoff/generate/route.ts:18:import crypto from "node:crypto";
./apps/web/app/api/handoff/validate/route.ts:14:import { createClient } from "@/utils/supabase/server";
./apps/web/app/api/handoff/validate/route.ts:15:import { cookies } from "next/headers";
./apps/web/app/api/handoff/validate/route.ts:16:import type { NextRequest } from "next/server";
./apps/web/app/api/handoff/validate/route.ts:17:import { NextResponse } from "next/server";
./apps/web/app/api/handoff/validate/route.ts:18:import crypto from "node:crypto";
./apps/web/app/api/auth/webauthn/credentials/[credentialId]/route.ts:1:import { type NextRequest, NextResponse } from "next/server";
./apps/web/app/api/auth/webauthn/credentials/[credentialId]/route.ts:2:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/auth/webauthn/credentials/route.ts:1:import { type NextRequest, NextResponse } from "next/server";
./apps/web/app/api/auth/webauthn/credentials/route.ts:2:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/financial/route.ts:9:import type { NextRequest } from "next/server";
./apps/web/app/api/financial/route.ts:10:import { NextResponse } from "next/server";
./apps/web/app/api/no-show-prediction/[id]/route.ts:4:import { noShowPredictionEngine } from "@/app/lib/services/no-show-prediction";
./apps/web/app/api/no-show-prediction/[id]/route.ts:5:import { UpdatePredictionInputSchema } from "@/app/lib/validations/no-show-prediction";
./apps/web/app/api/no-show-prediction/[id]/route.ts:6:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/no-show-prediction/[id]/route.ts:7:import { NextResponse } from "next/server";
./apps/web/app/api/no-show-prediction/[id]/route.ts:8:import type { NextRequest } from "next/server";
./apps/web/app/api/tax/nfe/[id]/cancel/route.ts:4:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/tax/nfe/[id]/cancel/route.ts:5:import { nfeService } from "@/lib/services/tax/nfe-service";
./apps/web/app/api/tax/nfe/[id]/cancel/route.ts:6:import { NextResponse } from "next/server";
./apps/web/app/api/tax/nfe/[id]/cancel/route.ts:7:import { z } from "zod";
./apps/web/app/api/tax/nfe/[id]/authorize/route.ts:4:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/tax/nfe/[id]/authorize/route.ts:5:import { nfeService } from "@/lib/services/tax/nfe-service";
./apps/web/app/api/tax/nfe/[id]/authorize/route.ts:6:import { NextResponse } from "next/server";
./apps/web/app/api/analytics/route.ts:1:import { createClient } from "@supabase/supabase-js";
./apps/web/app/api/analytics/route.ts:2:import { NextResponse } from "next/server";
./apps/web/app/api/analytics/route.ts:3:import type { NextRequest } from "next/server";
./apps/web/app/api/analytics/route.ts:4:import { z } from "zod";
./apps/web/app/api/predictive-analytics/models/[id]/route.ts:1:import { PredictiveAnalyticsService } from "@/app/lib/services/predictive-analytics";
./apps/web/app/api/predictive-analytics/models/[id]/route.ts:2:import { updateForecastingModelSchema } from "@/app/lib/validations/predictive-analytics";
./apps/web/app/api/predictive-analytics/models/[id]/route.ts:3:import { NextResponse } from "next/server";
./apps/web/app/api/predictive-analytics/models/[id]/route.ts:4:import type { NextRequest } from "next/server";
./apps/web/app/api/predictive-analytics/training/[id]/route.ts:1:import { PredictiveAnalyticsService } from "@/app/lib/services/predictive-analytics";
./apps/web/app/api/predictive-analytics/training/[id]/route.ts:2:import { NextResponse } from "next/server";
./apps/web/app/api/predictive-analytics/training/[id]/route.ts:3:import type { NextRequest } from "next/server";
./apps/web/app/api/predictive-analytics/predictions/[id]/route.ts:1:import { PredictiveAnalyticsService } from "@/app/lib/services/predictive-analytics";
./apps/web/app/api/predictive-analytics/predictions/[id]/route.ts:2:import { NextResponse } from "next/server";
./apps/web/app/api/predictive-analytics/predictions/[id]/route.ts:3:import type { NextRequest } from "next/server";
./apps/web/app/api/predictive-analytics/alerts/[id]/route.ts:1:import { PredictiveAnalyticsService } from "@/app/lib/services/predictive-analytics";
./apps/web/app/api/predictive-analytics/alerts/[id]/route.ts:2:import { NextResponse } from "next/server";
./apps/web/app/api/predictive-analytics/alerts/[id]/route.ts:3:import type { NextRequest } from "next/server";
./apps/web/app/api/appointments/slots/route.ts:7:import type { NextRequest } from "next/server";
./apps/web/app/api/appointments/slots/route.ts:8:import { NextResponse } from "next/server";
./apps/web/app/api/assistant/conversations/route.ts:1:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/assistant/conversations/route.ts:2:import { NextResponse } from "next/server";
./apps/web/app/api/assistant/conversations/route.ts:3:import type { NextRequest } from "next/server";
./apps/web/app/api/assistant/conversations/[id]/route.ts:1:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/assistant/conversations/[id]/route.ts:2:import { NextResponse } from "next/server";
./apps/web/app/api/assistant/conversations/[id]/route.ts:3:import type { NextRequest } from "next/server";
./apps/web/app/api/assistant/chat/route.ts:1:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/assistant/chat/route.ts:2:import { anthropic } from "@ai-sdk/anthropic";
./apps/web/app/api/assistant/chat/route.ts:3:import { openai } from "@ai-sdk/openai";
./apps/web/app/api/assistant/chat/route.ts:4:import { convertToCoreMessages, streamText } from "ai";
./apps/web/app/api/assistant/chat/route.ts:5:import { NextResponse } from "next/server";
./apps/web/app/api/assistant/chat/route.ts:6:import type { NextRequest } from "next/server";
./apps/web/app/api/scheduling/ai-schedule/route.ts:2:import { NextResponse } from "next/server";
./apps/web/app/api/scheduling/ai-schedule/route.ts:3:import type { NextRequest } from "next/server";
./apps/web/app/api/scheduling/analytics/[tenantId]/route.ts:1:import type { SchedulingAnalytics, TimeSlotEfficiency } from "@neonpro/core-services/scheduling";
./apps/web/app/api/scheduling/analytics/[tenantId]/route.ts:2:import { NextResponse } from "next/server";
./apps/web/app/api/scheduling/analytics/[tenantId]/route.ts:3:import type { NextRequest } from "next/server";
./apps/web/app/api/scheduling/analytics/[tenantId]/route.ts:4:import { z } from "zod";
./apps/web/app/api/subscription-plans/[id]/route.ts:5:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/subscription-plans/[id]/route.ts:6:import { subscriptionManager } from "@/lib/payments/recurring/subscription-manager";
./apps/web/app/api/subscription-plans/[id]/route.ts:7:import { logger } from "@/lib/utils/logger";
./apps/web/app/api/subscription-plans/[id]/route.ts:8:import { NextResponse } from "next/server";
./apps/web/app/api/subscription-plans/[id]/route.ts:9:import type { NextRequest } from "next/server";
./apps/web/app/api/subscription-plans/[id]/route.ts:10:import { z } from "zod";
./apps/web/app/api/compliance/reporting/route.ts:6:import { regulatoryReportingService } from "@/lib/services/regulatory-reporting";
./apps/web/app/api/compliance/reporting/route.ts:7:import { createClient } from "@/lib/supabase/server";
./apps/web/app/api/compliance/reporting/route.ts:8:import { NextResponse } from "next/server";
./apps/web/app/api/compliance/reporting/route.ts:9:import type { NextRequest } from "next/server";
./apps/web/app/api/receipts-invoices/[id]/route.ts:1:import { ReceiptInvoiceManager } from "@/lib/payments/receipts/receipt-invoice-manager";
./apps/web/app/api/receipts-invoices/[id]/route.ts:2:import { createClient } from "@supabase/supabase-js";
./apps/web/app/api/receipts-invoices/[id]/route.ts:3:import { NextResponse } from "next/server";
./apps/web/app/api/receipts-invoices/[id]/route.ts:4:import type { NextRequest } from "next/server";
./apps/web/app/api/receipts-invoices/[id]/route.ts:5:import { z } from "zod";
./apps/web/app/api/test-chat/route.ts:1:import { NextResponse } from "next/server";
./apps/web/app/api/test-chat/route.ts:2:import type { NextRequest } from "next/server";
./apps/web/app/api/health/route.ts:7:import { NextResponse } from "next/server";
./apps/web/app/api/treatment-success/outcomes/[id]/route.ts:1:import { TreatmentSuccessService } from "@/app/lib/services/treatment-success";
./apps/web/app/api/treatment-success/outcomes/[id]/route.ts:2:import { updateTreatmentOutcomeSchema } from "@/app/lib/validations/treatment-success";
./apps/web/app/api/treatment-success/outcomes/[id]/route.ts:3:import { NextResponse } from "next/server";
./apps/web/app/api/treatment-success/outcomes/[id]/route.ts:4:import type { NextRequest } from "next/server";
./apps/web/app/api/export/route.ts:6:import { NextResponse } from "next/server";
./apps/web/app/api/export/route.ts:7:import type { NextRequest } from "next/server";
./apps/web/app/api/cron/drift-monitoring/route.ts:10:import { driftDetector } from "@/lib/ai/drift-detection";
./apps/web/app/api/cron/drift-monitoring/route.ts:11:import { createClient } from "@/lib/supabase/server";
./apps/web/app/api/cron/drift-monitoring/route.ts:12:import { NextResponse } from "next/server";
./apps/web/app/api/cron/drift-monitoring/route.ts:13:import type { NextRequest } from "next/server";
./apps/web/app/api/communications/route.ts:9:import type { NextRequest } from "next/server";
./apps/web/app/api/communications/route.ts:10:import { NextResponse } from "next/server";
./apps/web/app/api/stock/alerts/__tests__/alerts.integration.test.ts:4:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/app/api/retention-analytics/predictions/[clinicId]/route.ts:7:import { RetentionAnalyticsService } from "@/app/lib/services/retention-analytics-service";
./apps/web/app/api/retention-analytics/predictions/[clinicId]/route.ts:8:import { ChurnModelType, ChurnRiskLevel } from "@/app/types/retention-analytics";
./apps/web/app/api/retention-analytics/predictions/[clinicId]/route.ts:9:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/retention-analytics/predictions/[clinicId]/route.ts:10:import { safeParseNumber } from "@/src/types/analytics";
./apps/web/app/api/retention-analytics/predictions/[clinicId]/route.ts:11:import type { DatabaseRow, RetentionPrediction } from "@/src/types/analytics";
./apps/web/app/api/retention-analytics/predictions/[clinicId]/route.ts:12:import { NextResponse } from "next/server";
./apps/web/app/api/retention-analytics/predictions/[clinicId]/route.ts:13:import type { NextRequest } from "next/server";
./apps/web/app/api/retention-analytics/predictions/[clinicId]/route.ts:14:import { z } from "zod";
./apps/web/app/api/retention-analytics/strategies/[clinicId]/route.ts:7:import { RetentionAnalyticsService } from "@/app/lib/services/retention-analytics-service";
./apps/web/app/api/retention-analytics/strategies/[clinicId]/route.ts:8:import { RetentionStrategyStatus, RetentionStrategyType } from "@/app/types/retention-analytics";
./apps/web/app/api/retention-analytics/strategies/[clinicId]/route.ts:9:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/retention-analytics/strategies/[clinicId]/route.ts:10:import { safeParseNumber } from "@/src/types/analytics";
./apps/web/app/api/retention-analytics/strategies/[clinicId]/route.ts:11:import { NextResponse } from "next/server";
./apps/web/app/api/retention-analytics/strategies/[clinicId]/route.ts:12:import type { NextRequest } from "next/server";
./apps/web/app/api/retention-analytics/strategies/[clinicId]/route.ts:13:import { z } from "zod";
./apps/web/app/api/retention-analytics/metrics/[patientId]/route.ts:7:import { RetentionAnalyticsService } from "@/app/lib/services/retention-analytics-service";
./apps/web/app/api/retention-analytics/metrics/[patientId]/route.ts:8:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/retention-analytics/metrics/[patientId]/route.ts:9:import { NextResponse } from "next/server";
./apps/web/app/api/retention-analytics/metrics/[patientId]/route.ts:10:import type { NextRequest } from "next/server";
./apps/web/app/api/retention-analytics/metrics/[patientId]/route.ts:11:import { z } from "zod";
./apps/web/app/api/retention-analytics/metrics/clinic/[clinicId]/route.ts:7:import { RetentionAnalyticsService } from "@/app/lib/services/retention-analytics-service";
./apps/web/app/api/retention-analytics/metrics/clinic/[clinicId]/route.ts:8:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/retention-analytics/metrics/clinic/[clinicId]/route.ts:9:import { safeParseNumber } from "@/src/types/analytics";
./apps/web/app/api/retention-analytics/metrics/clinic/[clinicId]/route.ts:10:import type { DatabaseRow } from "@/src/types/analytics";
./apps/web/app/api/retention-analytics/metrics/clinic/[clinicId]/route.ts:11:import { NextResponse } from "next/server";
./apps/web/app/api/retention-analytics/metrics/clinic/[clinicId]/route.ts:12:import type { NextRequest } from "next/server";
./apps/web/app/api/retention-analytics/metrics/clinic/[clinicId]/route.ts:13:import { z } from "zod";
./apps/web/app/api/retention-analytics/dashboard/[clinicId]/route.ts:7:import { RetentionAnalyticsService } from "@/app/lib/services/retention-analytics-service";
./apps/web/app/api/retention-analytics/dashboard/[clinicId]/route.ts:8:import { ChurnRiskLevel } from "@/app/types/retention-analytics";
./apps/web/app/api/retention-analytics/dashboard/[clinicId]/route.ts:9:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/retention-analytics/dashboard/[clinicId]/route.ts:10:import { NextResponse } from "next/server";
./apps/web/app/api/retention-analytics/dashboard/[clinicId]/route.ts:11:import type { NextRequest } from "next/server";
./apps/web/app/api/retention-analytics/dashboard/[clinicId]/route.ts:12:import { z } from "zod";
./apps/web/app/api/automated-analysis/route.ts:3:import { automatedBeforeAfterAnalysisService } from "@/app/lib/services/automated-before-after-analysis";
./apps/web/app/api/automated-analysis/route.ts:4:import { validationSchemas } from "@/app/lib/validations/automated-before-after-analysis";
./apps/web/app/api/automated-analysis/route.ts:5:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/automated-analysis/route.ts:6:import { NextResponse } from "next/server";
./apps/web/app/api/automated-analysis/route.ts:7:import type { NextRequest } from "next/server";
./apps/web/app/api/payment-plans/[id]/route.ts:5:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/payment-plans/[id]/route.ts:6:import { getInstallmentManager } from "@/lib/payments/installments/installment-manager";
./apps/web/app/api/payment-plans/[id]/route.ts:7:import { NextResponse } from "next/server";
./apps/web/app/api/payment-plans/[id]/route.ts:8:import type { NextRequest } from "next/server";
./apps/web/app/api/payment-plans/[id]/route.ts:9:import { z } from "zod";
./apps/web/app/api/patients/[patientId]-temp/insights/treatments/route.ts:3:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/patients/[patientId]-temp/insights/treatments/route.ts:4:import { PatientInsightsIntegration } from "@/lib/ai/patient-insights";
./apps/web/app/api/patients/[patientId]-temp/insights/treatments/route.ts:5:import { NextResponse } from "next/server";
./apps/web/app/api/patients/[patientId]-temp/insights/treatments/route.ts:6:import type { NextRequest } from "next/server";
./apps/web/app/api/patients/[patientId]-temp/insights/risk-assessment/route.ts:3:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/patients/[patientId]-temp/insights/risk-assessment/route.ts:4:import { PatientInsightsIntegration } from "@/lib/ai/patient-insights";
./apps/web/app/api/patients/[patientId]-temp/insights/risk-assessment/route.ts:5:import { NextResponse } from "next/server";
./apps/web/app/api/patients/[patientId]-temp/insights/risk-assessment/route.ts:6:import type { NextRequest } from "next/server";
./apps/web/app/api/patients/[patientId]-temp/insights/alerts/route.ts:3:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/patients/[patientId]-temp/insights/alerts/route.ts:4:import { PatientInsightsIntegration } from "@/lib/ai/patient-insights";
./apps/web/app/api/patients/[patientId]-temp/insights/alerts/route.ts:5:import { NextResponse } from "next/server";
./apps/web/app/api/patients/[patientId]-temp/insights/alerts/route.ts:6:import type { NextRequest } from "next/server";
./apps/web/app/api/patients/[patientId]-temp/insights/comprehensive/route.ts:3:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/patients/[patientId]-temp/insights/comprehensive/route.ts:4:import { PatientInsightsIntegration } from "@/lib/ai/patient-insights";
./apps/web/app/api/patients/[patientId]-temp/insights/comprehensive/route.ts:5:import type { PatientInsightRequest } from "@/lib/ai/patient-insights/types";
./apps/web/app/api/patients/[patientId]-temp/insights/comprehensive/route.ts:6:import { NextResponse } from "next/server";
./apps/web/app/api/patients/[patientId]-temp/insights/comprehensive/route.ts:7:import type { NextRequest } from "next/server";
./apps/web/app/api/patients/route.ts:9:import type { NextRequest } from "next/server";
./apps/web/app/api/patients/route.ts:10:import { NextResponse } from "next/server";
./apps/web/app/api/patients/[id]/route.ts:9:import type { NextRequest } from "next/server";
./apps/web/app/api/patients/[id]/route.ts:10:import { NextResponse } from "next/server";
./apps/web/app/api/ai/route.ts:9:import type { NextRequest } from "next/server";
./apps/web/app/api/ai/route.ts:10:import { NextResponse } from "next/server";
./apps/web/app/api/progress-tracking/[id]/route.ts:4:import { progressTrackingService } from "@/app/lib/services/progress-tracking";
./apps/web/app/api/progress-tracking/[id]/route.ts:5:import { updateProgressTrackingSchema } from "@/app/lib/validations/progress-tracking";
./apps/web/app/api/progress-tracking/[id]/route.ts:6:import { createClient } from "@/app/utils/supabase/server";
./apps/web/app/api/progress-tracking/[id]/route.ts:7:import { NextResponse } from "next/server";
./apps/web/app/api/progress-tracking/[id]/route.ts:8:import type { NextRequest } from "next/server";
./apps/web/app/lib/auth/session/use-session.ts:1:import { useState } from "react";
./apps/web/app/lib/auth/audit/use-security-audit.ts:1:import { useState } from "react";
./apps/web/app/lib/auth/lgpd/use-privacy-controls.ts:1:import { useState } from "react";
./apps/web/app/lib/types/stock-alerts.ts:4:import { z } from "zod";
./apps/web/app/lib/validations/no-show-prediction.ts:1:import { z } from "zod";
./apps/web/app/lib/validations/progress-tracking.ts:1:import { z } from "zod";
./apps/web/app/lib/validations/treatment-success.ts:1:import { z } from "zod";
./apps/web/app/lib/validations/predictive-analytics.ts:1:import { z } from "zod";
./apps/web/app/lib/validations/automated-before-after-analysis.ts:1:import { z } from "zod";
./apps/web/app/lib/validations/risk-assessment-automation.ts:1:import {
./apps/web/app/lib/validations/risk-assessment-automation.ts:6:import { z } from "zod";
./apps/web/app/lib/lgpd/monitoring/use-compliance-monitoring.ts:1:import { useState } from "react";
./apps/web/app/lib/i18n/use-translation.ts:1:import { useState } from "react";
./apps/web/app/lib/aesthetic-clinic-ui.tsx:3:import {
./apps/web/app/lib/aesthetic-clinic-ui.tsx:27:import {
./apps/web/app/lib/aesthetic-clinic-ui.tsx:49:import { useState } from "react";
./apps/web/app/lib/services/stock-alerts.service.ts:1:import { createClient } from "@/lib/supabase/client";
./apps/web/app/lib/services/stock-alerts.service.ts:2:import {
./apps/web/app/lib/services/stock-alerts.service.ts:7:import type {
./apps/web/app/lib/services/dashboard.ts:1:import { createClient } from "@/lib/supabase/client";
./apps/web/app/lib/services/__tests__/stock-alert.service.test.ts:4:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/app/lib/services/__tests__/stock-alert.integration.test.ts:4:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/app/lib/services/risk-assessment-automation.ts:2:import { vi } from "vitest";
./apps/web/app/lib/ai-scheduling.ts:1:import type {
./apps/web/app/aesthetic-clinic.tsx:3:import { AestheticClinicManagementSystem } from "./lib/aesthetic-clinic-ui";
./apps/web/app/(dashboard)/layout.tsx:1:import { SidebarInset, SidebarProvider } from "@/components/ui/sidebar";
./apps/web/app/(dashboard)/layout.tsx:2:import type React from "react";
./apps/web/app/(dashboard)/layout.tsx:3:import { Header } from "../components/header";
./apps/web/app/(dashboard)/layout.tsx:4:import { HealthcareSidebar } from "../components/healthcare-sidebar";
./apps/web/app/(dashboard)/compliance/automation/page.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/app/(dashboard)/compliance/automation/page.tsx:4:import { motion } from "framer-motion";
./apps/web/app/(dashboard)/compliance/automation/page.tsx:5:import {
./apps/web/app/(dashboard)/compliance/automation/page.tsx:26:import { useEffect, useState } from "react";
./apps/web/app/(dashboard)/dashboard/financial/reconciliation/page.tsx:3:import { useAuth } from "@/hooks/useAuth";
./apps/web/app/(dashboard)/dashboard/financial/reconciliation/page.tsx:4:import { usePermissions } from "@/hooks/usePermissions";
./apps/web/app/(dashboard)/dashboard/financial/reconciliation/page.tsx:5:import { Alert, AlertDescription, LoadingSpinner } from "@neonpro/ui";
./apps/web/app/(dashboard)/dashboard/financial/reconciliation/page.tsx:6:import { AlertTriangle, Shield } from "lucide-react";
./apps/web/app/(dashboard)/dashboard/financial/reconciliation/page.tsx:7:import { Suspense } from "react";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:3:import { motion } from "framer-motion";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:4:import {
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:21:import { useState } from "react";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:23:import { AestheticTreatmentPlan } from "@/components/treatments/AestheticTreatmentPlan";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:24:import { BeforeAfterSecureGallery } from "@/components/treatments/BeforeAfterSecureGallery";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:25:import { CosmeticConsentBrazilian } from "@/components/treatments/CosmeticConsentBrazilian";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:26:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:27:import { Badge } from "@/components/ui/badge";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:28:import { Button } from "@/components/ui/button";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:29:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:30:import {
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:37:import { Input } from "@/components/ui/input";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:38:import { Progress } from "@/components/ui/progress";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:39:import {
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:46:import { Separator } from "@/components/ui/separator";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:47:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:50:import { useTreatments } from "@/hooks/useTreatments";
./apps/web/app/(dashboard)/dashboard/treatments/page.tsx:51:import type {
./apps/web/app/(dashboard)/dashboard/reports/export-utils.ts:3:import { jsPDF } from "jspdf";
./apps/web/app/(dashboard)/dashboard/reports/export-utils.ts:4:import "jspdf-autotable";
./apps/web/app/(dashboard)/dashboard/reports/export-utils.ts:6:import { formatCurrency, formatDate, reportData } from "./healthcare-data";
./apps/web/app/(dashboard)/dashboard/reports/export-utils.ts:423:    // Temporarily disabled due to import issues
./apps/web/app/(dashboard)/dashboard/reports/accessibility-utils.tsx:6:import { useEffect } from "react";
./apps/web/app/(dashboard)/dashboard/reports/page.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/app/(dashboard)/dashboard/reports/page.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/app/(dashboard)/dashboard/reports/page.tsx:5:import { Input } from "@/components/ui/input";
./apps/web/app/(dashboard)/dashboard/reports/page.tsx:6:import { Label } from "@/components/ui/label";
./apps/web/app/(dashboard)/dashboard/reports/page.tsx:7:import {
./apps/web/app/(dashboard)/dashboard/reports/page.tsx:14:import { motion } from "framer-motion";
./apps/web/app/(dashboard)/dashboard/reports/page.tsx:15:import {
./apps/web/app/(dashboard)/dashboard/reports/page.tsx:43:import { useEffect, useState } from "react";
./apps/web/app/(dashboard)/dashboard/reports/page.tsx:44:import {
./apps/web/app/(dashboard)/dashboard/reports/page.tsx:51:import {
./apps/web/app/(dashboard)/dashboard/reports/page.tsx:58:import SchedulingModal from "./scheduling-modal";
./apps/web/app/(dashboard)/dashboard/reports/scheduling-modal.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/app/(dashboard)/dashboard/reports/scheduling-modal.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/app/(dashboard)/dashboard/reports/scheduling-modal.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/app/(dashboard)/dashboard/reports/scheduling-modal.tsx:6:import { Input } from "@/components/ui/input";
./apps/web/app/(dashboard)/dashboard/reports/scheduling-modal.tsx:7:import { Label } from "@/components/ui/label";
./apps/web/app/(dashboard)/dashboard/reports/scheduling-modal.tsx:8:import {
./apps/web/app/(dashboard)/dashboard/reports/scheduling-modal.tsx:15:import { Switch } from "@/components/ui/switch";
./apps/web/app/(dashboard)/dashboard/reports/scheduling-modal.tsx:16:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/(dashboard)/dashboard/reports/scheduling-modal.tsx:17:import { motion } from "framer-motion";
./apps/web/app/(dashboard)/dashboard/reports/scheduling-modal.tsx:18:import { AlertTriangle, Calendar, CheckCircle, Plus, Settings, Trash2, X } from "lucide-react";
./apps/web/app/(dashboard)/dashboard/reports/scheduling-modal.tsx:19:import { useState } from "react";
./apps/web/app/(dashboard)/dashboard/automated-analysis/page.tsx:3:import type { Metadata } from "next";
./apps/web/app/(dashboard)/dashboard/patients/page.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/app/(dashboard)/dashboard/patients/page.tsx:4:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/(dashboard)/dashboard/patients/page.tsx:5:import { Input } from "@/components/ui/input";
./apps/web/app/(dashboard)/dashboard/patients/page.tsx:6:import { Skeleton } from "@/components/ui/skeleton";
./apps/web/app/(dashboard)/dashboard/patients/page.tsx:7:import { usePatients } from "@/hooks/usePatients";
./apps/web/app/(dashboard)/dashboard/patients/page.tsx:8:import { Calendar, Mail, Phone, Plus, Search, Users } from "lucide-react";
./apps/web/app/(dashboard)/dashboard/patients/page.tsx:9:import { useState } from "react";
./apps/web/app/(dashboard)/chat/page.tsx:3:import { UniversalAIChat } from "@/app/components/chat/universal-ai-chat";
./apps/web/app/(dashboard)/chat/page.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/app/(dashboard)/chat/page.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/(dashboard)/chat/page.tsx:6:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/(dashboard)/chat/page.tsx:7:import { useAuth } from "@/hooks/useAuth";
./apps/web/app/(dashboard)/chat/page.tsx:8:import { Activity, Globe, Lock, MessageSquare, Shield, Zap } from "lucide-react";
./apps/web/app/(dashboard)/chat/page.tsx:9:import { useState } from "react";
./apps/web/app/(dashboard)/patients/page.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/app/(dashboard)/patients/page.tsx:4:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/(dashboard)/patients/page.tsx:5:import { Input } from "@/components/ui/input";
./apps/web/app/(dashboard)/patients/page.tsx:6:import {
./apps/web/app/(dashboard)/patients/page.tsx:14:import { usePatients } from "@/hooks/use-patients";
./apps/web/app/(dashboard)/patients/page.tsx:15:import {
./apps/web/app/(dashboard)/patients/page.tsx:26:import Link from "next/link";
./apps/web/app/(dashboard)/patients/page.tsx:27:import { useState } from "react";
./apps/web/app/emergency/page.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/app/emergency/page.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/app/emergency/page.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/app/emergency/page.tsx:6:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/emergency/page.tsx:7:import { Input } from "@/components/ui/input";
./apps/web/app/emergency/page.tsx:8:import { Separator } from "@/components/ui/separator";
./apps/web/app/emergency/page.tsx:9:import {
./apps/web/app/emergency/page.tsx:25:import type React from "react";
./apps/web/app/emergency/page.tsx:26:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/app/agenda/page-new.tsx:3:import { EmptyState, ErrorBoundary, StateManager } from "@/components/forms/loading-error-states";
./apps/web/app/agenda/page-new.tsx:4:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/app/agenda/page-new.tsx:5:import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
./apps/web/app/agenda/page-new.tsx:6:import { Badge } from "@/components/ui/badge";
./apps/web/app/agenda/page-new.tsx:7:import { Button } from "@/components/ui/button";
./apps/web/app/agenda/page-new.tsx:8:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/app/agenda/page-new.tsx:9:import {
./apps/web/app/agenda/page-new.tsx:17:import { Input } from "@/components/ui/input";
./apps/web/app/agenda/page-new.tsx:18:import { Label } from "@/components/ui/label";
./apps/web/app/agenda/page-new.tsx:19:import { ScrollArea } from "@/components/ui/scroll-area";
./apps/web/app/agenda/page-new.tsx:20:import {
./apps/web/app/agenda/page-new.tsx:27:import { Separator } from "@/components/ui/separator";
./apps/web/app/agenda/page-new.tsx:28:import { Skeleton } from "@/components/ui/skeleton";
./apps/web/app/agenda/page-new.tsx:29:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/app/agenda/page-new.tsx:30:import { Textarea } from "@/components/ui/textarea";
./apps/web/app/agenda/page-new.tsx:31:import { useAuth } from "@/contexts/auth-context-new";
./apps/web/app/agenda/page-new.tsx:32:import {
./apps/web/app/agenda/page-new.tsx:45:import { ptBR } from "date-fns/locale";
./apps/web/app/agenda/page-new.tsx:46:import {
./apps/web/app/agenda/page-new.tsx:73:import { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/app/signup/page.tsx:1:import { SignupForm } from "@/components/auth/signup-form";
./apps/web/app/signup/page.tsx:2:import type { Metadata } from "next";
./apps/web/app/signup/page.tsx:3:import Link from "next/link";
./apps/web/app/patient-portal/page.tsx:3:import { useAuth } from "@/contexts/auth-context";
./apps/web/app/patient-portal/page.tsx:4:import {
./apps/web/app/patient-portal/page.tsx:28:import {
./apps/web/app/patient-portal/page.tsx:40:import { useState } from "react";
./apps/web/next.config.js:2:// const withBundleAnalyzer = require("@next/bundle-analyzer")({
./apps/web/scripts/validate-core-web-vitals.js:8:const fs = require("node:fs");
./apps/web/scripts/validate-core-web-vitals.js:9:const path = require("node:path");
./apps/web/scripts/validate-loading-error-states.js:8:const { execSync } = require("node:child_process");
./apps/web/scripts/validate-loading-error-states.js:9:const fs = require("node:fs");
./apps/web/scripts/validate-loading-error-states.js:10:const path = require("node:path");
./apps/web/scripts/analyze-bundle.js:13:const fs = require("node:fs");
./apps/web/scripts/analyze-bundle.js:14:const path = require("node:path");
./apps/web/scripts/analyze-bundle.js:74:    "@react-pdf/renderer": "Dynamic import for PDF generation pages only",
./apps/web/scripts/analyze-bundle.js:75:    "jspdf": "Dynamic import + combine with jspdf-autotable",
./apps/web/scripts/analyze-bundle.js:76:    "jspdf-autotable": "Dynamic import + combine with jspdf",
./apps/web/scripts/analyze-bundle.js:77:    "html2canvas": "Dynamic import for screenshot functionality",
./apps/web/scripts/analyze-bundle.js:79:    "xlsx": "Dynamic import for Excel import/export features",
./apps/web/scripts/analyze-bundle.js:80:    "@stripe/stripe-js": "Dynamic import for payment pages only",
./apps/web/scripts/analyze-bundle.js:82:    "canvg": "Dynamic import for SVG processing",
./apps/web/scripts/analyze-bundle.js:87:  return suggestions[dep] || "Consider dynamic import if not critical";
./apps/web/data/treatmentsMockData.ts:6:import type { TreatmentPlan } from "@/types/treatments";
./apps/web/providers/realtime-provider.tsx:11:import { defaultRealtimeConfig, RealtimeQueryManager } from "@/lib/query/realtime-query-utils";
./apps/web/providers/realtime-provider.tsx:12:import type { RealtimeQueryConfig } from "@/lib/query/realtime-query-utils";
./apps/web/providers/realtime-provider.tsx:13:import { createClient } from "@/lib/supabase/client";
./apps/web/providers/realtime-provider.tsx:14:import type { SupabaseClient } from "@supabase/supabase-js";
./apps/web/providers/realtime-provider.tsx:15:import { useQueryClient } from "@tanstack/react-query";
./apps/web/providers/realtime-provider.tsx:16:import { createContext, useContext, useEffect, useRef, useState } from "react";
./apps/web/providers/query-provider.tsx:8:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./apps/web/providers/query-provider.tsx:9:import { ReactQueryDevtools } from "@tanstack/react-query-devtools";
./apps/web/providers/query-provider.tsx:10:import { useState } from "react";
./apps/web/providers/query-provider.tsx:11:import type { ReactNode } from "react";
./apps/web/providers/router-provider.tsx:11:import { useAuth } from "@/contexts/auth-context";
./apps/web/providers/router-provider.tsx:12:import { router } from "@/lib/router";
./apps/web/providers/router-provider.tsx:13:import { useQueryClient } from "@tanstack/react-query";
./apps/web/providers/router-provider.tsx:14:import { RouterProvider as TanStackRouterProvider } from "@tanstack/react-router";
./apps/web/providers/router-provider.tsx:15:import { TanStackRouterDevtools } from "@tanstack/router-devtools";
./apps/web/providers/router-provider.tsx:16:import React from "react";
./apps/web/lib/middleware/professional-validation.ts:9:import { createClient } from "@supabase/supabase-js";
./apps/web/lib/middleware/professional-validation.ts:10:import type { NextRequest } from "next/server";
./apps/web/lib/middleware/professional-validation.ts:11:import { NextResponse } from "next/server";
./apps/web/lib/query/realtime-query-utils.ts:7:import type { SupabaseClient } from "@supabase/supabase-js";
./apps/web/lib/query/realtime-query-utils.ts:8:import { useQueryClient } from "@tanstack/react-query";
./apps/web/lib/query/realtime-query-utils.ts:9:import type { QueryClient } from "@tanstack/react-query";
./apps/web/lib/query/realtime-query-utils.ts:10:import { useEffect } from "react";
./apps/web/lib/query/query-utils.ts:10:import { apiClient, ApiHelpers } from "@neonpro/shared/api-client";
./apps/web/lib/query/query-utils.ts:11:import type { ApiClient, ApiResponse } from "@neonpro/shared/api-client";
./apps/web/lib/query/query-utils.ts:12:import { useInfiniteQuery, useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
./apps/web/lib/query/query-utils.ts:13:import type {
./apps/web/lib/query/query-utils.ts:21:import { toast } from "sonner";
./apps/web/lib/query/query-utils.ts:23:import { HealthcareQueryConfig, QueryKeys } from "@/providers/query-provider";
./apps/web/lib/backup/setup.js:13:const fs = require("node:fs");
./apps/web/lib/backup/setup.js:14:const { execSync } = require("node:child_process");
./apps/web/lib/backup/setup.js:15:const readline = require("node:readline");
./apps/web/lib/healthcare/lgpd-consent-management.ts:6:import { supabase } from "@/lib/supabase";
./apps/web/lib/healthcare/lgpd-consent-management.ts:7:import type { ConsentRecord, DataSubjectRequest, DataSubjectRightType } from "@/types/lgpd";
./apps/web/lib/hooks/use-supplier.ts:1:import { useState } from "react";
./apps/web/lib/hooks/use-patient-data.ts:1:import { useState } from "react";
./apps/web/lib/hooks/use-analytics.ts:1:import { useState } from "react";
./apps/web/lib/hooks/use-auth.ts:1:import { useState } from "react";
./apps/web/lib/hooks/use-patient-auth.ts:1:import { useState } from "react";
./apps/web/lib/hooks/use-notifications.ts:1:import { useState } from "react";
./apps/web/lib/hooks/use-optimized-supabase.ts:1:import { useState } from "react";
./apps/web/lib/hooks/use-billing.ts:1:import { useState } from "react";
./apps/web/lib/validations/signup-schema.ts:1:import { z } from "zod";
./apps/web/lib/router.tsx:9:import { useAuth } from "@/contexts/auth-context";
./apps/web/lib/router.tsx:10:import { apiClient } from "@neonpro/shared/api-client";
./apps/web/lib/router.tsx:11:import type { UserRole } from "@neonpro/shared/schemas";
./apps/web/lib/router.tsx:12:import type { QueryClient } from "@tanstack/react-query";
./apps/web/lib/router.tsx:13:import { createRootRoute, createRoute, createRouter, Link, redirect } from "@tanstack/react-router";
./apps/web/lib/router.tsx:14:import React from "react";
./apps/web/lib/router.tsx:15:import { z } from "zod";
./apps/web/lib/compliance/lgpd-core.ts:9:import { createClient } from "@supabase/supabase-js";
./apps/web/lib/compliance/healthcare-compliance-validator.ts:7:import { AuditEventType, AuditSeverity, UnifiedAuditService } from "@neonpro/security";
./apps/web/lib/supabase/hooks.ts:9:import type { Appointment } from "@neonpro/database";
./apps/web/lib/supabase/hooks.ts:10:import { useCallback, useEffect, useState } from "react";
./apps/web/lib/supabase/hooks.ts:11:import { createClient } from "./client";
./apps/web/lib/supabase/queries.ts:8:import type { Database } from "@/types/supabase";
./apps/web/lib/supabase/professionals.ts:1:import { createClient } from "@/app/utils/supabase/server";
./apps/web/lib/supabase/middleware.ts:7:import { createServerClient } from "@supabase/ssr";
./apps/web/lib/supabase/middleware.ts:8:import { NextResponse } from "next/server";
./apps/web/lib/supabase/middleware.ts:9:import type { NextRequest } from "next/server";
./apps/web/lib/supabase/utils.ts:8:import type { Database } from "@/types/supabase";
./apps/web/lib/supabase/server.ts:7:import { createServerClient } from "@neonpro/database";
./apps/web/lib/supabase/server.ts:8:import { cookies } from "next/headers";
./apps/web/lib/supabase/client.ts:7:import { createClient as createDbClient } from "@neonpro/database";
./apps/web/lib/supabase.ts:1:import { createClient } from "@supabase/supabase-js";
./apps/web/lib/supabase.ts:2:import type { Database } from "../types/supabase";
./apps/web/lib/lgpd/automation/automation.test.ts:4:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/lib/placeholders/qrcode-react.ts:6:import React from "react";
./apps/web/lib/placeholders/qrcode-react.ts:7:import type { ComponentType } from "react";
./apps/web/lib/utils.ts:1:import { clsx } from "clsx";
./apps/web/lib/utils.ts:2:import type { ClassValue } from "clsx";
./apps/web/lib/utils.ts:3:import { twMerge } from "tailwind-merge";
./apps/web/lib/toast-helpers.ts:1:import { toast } from "@/components/ui/use-toast";
./apps/web/lib/monitoring.ts:6:import { Analytics } from "@vercel/analytics/react";
./apps/web/lib/monitoring.ts:7:import { SpeedInsights } from "@vercel/speed-insights/next";
./apps/web/lib/services/configuration.ts:2:import { supabase } from "@/lib/supabase";
./apps/web/lib/services/stock-analytics.service.ts:1:import { createClient } from "@/lib/supabase/client";
./apps/web/lib/services/stock-analytics.service.ts:2:import type {
./apps/web/lib/services/api-gateway.ts:6:import rateLimit from "express-rate-limit";
./apps/web/lib/services/api-gateway.ts:7:import slowDown from "express-slow-down";
./apps/web/lib/services/api-gateway.ts:8:import { NextResponse } from "next/server";
./apps/web/lib/services/api-gateway.ts:9:import type { NextRequest } from "next/server";
./apps/web/lib/services/regulatory-reporting.ts:6:import { supabase } from "@/lib/supabase/client";
./apps/web/lib/services/compliance.ts:2:import { supabase } from "@/lib/supabase";
./apps/web/lib/services/voice-navigation-service.ts:7:import { supabase } from "@/lib/supabase";
./apps/web/lib/services/compliance-risk-prediction.ts:6:import { supabase } from "@/lib/supabase/client";
./apps/web/lib/services/auth.ts:3:import { supabase } from "@/lib/supabase";
./apps/web/lib/services/auth.ts:4:import type { Session, User } from "@supabase/supabase-js";
./apps/web/lib/services/patient.ts:2:import { supabase } from "@/lib/supabase";
./apps/web/lib/services/notification.ts:2:import { supabase } from "@/lib/supabase";
./apps/web/lib/services/stock-notifications.service.ts:1:import { createClient } from "@/lib/supabase/client";
./apps/web/lib/services/stock-notifications.service.ts:2:import type { NotificationChannel, StockAlert } from "@/lib/types/stock-alerts";
./apps/web/lib/services/monitoring.ts:2:import { supabase } from "@/lib/supabase";
./apps/web/lib/services/lgpd-compliance-tracker.ts:6:import { supabase } from "@/lib/supabase/client";
./apps/web/lib/services/financial.ts:2:import { supabase } from "@/lib/supabase";
./apps/web/lib/services/compliance-validation.ts:6:import { HealthcareComplianceValidator } from "@/lib/compliance/healthcare-compliance-validator";
./apps/web/lib/services/compliance-validation.ts:7:import { supabase } from "@/lib/supabase/client";
./apps/web/lib/services/compliance-validation.ts:8:import { complianceRiskPredictionService } from "./compliance-risk-prediction";
./apps/web/lib/services/compliance-validation.ts:9:import { lgpdComplianceTracker } from "./lgpd-compliance-tracker";
./apps/web/lib/services/compliance-validation.ts:10:import { regulatoryReportingService } from "./regulatory-reporting";
./apps/web/lib/ai/model-management.ts:10:import { createClient } from "@/lib/supabase/client";
./apps/web/lib/ai/model-management.ts:11:import type { Database } from "@/types/supabase";
./apps/web/lib/ai/drift-detection.ts:10:import { createClient } from "@/lib/supabase/client";
./apps/web/lib/ai/drift-detection.ts:11:import type { Database } from "@/types/supabase";
./apps/web/lib/ai/risk-assessment/risk-scoring-algorithm.ts:1:import { riskAssessmentInputSchema } from "@/app/lib/validations/risk-assessment-automation";
./apps/web/lib/ai/risk-assessment/risk-scoring-algorithm.ts:2:import type {
./apps/web/lib/ai/risk-assessment/risk-scoring-algorithm.ts:11:import { z } from "zod";
./apps/web/lib/ai/risk-assessment/risk-scoring-algorithm.ts:12:import {
./apps/web/lib/ai/risk-assessment/ml-risk-models.ts:1:import type {
./apps/web/lib/ai/risk-assessment/ml-risk-models.ts:5:import {
./apps/web/lib/ai/no-show-engine.ts:10:import { createClient } from "@/lib/supabase/client";
./apps/web/lib/ai/no-show-engine.ts:11:import { modelManager } from "./model-management";
./apps/web/lib/ai/no-show-engine.ts:12:import type { ModelPerformanceMetrics } from "./model-management";
./apps/web/lib/ai/patient-insights/risk-assessment.ts:1:import { riskAssessmentService } from "@/app/lib/services/risk-assessment-automation";
./apps/web/lib/ai/patient-insights/risk-assessment.ts:2:import type {
./apps/web/lib/ai-scheduling.ts:7:import { AuditEventType, AuditSeverity, UnifiedAuditService } from "@neonpro/security";
./apps/web/lib/ai-scheduling.ts:8:import { validateHealthcareAccess } from "@neonpro/security/auth";
./apps/web/lib/ai-scheduling.ts:9:import { z } from "zod";
./apps/web/src/types/analytics.ts:10:import type { LucideIcon } from "lucide-react";
./apps/web/src/contexts/theme-context.tsx:3:import React, { createContext, useContext, useEffect, useState } from "react";
./apps/web/src/contexts/api-context.tsx:3:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./apps/web/src/contexts/api-context.tsx:4:import { ReactQueryDevtools } from "@tanstack/react-query-devtools";
./apps/web/src/contexts/api-context.tsx:5:import React, { createContext, useContext } from "react";
./apps/web/src/contexts/auth-context.tsx:3:import { AuthApiClient } from "@/lib/api-client";
./apps/web/src/contexts/auth-context.tsx:4:import React, { createContext, useContext, useEffect, useState } from "react";
./apps/web/src/components/layouts/sidebar.tsx:3:import { cn } from "@/lib/utils";
./apps/web/src/components/layouts/sidebar.tsx:4:import { Dialog, Transition } from "@headlessui/react";
./apps/web/src/components/layouts/sidebar.tsx:5:import { Calendar, FileText, Home, Menu, Shield, User, Users, X } from "lucide-react";
./apps/web/src/components/layouts/sidebar.tsx:6:import Link from "next/link";
./apps/web/src/components/layouts/sidebar.tsx:7:import { usePathname } from "next/navigation";
./apps/web/src/components/layouts/sidebar.tsx:8:import { Fragment } from "react";
./apps/web/src/components/layouts/header.tsx:3:import { useAuth } from "@/hooks/use-auth";
./apps/web/src/components/layouts/header.tsx:4:import { cn } from "@/lib/utils";
./apps/web/src/components/layouts/header.tsx:5:import { Menu, Transition } from "@headlessui/react";
./apps/web/src/components/layouts/header.tsx:6:import { Bell, Menu as MenuIcon, Search, User } from "lucide-react";
./apps/web/src/components/layouts/header.tsx:7:import { Fragment } from "react";
./apps/web/src/components/analytics/PatientOutcomePrediction.tsx:13:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/src/components/analytics/PatientOutcomePrediction.tsx:14:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/analytics/PatientOutcomePrediction.tsx:15:import { Button } from "@/components/ui/button";
./apps/web/src/components/analytics/PatientOutcomePrediction.tsx:16:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/analytics/PatientOutcomePrediction.tsx:17:import { Progress } from "@/components/ui/progress";
./apps/web/src/components/analytics/PatientOutcomePrediction.tsx:18:import {
./apps/web/src/components/analytics/PatientOutcomePrediction.tsx:25:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/src/components/analytics/PatientOutcomePrediction.tsx:26:import { cn } from "@/lib/utils";
./apps/web/src/components/analytics/PatientOutcomePrediction.tsx:27:import type {
./apps/web/src/components/analytics/PatientOutcomePrediction.tsx:35:import {
./apps/web/src/components/analytics/PatientOutcomePrediction.tsx:57:import React, { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/src/components/analytics/BrazilianComplianceTracker.tsx:13:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/src/components/analytics/BrazilianComplianceTracker.tsx:14:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/analytics/BrazilianComplianceTracker.tsx:15:import { Button } from "@/components/ui/button";
./apps/web/src/components/analytics/BrazilianComplianceTracker.tsx:16:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/analytics/BrazilianComplianceTracker.tsx:17:import { Progress } from "@/components/ui/progress";
./apps/web/src/components/analytics/BrazilianComplianceTracker.tsx:18:import {
./apps/web/src/components/analytics/BrazilianComplianceTracker.tsx:25:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/src/components/analytics/BrazilianComplianceTracker.tsx:26:import { cn } from "@/lib/utils";
./apps/web/src/components/analytics/BrazilianComplianceTracker.tsx:27:import type {
./apps/web/src/components/analytics/BrazilianComplianceTracker.tsx:36:import {
./apps/web/src/components/analytics/BrazilianComplianceTracker.tsx:72:import React, { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/src/components/analytics/RealTimeMonitoringDashboard.tsx:13:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/src/components/analytics/RealTimeMonitoringDashboard.tsx:14:import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
./apps/web/src/components/analytics/RealTimeMonitoringDashboard.tsx:15:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/analytics/RealTimeMonitoringDashboard.tsx:16:import { Button } from "@/components/ui/button";
./apps/web/src/components/analytics/RealTimeMonitoringDashboard.tsx:17:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/analytics/RealTimeMonitoringDashboard.tsx:18:import { Progress } from "@/components/ui/progress";
./apps/web/src/components/analytics/RealTimeMonitoringDashboard.tsx:19:import {
./apps/web/src/components/analytics/RealTimeMonitoringDashboard.tsx:26:import { cn } from "@/lib/utils";
./apps/web/src/components/analytics/RealTimeMonitoringDashboard.tsx:27:import type {
./apps/web/src/components/analytics/RealTimeMonitoringDashboard.tsx:36:import {
./apps/web/src/components/analytics/RealTimeMonitoringDashboard.tsx:74:import React, { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/src/components/analytics/AnalyticsDashboard.tsx:13:import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
./apps/web/src/components/analytics/AnalyticsDashboard.tsx:14:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/analytics/AnalyticsDashboard.tsx:15:import { Button } from "@/components/ui/button";
./apps/web/src/components/analytics/AnalyticsDashboard.tsx:16:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/analytics/AnalyticsDashboard.tsx:17:import { Progress } from "@/components/ui/progress";
./apps/web/src/components/analytics/AnalyticsDashboard.tsx:18:import {
./apps/web/src/components/analytics/AnalyticsDashboard.tsx:25:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/src/components/analytics/AnalyticsDashboard.tsx:26:import { cn } from "@/lib/utils";
./apps/web/src/components/analytics/AnalyticsDashboard.tsx:27:import type {
./apps/web/src/components/analytics/AnalyticsDashboard.tsx:37:import {
./apps/web/src/components/analytics/AnalyticsDashboard.tsx:67:import React, { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/src/components/healthcare/ComplianceIndicators.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/healthcare/ComplianceIndicators.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/src/components/healthcare/ComplianceIndicators.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/healthcare/ComplianceIndicators.tsx:6:import { Progress } from "@/components/ui/progress";
./apps/web/src/components/healthcare/ComplianceIndicators.tsx:7:import { cn } from "@/lib/utils";
./apps/web/src/components/healthcare/ComplianceIndicators.tsx:8:import {
./apps/web/src/components/healthcare/ComplianceIndicators.tsx:19:import React from "react";
./apps/web/src/components/healthcare/HealthcareMetricCard.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/healthcare/HealthcareMetricCard.tsx:4:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/healthcare/HealthcareMetricCard.tsx:5:import { Progress } from "@/components/ui/progress";
./apps/web/src/components/healthcare/HealthcareMetricCard.tsx:6:import { cn } from "@/lib/utils";
./apps/web/src/components/healthcare/HealthcareMetricCard.tsx:7:import {
./apps/web/src/components/healthcare/HealthcareMetricCard.tsx:18:import React from "react";
./apps/web/src/components/performance/performance-status.tsx:3:import {
./apps/web/src/components/performance/performance-status.tsx:7:import { useEffect, useState } from "react";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:3:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:7:import { Checkbox } from "@/components/ui/checkbox";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:8:import {
./apps/web/src/components/compliance/LGPDConsentManager.tsx:16:import { Input } from "@/components/ui/input";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:17:import { Label } from "@/components/ui/label";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:18:import { Progress } from "@/components/ui/progress";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:19:import {
./apps/web/src/components/compliance/LGPDConsentManager.tsx:26:import { Switch } from "@/components/ui/switch";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:27:import {
./apps/web/src/components/compliance/LGPDConsentManager.tsx:35:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:36:import { Textarea } from "@/components/ui/textarea";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:37:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:38:import { cn } from "@/lib/utils";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:39:import {
./apps/web/src/components/compliance/LGPDConsentManager.tsx:72:import React, { useEffect, useState } from "react";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:73:import { toast } from "sonner";
./apps/web/src/components/compliance/LGPDConsentManager.tsx:75:import type {
./apps/web/src/components/compliance/LGPDConsentManager.tsx:83:import {
./apps/web/src/components/compliance/ANVISATracker.tsx:3:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/src/components/compliance/ANVISATracker.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/compliance/ANVISATracker.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/src/components/compliance/ANVISATracker.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/compliance/ANVISATracker.tsx:7:import {
./apps/web/src/components/compliance/ANVISATracker.tsx:15:import { Input } from "@/components/ui/input";
./apps/web/src/components/compliance/ANVISATracker.tsx:16:import { Label } from "@/components/ui/label";
./apps/web/src/components/compliance/ANVISATracker.tsx:17:import {
./apps/web/src/components/compliance/ANVISATracker.tsx:24:import {
./apps/web/src/components/compliance/ANVISATracker.tsx:32:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/src/components/compliance/ANVISATracker.tsx:33:import { Textarea } from "@/components/ui/textarea";
./apps/web/src/components/compliance/ANVISATracker.tsx:34:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/src/components/compliance/ANVISATracker.tsx:35:import { cn } from "@/lib/utils";
./apps/web/src/components/compliance/ANVISATracker.tsx:36:import {
./apps/web/src/components/compliance/ANVISATracker.tsx:57:import React, { useEffect, useState } from "react";
./apps/web/src/components/compliance/ANVISATracker.tsx:58:import { toast } from "sonner";
./apps/web/src/components/compliance/ANVISATracker.tsx:60:import type {
./apps/web/src/components/compliance/ANVISATracker.tsx:67:import {
./apps/web/src/components/compliance/anvisa/ANVISASubstancesList.tsx:1:import { Card, CardContent, CardHeader, CardTitle } from "@neonpro/ui";
./apps/web/src/components/compliance/anvisa/ANVISASubstancesList.tsx:2:import { Badge, Button, Input } from "@neonpro/ui";
./apps/web/src/components/compliance/anvisa/ANVISASubstancesList.tsx:3:import React from "react";
./apps/web/src/components/compliance/anvisa/ANVISASubstancesList.tsx:5:import { Filter, Search } from "lucide-react";
./apps/web/src/components/compliance/anvisa/ANVISASubstancesList.tsx:6:import type { ANVISAControlledClass, ANVISASubstance } from "../../../types/compliance";
./apps/web/src/components/compliance/ANVISAHeader.tsx:1:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/compliance/ANVISAHeader.tsx:2:import { Button } from "@/components/ui/button";
./apps/web/src/components/compliance/ANVISAHeader.tsx:3:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/compliance/ANVISAHeader.tsx:4:import { AlertTriangle, FileText, RefreshCw, Shield } from "lucide-react";
./apps/web/src/components/compliance/ANVISAHeader.tsx:5:import React from "react";
./apps/web/src/components/compliance/ANVISAHeader.tsx:6:import type { ANVISASubstance, ControlledPrescription } from "../../types/compliance";
./apps/web/src/components/compliance/ComplianceDashboard.tsx:3:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/src/components/compliance/ComplianceDashboard.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/compliance/ComplianceDashboard.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/src/components/compliance/ComplianceDashboard.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/compliance/ComplianceDashboard.tsx:7:import { Progress } from "@/components/ui/progress";
./apps/web/src/components/compliance/ComplianceDashboard.tsx:8:import {
./apps/web/src/components/compliance/ComplianceDashboard.tsx:15:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/src/components/compliance/ComplianceDashboard.tsx:16:import { cn } from "@/lib/utils";
./apps/web/src/components/compliance/ComplianceDashboard.tsx:17:import {
./apps/web/src/components/compliance/ComplianceDashboard.tsx:54:import React, { useEffect, useState } from "react";
./apps/web/src/components/compliance/ComplianceDashboard.tsx:55:import { toast } from "sonner";
./apps/web/src/components/compliance/ComplianceDashboard.tsx:57:import type { ComplianceDashboardData } from "@/lib/compliance/compliance-dashboard";
./apps/web/src/components/compliance/ComplianceDashboard.tsx:58:import {
./apps/web/src/components/compliance/ANVISASubstancesList.tsx:1:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/compliance/ANVISASubstancesList.tsx:2:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/compliance/ANVISASubstancesList.tsx:3:import { Input } from "@/components/ui/input";
./apps/web/src/components/compliance/ANVISASubstancesList.tsx:4:import {
./apps/web/src/components/compliance/ANVISASubstancesList.tsx:11:import type { ControlledSubstanceClass } from "@/lib/compliance/anvisa-controlled-substances";
./apps/web/src/components/compliance/ANVISASubstancesList.tsx:12:import { AlertCircle, CheckCircle, Clock, Search } from "lucide-react";
./apps/web/src/components/compliance/ANVISASubstancesList.tsx:13:import React from "react";
./apps/web/src/components/compliance/ANVISASubstancesList.tsx:14:import { getSubstanceClassConfig, SUBSTANCE_CLASS_CONFIG } from "../../constants/anvisa-configs";
./apps/web/src/components/compliance/ANVISASubstancesList.tsx:15:import type { ANVISASubstance } from "../../types/compliance";
./apps/web/src/components/compliance/CFMValidator.tsx:7:import { cn } from "@neonpro/utils";
./apps/web/src/components/compliance/CFMValidator.tsx:8:import {
./apps/web/src/components/compliance/CFMValidator.tsx:21:import React, { useCallback, useEffect, useState } from "react";
./apps/web/src/components/compliance/CFMValidator.tsx:23:import type {
./apps/web/src/components/compliance/CFMValidator.tsx:28:import { CFMLicenseStatus, MedicalSpecialty } from "../../types/compliance";
./apps/web/src/components/compliance/CFMValidator.tsx:30:import { cfmUtils, cfmValidationService } from "../../lib/compliance/cfm-professional-validation";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:3:import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:6:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:7:import { Checkbox } from "@/components/ui/checkbox";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:8:import {
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:16:import { Input } from "@/components/ui/input";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:17:import { Label } from "@/components/ui/label";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:18:import { Progress } from "@/components/ui/progress";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:19:import {
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:26:import {
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:34:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:35:import { Textarea } from "@/components/ui/textarea";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:36:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:37:import { cn } from "@/lib/utils";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:38:import {
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:78:import React, { useEffect, useState } from "react";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:79:import { toast } from "sonner";
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:81:import type {
./apps/web/src/components/compliance/EmergencyProtocolsManager.tsx:89:import {
./apps/web/src/components/chat/MessageBubble.tsx:9:import { cn } from "@/lib/utils";
./apps/web/src/components/chat/MessageBubble.tsx:10:import type { ChatMessage } from "@/types/chat";
./apps/web/src/components/chat/MessageBubble.tsx:11:import { AIResponseData, MessageType, SenderType } from "@/types/chat";
./apps/web/src/components/chat/MessageBubble.tsx:12:import React, { useCallback, useState } from "react";
./apps/web/src/components/chat/VoiceCommands.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/chat/VoiceCommands.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/src/components/chat/VoiceCommands.tsx:5:import { Card } from "@/components/ui/card";
./apps/web/src/components/chat/VoiceCommands.tsx:6:import { Progress } from "@/components/ui/progress";
./apps/web/src/components/chat/VoiceCommands.tsx:7:import { Separator } from "@/components/ui/separator";
./apps/web/src/components/chat/VoiceCommands.tsx:8:import { cn } from "@/lib/utils";
./apps/web/src/components/chat/VoiceCommands.tsx:9:import type { HealthcareContext, MessageContent, SenderType } from "@/types/chat";
./apps/web/src/components/chat/VoiceCommands.tsx:10:import {
./apps/web/src/components/chat/VoiceCommands.tsx:25:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/src/components/chat/VoiceCommands.tsx:26:import { toast } from "sonner";
./apps/web/src/components/chat/ChatInterface.tsx:9:import { cn } from "@/lib/utils";
./apps/web/src/components/chat/ChatInterface.tsx:10:import type {
./apps/web/src/components/chat/ChatInterface.tsx:18:import { ConversationType } from "@/types/chat";
./apps/web/src/components/chat/ChatInterface.tsx:19:import React, { useCallback, useEffect, useRef, useState } from "react";
./apps/web/src/components/chat/ChatInterface.tsx:20:import ChatHeader from "./ChatHeader";
./apps/web/src/components/chat/ChatInterface.tsx:21:import ChatInput from "./ChatInput";
./apps/web/src/components/chat/ChatInterface.tsx:22:import ChatSidebar from "./ChatSidebar";
./apps/web/src/components/chat/ChatInterface.tsx:23:import MessageBubble from "./MessageBubble";
./apps/web/src/components/chat/ChatInterface.tsx:24:import TypingIndicator from "./TypingIndicator";
./apps/web/src/components/chat/ChatInput.tsx:9:import { cn } from "@/lib/utils";
./apps/web/src/components/chat/ChatInput.tsx:10:import type { HealthcareContext, MessageType } from "@/types/chat";
./apps/web/src/components/chat/ChatInput.tsx:11:import type { KeyboardEvent } from "react";
./apps/web/src/components/chat/ChatInput.tsx:12:import React, { useCallback, useEffect, useRef, useState } from "react";
./apps/web/src/components/chat/TypingIndicator.tsx:3:import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
./apps/web/src/components/chat/TypingIndicator.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/chat/TypingIndicator.tsx:5:import { cn } from "@/lib/utils";
./apps/web/src/components/chat/TypingIndicator.tsx:6:import type { HealthcareContext, SenderType } from "@/types/chat";
./apps/web/src/components/chat/TypingIndicator.tsx:7:import { Bot, Stethoscope, User } from "lucide-react";
./apps/web/src/components/chat/TypingIndicator.tsx:8:import { useEffect, useMemo, useState } from "react";
./apps/web/src/components/chat/ChatSidebar.tsx:9:import { cn } from "@/lib/utils";
./apps/web/src/components/chat/ChatSidebar.tsx:10:import type { ChatConversation, ConversationType, PresenceStatus } from "@/types/chat";
./apps/web/src/components/chat/ChatSidebar.tsx:11:import { SenderType } from "@/types/chat";
./apps/web/src/components/chat/ChatSidebar.tsx:12:import React, { useCallback, useMemo, useState } from "react";
./apps/web/src/components/chat/ChatHeader.tsx:9:import { cn } from "@/lib/utils";
./apps/web/src/components/chat/ChatHeader.tsx:10:import type { ChatConversation, PresenceStatus } from "@/types/chat";
./apps/web/src/components/chat/ChatHeader.tsx:11:import { ConversationType, SenderType } from "@/types/chat";
./apps/web/src/components/chat/ChatHeader.tsx:12:import React, { useCallback, useState } from "react";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.test.tsx:16:import "@testing-library/jest-dom";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.test.tsx:17:import { act, fireEvent, render, screen, within } from "@testing-library/react";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.test.tsx:18:import userEvent from "@testing-library/user-event";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.test.tsx:19:import { describe, expect, it, vi } from "vitest";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.test.tsx:22:import type { PerformanceMetrics } from "./PerformanceMonitoringDashboard";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.test.tsx:23:import PerformanceMonitoringDashboard from "./PerformanceMonitoringDashboard";
./apps/web/src/components/no-show-activation/StaffAlertSystem.tsx:3:import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
./apps/web/src/components/no-show-activation/StaffAlertSystem.tsx:4:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/no-show-activation/StaffAlertSystem.tsx:5:import { Button } from "@/components/ui/button";
./apps/web/src/components/no-show-activation/StaffAlertSystem.tsx:6:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/no-show-activation/StaffAlertSystem.tsx:7:import { ScrollArea } from "@/components/ui/scroll-area";
./apps/web/src/components/no-show-activation/StaffAlertSystem.tsx:8:import { Separator } from "@/components/ui/separator";
./apps/web/src/components/no-show-activation/StaffAlertSystem.tsx:9:import { cn } from "@/lib/utils";
./apps/web/src/components/no-show-activation/StaffAlertSystem.tsx:10:import {
./apps/web/src/components/no-show-activation/StaffAlertSystem.tsx:26:import React, { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.tsx:6:import { Progress } from "@/components/ui/progress";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.tsx:7:import {
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.tsx:14:import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.tsx:15:import { cn } from "@/lib/utils";
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.tsx:16:import {
./apps/web/src/components/no-show-activation/PerformanceMonitoringDashboard.tsx:35:import React, { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/src/components/no-show-activation/RiskScoreIndicator.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/no-show-activation/RiskScoreIndicator.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/src/components/no-show-activation/RiskScoreIndicator.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/no-show-activation/RiskScoreIndicator.tsx:6:import { Progress } from "@/components/ui/progress";
./apps/web/src/components/no-show-activation/RiskScoreIndicator.tsx:7:import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
./apps/web/src/components/no-show-activation/RiskScoreIndicator.tsx:8:import { cn } from "@/lib/utils";
./apps/web/src/components/no-show-activation/RiskScoreIndicator.tsx:9:import {
./apps/web/src/components/no-show-activation/RiskScoreIndicator.tsx:21:import React, { useCallback, useMemo, useState } from "react";
./apps/web/src/components/no-show-activation/AppointmentRiskList.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/no-show-activation/AppointmentRiskList.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/src/components/no-show-activation/AppointmentRiskList.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/no-show-activation/AppointmentRiskList.tsx:6:import { Input } from "@/components/ui/input";
./apps/web/src/components/no-show-activation/AppointmentRiskList.tsx:7:import {
./apps/web/src/components/no-show-activation/AppointmentRiskList.tsx:14:import { Separator } from "@/components/ui/separator";
./apps/web/src/components/no-show-activation/AppointmentRiskList.tsx:15:import { cn } from "@/lib/utils";
./apps/web/src/components/no-show-activation/AppointmentRiskList.tsx:16:import {
./apps/web/src/components/no-show-activation/AppointmentRiskList.tsx:31:import React, { useCallback, useEffect, useMemo, useState } from "react";
./apps/web/src/components/no-show-activation/AppointmentRiskList.tsx:32:import type { RiskScoreData } from "./RiskScoreIndicator";
./apps/web/src/components/no-show-activation/AppointmentRiskList.tsx:33:import RiskScoreIndicator from "./RiskScoreIndicator";
./apps/web/src/components/ui/progress.tsx:3:import { cn } from "@/lib/utils";
./apps/web/src/components/ui/progress.tsx:4:import * as ProgressPrimitive from "@radix-ui/react-progress";
./apps/web/src/components/ui/progress.tsx:5:import * as React from "react";
./apps/web/src/components/ui/button.tsx:1:import { Slot } from "@radix-ui/react-slot";
./apps/web/src/components/ui/button.tsx:2:import { cva } from "class-variance-authority";
./apps/web/src/components/ui/button.tsx:3:import type { VariantProps } from "class-variance-authority";
./apps/web/src/components/ui/button.tsx:4:import * as React from "react";
./apps/web/src/components/ui/button.tsx:6:import { cn } from "@/lib/utils";
./apps/web/src/components/ui/badge.tsx:1:import { cn } from "@/lib/utils";
./apps/web/src/components/ui/badge.tsx:2:import { cva } from "class-variance-authority";
./apps/web/src/components/ui/badge.tsx:3:import type { VariantProps } from "class-variance-authority";
./apps/web/src/components/ui/badge.tsx:4:import * as React from "react";
./apps/web/src/components/ui/card.tsx:1:import * as React from "react";
./apps/web/src/components/ui/card.tsx:3:import { cn } from "@/lib/utils";
./apps/web/src/components/ui/dropdown-menu.tsx:3:import { cn } from "@/lib/utils";
./apps/web/src/components/ui/dropdown-menu.tsx:4:import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu";
./apps/web/src/components/ui/dropdown-menu.tsx:5:import { Check, ChevronRight, Circle } from "lucide-react";
./apps/web/src/components/ui/dropdown-menu.tsx:6:import * as React from "react";
./apps/web/src/components/ui/separator.tsx:3:import { cn } from "@/lib/utils";
./apps/web/src/components/ui/separator.tsx:4:import * as SeparatorPrimitive from "@radix-ui/react-separator";
./apps/web/src/components/ui/separator.tsx:5:import * as React from "react";
./apps/web/src/components/ui/label.tsx:3:import { cn } from "@/lib/utils";
./apps/web/src/components/ui/label.tsx:4:import * as LabelPrimitive from "@radix-ui/react-label";
./apps/web/src/components/ui/label.tsx:5:import { cva } from "class-variance-authority";
./apps/web/src/components/ui/label.tsx:6:import type { VariantProps } from "class-variance-authority";
./apps/web/src/components/ui/label.tsx:7:import * as React from "react";
./apps/web/src/components/ui/switch.tsx:3:import { cn } from "@/lib/utils";
./apps/web/src/components/ui/switch.tsx:4:import * as SwitchPrimitives from "@radix-ui/react-switch";
./apps/web/src/components/ui/switch.tsx:5:import * as React from "react";
./apps/web/src/components/ui/loading/index.tsx:1:import { cn } from "@/lib/utils";
./apps/web/src/components/ui/loading/index.tsx:2:import * as React from "react";
./apps/web/src/components/ui/textarea.tsx:1:import { cn } from "@/lib/utils";
./apps/web/src/components/ui/textarea.tsx:2:import * as React from "react";
./apps/web/src/components/ui/error/default-error-fallback.tsx:1:import { cn } from "@/lib/utils";
./apps/web/src/components/ui/error/default-error-fallback.tsx:2:import { AlertTriangle, RefreshCw } from "lucide-react";
./apps/web/src/components/ui/error/default-error-fallback.tsx:3:import * as React from "react";
./apps/web/src/components/ui/error/error-boundary.tsx:1:import * as React from "react";
./apps/web/src/components/ui/error/error-boundary.tsx:2:import { DefaultErrorFallback } from "./default-error-fallback";
./apps/web/src/components/emergency/CriticalAllergiesPanel.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/emergency/CriticalAllergiesPanel.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/src/components/emergency/CriticalAllergiesPanel.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/emergency/CriticalAllergiesPanel.tsx:6:import { cn } from "@/lib/utils";
./apps/web/src/components/emergency/CriticalAllergiesPanel.tsx:7:import {
./apps/web/src/components/emergency/CriticalAllergiesPanel.tsx:19:import React, { useState } from "react";
./apps/web/src/components/emergency/EmergencyPatientCard.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/emergency/EmergencyPatientCard.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/src/components/emergency/EmergencyPatientCard.tsx:5:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/components/emergency/EmergencyPatientCard.tsx:6:import { cn } from "@/lib/utils";
./apps/web/src/components/emergency/EmergencyPatientCard.tsx:7:import {
./apps/web/src/components/emergency/EmergencyPatientCard.tsx:19:import React, { useState } from "react";
./apps/web/src/components/emergency/SAMUDialButton.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/src/components/emergency/SAMUDialButton.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/src/components/emergency/SAMUDialButton.tsx:5:import { cn } from "@/lib/utils";
./apps/web/src/components/emergency/SAMUDialButton.tsx:6:import {
./apps/web/src/components/emergency/SAMUDialButton.tsx:16:import React, { useEffect, useState } from "react";
./apps/web/src/middleware.ts:1:import { NextResponse } from "next/server";
./apps/web/src/middleware.ts:2:import type { NextRequest } from "next/server";
./apps/web/src/hooks/use-ai-lazy-loading.ts:3:import { usePerformanceMonitor } from "@/providers/performance-monitor-provider";
./apps/web/src/hooks/use-ai-lazy-loading.ts:4:import { useCallback, useEffect, useState } from "react";
./apps/web/src/hooks/use-ai-lazy-loading.ts:80:      // Dynamic import of AI prediction services
./apps/web/src/hooks/useANVISAPrescriptionForm.ts:1:import { useState } from "react";
./apps/web/src/hooks/useANVISAPrescriptionForm.ts:2:import { ANVISAControlledSubstancesService } from "../lib/compliance/anvisa-controlled-substances";
./apps/web/src/hooks/useANVISAPrescriptionForm.ts:3:import type { ControlledPrescription } from "../types/compliance";
./apps/web/src/hooks/use-api.ts:1:import { ApiContext } from "@/contexts/api-context";
./apps/web/src/hooks/use-api.ts:2:import { useContext } from "react";
./apps/web/src/hooks/useANVISAFilters.ts:1:import { useMemo, useState } from "react";
./apps/web/src/hooks/useANVISAFilters.ts:2:import type {
./apps/web/src/hooks/use-auth.ts:1:import { AuthContext } from "@/contexts/auth-context";
./apps/web/src/hooks/use-auth.ts:2:import { useContext } from "react";
./apps/web/src/hooks/useANVISAData.ts:1:import { ANVISAControlledSubstancesService } from "@/lib/compliance/anvisa-controlled-substances";
./apps/web/src/hooks/useANVISAData.ts:2:import type { ANVISASubstance, ControlledPrescription } from "@/types/compliance";
./apps/web/src/hooks/useANVISAData.ts:3:import { useEffect, useState } from "react";
./apps/web/src/hooks/accessibility/use-keyboard-navigation.ts:3:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/src/hooks/use-emergency-voice-commands.ts:7:import { useToast } from "@/components/ui/use-toast";
./apps/web/src/hooks/use-emergency-voice-commands.ts:8:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/src/hooks/use-emergency-performance.ts:7:import { useToast } from "@/components/ui/use-toast";
./apps/web/src/hooks/use-emergency-performance.ts:8:import { useCallback, useEffect, useRef, useState } from "react";
./apps/web/src/hooks/use-emergency-performance.ts:102:        // In real implementation, would import from @neonpro/performance
./apps/web/src/app/layout.tsx:1:import type { Metadata } from "next";
./apps/web/src/app/layout.tsx:2:import { Inter, JetBrains_Mono, Lora } from "next/font/google";
./apps/web/src/app/layout.tsx:3:import "./globals.css";
./apps/web/src/app/layout.tsx:5:import { PerformanceStatus } from "@/components/performance/performance-status";
./apps/web/src/app/layout.tsx:6:import { Toaster } from "@/components/ui/toaster";
./apps/web/src/app/layout.tsx:7:import { ApiProvider } from "@/contexts/api-context";
./apps/web/src/app/layout.tsx:8:import { AuthProvider } from "@/contexts/auth-context";
./apps/web/src/app/layout.tsx:9:import { HealthcareThemeProvider } from "@/contexts/theme-context";
./apps/web/src/app/layout.tsx:10:import { PerformanceMonitorProvider } from "@/providers/performance-monitor-provider";
./apps/web/src/app/page.tsx:1:import { Button } from "@/components/ui/button";
./apps/web/src/app/page.tsx:2:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/app/page.tsx:3:import { BarChart3, Calendar, Lock, Shield, Stethoscope, Users } from "lucide-react";
./apps/web/src/app/page.tsx:4:import Link from "next/link";
./apps/web/src/app/(auth)/layout.tsx:1:import type { Metadata } from "next";
./apps/web/src/app/(auth)/login/page.tsx:3:import { zodResolver } from "@hookform/resolvers/zod";
./apps/web/src/app/(auth)/login/page.tsx:4:import { Eye, EyeOff, LogIn } from "lucide-react";
./apps/web/src/app/(auth)/login/page.tsx:5:import Link from "next/link";
./apps/web/src/app/(auth)/login/page.tsx:6:import { useRouter } from "next/navigation";
./apps/web/src/app/(auth)/login/page.tsx:7:import { useState } from "react";
./apps/web/src/app/(auth)/login/page.tsx:8:import { useForm } from "react-hook-form";
./apps/web/src/app/(auth)/login/page.tsx:10:import { LoadingButton } from "@/components/ui/loading";
./apps/web/src/app/(auth)/login/page.tsx:11:import { useAuth } from "@/hooks/use-auth";
./apps/web/src/app/(auth)/login/page.tsx:12:import { LoginSchema } from "@/lib/validations";
./apps/web/src/app/(auth)/login/page.tsx:13:import type { LoginInput } from "@/lib/validations";
./apps/web/src/app/(auth)/register/page.tsx:3:import { zodResolver } from "@hookform/resolvers/zod";
./apps/web/src/app/(auth)/register/page.tsx:4:import { Eye, EyeOff, UserPlus } from "lucide-react";
./apps/web/src/app/(auth)/register/page.tsx:5:import Link from "next/link";
./apps/web/src/app/(auth)/register/page.tsx:6:import { useRouter } from "next/navigation";
./apps/web/src/app/(auth)/register/page.tsx:7:import { useState } from "react";
./apps/web/src/app/(auth)/register/page.tsx:8:import { useForm } from "react-hook-form";
./apps/web/src/app/(auth)/register/page.tsx:10:import { LoadingButton } from "@/components/ui/loading";
./apps/web/src/app/(auth)/register/page.tsx:11:import { useAuth } from "@/hooks/use-auth";
./apps/web/src/app/(auth)/register/page.tsx:12:import { RegisterSchema } from "@/lib/validations";
./apps/web/src/app/(auth)/register/page.tsx:13:import type { RegisterInput } from "@/lib/validations";
./apps/web/src/app/api/integration-test/route.ts:1:import type { NextRequest } from "next/server";
./apps/web/src/app/api/integration-test/route.ts:2:import { NextResponse } from "next/server";
./apps/web/src/app/(dashboard)/profile/page.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/src/app/(dashboard)/profile/page.tsx:4:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/app/(dashboard)/profile/page.tsx:5:import { Input } from "@/components/ui/input";
./apps/web/src/app/(dashboard)/profile/page.tsx:6:import { Label } from "@/components/ui/label";
./apps/web/src/app/(dashboard)/profile/page.tsx:7:import { Separator } from "@/components/ui/separator";
./apps/web/src/app/(dashboard)/profile/page.tsx:8:import { Switch } from "@/components/ui/switch";
./apps/web/src/app/(dashboard)/profile/page.tsx:9:import { Textarea } from "@/components/ui/textarea";
./apps/web/src/app/(dashboard)/profile/page.tsx:10:import { useAuth } from "@/hooks/use-auth";
./apps/web/src/app/(dashboard)/profile/page.tsx:11:import { Bell, Camera, Eye, Mail, MapPin, Phone, Save, Shield, User } from "lucide-react";
./apps/web/src/app/(dashboard)/appointments/page.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/src/app/(dashboard)/appointments/page.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/src/app/(dashboard)/appointments/page.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/app/(dashboard)/appointments/page.tsx:6:import { Input } from "@/components/ui/input";
./apps/web/src/app/(dashboard)/appointments/page.tsx:7:import { Calendar, Clock, Filter, Plus, Search, User } from "lucide-react";
./apps/web/src/app/(dashboard)/appointments/page.tsx:8:import Link from "next/link";
./apps/web/src/app/(dashboard)/layout.tsx:3:import { Header } from "@/components/layouts/header";
./apps/web/src/app/(dashboard)/layout.tsx:4:import { Sidebar } from "@/components/layouts/sidebar";
./apps/web/src/app/(dashboard)/layout.tsx:5:import { ErrorBoundary } from "@/components/ui/error";
./apps/web/src/app/(dashboard)/layout.tsx:6:import { LoadingPage } from "@/components/ui/loading";
./apps/web/src/app/(dashboard)/layout.tsx:7:import { useAuth } from "@/hooks/use-auth";
./apps/web/src/app/(dashboard)/layout.tsx:8:import { useState } from "react";
./apps/web/src/app/(dashboard)/compliance/page.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/src/app/(dashboard)/compliance/page.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/src/app/(dashboard)/compliance/page.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/app/(dashboard)/compliance/page.tsx:6:import { Progress } from "@/components/ui/progress";
./apps/web/src/app/(dashboard)/compliance/page.tsx:7:import {
./apps/web/src/app/(dashboard)/dashboard/page.tsx:3:import { Button } from "@/components/ui/button";
./apps/web/src/app/(dashboard)/dashboard/page.tsx:4:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/app/(dashboard)/dashboard/page.tsx:5:import { Activity, AlertTriangle, Calendar, Plus, TrendingUp, Users } from "lucide-react";
./apps/web/src/app/(dashboard)/dashboard/page.tsx:6:import Link from "next/link";
./apps/web/src/app/(dashboard)/patients/page.tsx:3:import { Badge } from "@/components/ui/badge";
./apps/web/src/app/(dashboard)/patients/page.tsx:4:import { Button } from "@/components/ui/button";
./apps/web/src/app/(dashboard)/patients/page.tsx:5:import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/app/(dashboard)/patients/page.tsx:6:import {
./apps/web/src/app/(dashboard)/patients/page.tsx:12:import { Input } from "@/components/ui/input";
./apps/web/src/app/(dashboard)/patients/page.tsx:13:import { Filter, Mail, MoreHorizontal, Phone, Plus, Search, User } from "lucide-react";
./apps/web/src/app/(dashboard)/patients/page.tsx:14:import Link from "next/link";
./apps/web/src/providers/performance-monitor-provider.tsx:3:import type { HealthcarePerformanceMonitor } from "@neonpro/monitoring";
./apps/web/src/providers/performance-monitor-provider.tsx:4:import { createContext, useContext, useEffect, useRef, useState } from "react";
./apps/web/src/providers/performance-monitor-provider.tsx:88:        // Dynamic import to avoid SSR issues and optimize bundle
./apps/web/src/lib/validations.ts:1:import { z } from "zod";
./apps/web/src/lib/analytics/predictive-models.ts:11:import type {
./apps/web/src/lib/analytics/predictive-models.test.ts:17:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/src/lib/analytics/predictive-models.test.ts:19:// Import the module under test. Adjust the import if the source file path differs.
./apps/web/src/lib/analytics/predictive-models.test.ts:20:import { PredictiveModelsService } from "./predictive-models";
./apps/web/src/lib/compliance/anvisa-controlled-substances.ts:7:import type {
./apps/web/src/lib/compliance/emergency-medical-protocols.ts:1:import type {
./apps/web/src/lib/compliance/compliance-dashboard.ts:1:import type {
./apps/web/src/lib/compliance/compliance-dashboard.ts:12:import type { ControlledPrescription } from "./anvisa-controlled-substances";
./apps/web/src/lib/compliance/compliance-dashboard.ts:13:import { ANVISAControlledSubstancesService } from "./anvisa-controlled-substances";
./apps/web/src/lib/compliance/compliance-dashboard.ts:14:import type { CFMValidationResult } from "./cfm-professional-validation";
./apps/web/src/lib/compliance/compliance-dashboard.ts:15:import { CFMValidationService } from "./cfm-professional-validation";
./apps/web/src/lib/compliance/compliance-dashboard.ts:16:import type { EmergencyProtocol, EmergencyResponse } from "./emergency-medical-protocols";
./apps/web/src/lib/compliance/compliance-dashboard.ts:17:import { EmergencyMedicalProtocolsService } from "./emergency-medical-protocols";
./apps/web/src/lib/compliance/compliance-dashboard.ts:18:import type { LGPDConsentRecord } from "./lgpd-consent-management";
./apps/web/src/lib/compliance/compliance-dashboard.ts:19:import { LGPDConsentManagementService } from "./lgpd-consent-management";
./apps/web/src/lib/compliance/cfm-professional-validation.ts:7:import type {
./apps/web/src/lib/compliance/__tests__/cfm-professional-validation.spec.ts:15:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/src/lib/compliance/__tests__/cfm-professional-validation.spec.ts:18:import CFMValidationService, {
./apps/web/src/lib/compliance/anvisa-controlled-substances.test.ts:66:import Service, {
./apps/web/src/lib/compliance/anvisa-controlled-substances.test.ts:69:} from "./anvisa-controlled-substances"; // Adjust import if implementation filename differs
./apps/web/src/lib/compliance/lgpd-consent-management.ts:1:import type {
./apps/web/src/lib/compliance/lgpd-consent-management.ts:13:import { LGPDConsentStatus, LGPDDataSubjectRights, LGPDLegalBasis } from "@/types/compliance";
./apps/web/src/lib/chat/ai-healthcare-integration.ts:18:import {
./apps/web/src/lib/chat/chat-workflows.ts:20:import type {
./apps/web/src/lib/chat/chat-workflows.ts:26:import { ConversationType, SenderType } from "@/types/chat";
./apps/web/src/lib/chat/supabase-realtime.ts:18:import type {
./apps/web/src/lib/chat/supabase-realtime.ts:26:import type { RealtimeChannel, SupabaseClient } from "@supabase/supabase-js";
./apps/web/src/lib/chat/supabase-realtime.ts:27:import { createClient } from "@supabase/supabase-js";
./apps/web/src/lib/chat/lgpd-chat-compliance.ts:19:import type { ChatMessage, HealthcareContext, MessageContent } from "@/types/chat";
./apps/web/src/lib/chat/__tests__/supabase-realtime.chat.spec.ts:1:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/src/lib/chat/__tests__/supabase-realtime.chat.spec.ts:3:// Import the SUT (system under test). We import from the implementation file.
./apps/web/src/lib/chat/__tests__/supabase-realtime.chat.spec.ts:5:import SupabaseRealtimeChat, { getSupabaseRealtimeChat } from "../supabase-realtime";
./apps/web/src/lib/chat/__tests__/supabase-realtime.chat.spec.ts:6:import type { SupabaseRealtimeConfig } from "../supabase-realtime";
./apps/web/src/lib/no-show-activation/workflow-automation-service.ts:15:import type { RiskScoreData, StaffAlert, StaffMember } from "@/components/no-show-activation";
./apps/web/src/lib/utils.ts:1:import { clsx } from "clsx";
./apps/web/src/lib/utils.ts:2:import type { ClassValue } from "clsx";
./apps/web/src/lib/utils.ts:3:import { twMerge } from "tailwind-merge";
./apps/web/src/lib/api-client.ts:1:import type { AppType } from "@neonpro/api";
./apps/web/src/lib/api-client.ts:2:import { hc } from "hono/client";
./apps/web/src/lib/emergency/performance-validation.ts:7:import { emergencyCache } from "./emergency-cache";
./apps/web/src/lib/emergency/performance-validation.ts:8:import {
./apps/web/src/lib/emergency/accessibility-test-runner.ts:6:import type { AccessibilityTestResult } from "./emergency-accessibility";
./apps/web/src/lib/emergency/accessibility-test-runner.ts:7:import {
./apps/web/src/lib/emergency/run-accessibility-tests.ts:6:import { emergencyAccessibilityTestRunner } from "./accessibility-test-runner";
./apps/web/src/lib/emergency/run-accessibility-tests.ts:7:import { emergencyAccessibility } from "./emergency-accessibility";
./apps/web/src/lib/emergency/run-performance-validation.ts:6:import { emergencyPerformanceValidator } from "./performance-validation";
./apps/web/src/lib/emergency/emergency-cache.test.ts:9:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./apps/web/src/lib/emergency/emergency-cache.test.ts:10:import type { EmergencyPatientCache } from "./emergency-cache";
./apps/web/src/lib/emergency/emergency-cache.test.ts:129:  // Move import to top of file
./apps/web/src/features/ar-simulator/components/WebARViewer.tsx:10:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/src/features/ar-simulator/components/WebARViewer.tsx:11:import { Badge } from "@/components/ui/badge";
./apps/web/src/features/ar-simulator/components/WebARViewer.tsx:12:import { Button } from "@/components/ui/button";
./apps/web/src/features/ar-simulator/components/WebARViewer.tsx:13:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/features/ar-simulator/components/WebARViewer.tsx:14:import {
./apps/web/src/features/ar-simulator/components/WebARViewer.tsx:24:import { useEffect, useRef, useState } from "react";
./apps/web/src/features/ar-simulator/components/ARResultsSimulator.tsx:10:import { Badge } from "@/components/ui/badge";
./apps/web/src/features/ar-simulator/components/ARResultsSimulator.tsx:11:import { Button } from "@/components/ui/button";
./apps/web/src/features/ar-simulator/components/ARResultsSimulator.tsx:12:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/features/ar-simulator/components/ARResultsSimulator.tsx:13:import { Progress } from "@/components/ui/progress";
./apps/web/src/features/ar-simulator/components/ARResultsSimulator.tsx:14:import { Slider } from "@/components/ui/slider";
./apps/web/src/features/ar-simulator/components/ARResultsSimulator.tsx:15:import {
./apps/web/src/features/ar-simulator/components/ARResultsSimulator.tsx:26:import { useEffect, useState } from "react";
./apps/web/src/features/ar-simulator/components/_inactive_WebARViewer.tsx:10:import { Alert, AlertDescription } from "@/components/ui/alert";
./apps/web/src/features/ar-simulator/components/_inactive_WebARViewer.tsx:11:import { Badge } from "@/components/ui/badge";
./apps/web/src/features/ar-simulator/components/_inactive_WebARViewer.tsx:12:import { Button } from "@/components/ui/button";
./apps/web/src/features/ar-simulator/components/_inactive_WebARViewer.tsx:13:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/features/ar-simulator/components/_inactive_WebARViewer.tsx:14:import {
./apps/web/src/features/ar-simulator/components/_inactive_WebARViewer.tsx:24:import { useEffect, useRef, useState } from "react";
./apps/web/src/features/ar-simulator/components/_inactive_ARResultsSimulator.tsx:10:import { Badge } from "@/components/ui/badge";
./apps/web/src/features/ar-simulator/components/_inactive_ARResultsSimulator.tsx:11:import { Button } from "@/components/ui/button";
./apps/web/src/features/ar-simulator/components/_inactive_ARResultsSimulator.tsx:12:import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
./apps/web/src/features/ar-simulator/components/_inactive_ARResultsSimulator.tsx:13:import { Progress } from "@/components/ui/progress";
./apps/web/src/features/ar-simulator/components/_inactive_ARResultsSimulator.tsx:14:import { Slider } from "@/components/ui/slider";
./apps/web/src/features/ar-simulator/components/_inactive_ARResultsSimulator.tsx:15:import {
./apps/web/src/features/ar-simulator/components/_inactive_ARResultsSimulator.tsx:26:import { useEffect, useState } from "react";
./apps/web/src/features/ar-simulator/hooks/useARSimulator.ts:10:import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
./apps/web/src/features/ar-simulator/hooks/useARSimulator.ts:11:import { useCallback, useEffect, useState } from "react";
./apps/web/src/features/ar-simulator/hooks/_inactive_useARSimulator.ts:10:import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
./apps/web/src/features/ar-simulator/hooks/_inactive_useARSimulator.ts:11:import { useCallback, useEffect, useState } from "react";
./apps/web/src/features/ar-simulator/hooks/_inactive_useARSimulator_backup.ts:10:import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
./apps/web/src/features/ar-simulator/hooks/_inactive_useARSimulator_backup.ts:11:import { useCallback, useEffect, useState } from "react";
./apps/web/src/features/performance/index.ts:3:import { useEffect } from "react";
./apps/web/src/features/performance/index.ts:27:    // Dynamic import for Next.js web vitals
./apps/web/src/constants/anvisa-configs.ts:1:import {
./apps/web/src/constants/anvisa-configs.ts:11:import type {
./turbo/generators/config.ts:1:import type { PlopTypes } from "@turbo/gen";
./scripts/sync-mcp-config.js:8:import fs from "node:fs";
./scripts/sync-mcp-config.js:9:import path from "node:path";
./scripts/sync-mcp-config.js:10:import { fileURLToPath } from "node:url";
./scripts/architecture-optimization-suite.js:15:import fs from "node:fs";
./scripts/architecture-optimization-suite.js:16:import path from "node:path";
./scripts/architecture-optimization-suite.js:17:import { execSync } from "node:child_process";
./scripts/architecture-optimization-suite.js:171:  // Update AI package to import from @neonpro/cache
./scripts/architecture-optimization-suite.js:209:// Update import statements
./scripts/architecture-optimization-suite.js:222:    // Update import statements
./vitest.setup.ts:1:import { vi } from "vitest";
./vitest.setup.ts:2:import "@testing-library/jest-dom/vitest";
./vitest.setup.ts:3:import React from "react";
./tools/workspace-optimization.ts:7:import { promises as fs } from "node:fs";
./tools/workspace-optimization.ts:8:import { join } from "node:path";
./tools/workspace-optimization.ts:9:import { logger } from "../apps/api/src/lib/logger";
./tools/tests/test-utils.ts:1:import { vi } from "vitest";
./tools/tests/setup.ts:6:import { cleanup } from "@testing-library/react";
./tools/tests/setup.ts:7:import { afterEach, beforeEach, vi } from "vitest";
./tools/tests/setup.ts:8:import "@testing-library/jest-dom";
./tools/tests/test-utils.tsx:5:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./tools/tests/test-utils.tsx:6:import { render, renderHook } from "@testing-library/react";
./tools/tests/test-utils.tsx:7:import type { RenderOptions } from "@testing-library/react";
./tools/tests/test-utils.tsx:8:import type React from "react";
./tools/tests/integration/setup/global-setup.ts:6:import { createClient } from "@supabase/supabase-js";
./tools/tests/integration/setup/global-setup.ts:7:import { execSync } from "node:child_process";
./tools/tests/integration/setup/integration-setup.ts:6:import { createClient } from "@supabase/supabase-js";
./tools/tests/integration/setup/integration-setup.ts:7:import { cleanup } from "@testing-library/react";
./tools/tests/integration/setup/integration-setup.ts:8:import { afterAll, afterEach, beforeAll, beforeEach, vi } from "vitest";
./tools/e2e/global-setup.ts:1:import type { FullConfig } from "@playwright/test";
./tools/e2e/global-setup.ts:2:import "dotenv/config";
./tools/e2e/global-setup.ts:4:import { chromium } from "@playwright/test";
./tools/e2e/global-setup.ts:5:import { createClient } from "@supabase/supabase-js";
./tools/e2e/global-setup.ts:6:import fs from "node:fs";
./tools/e2e/global-setup.ts:7:import path from "node:path";
./tools/e2e/tests/example/patients-management.spec.ts:1:import { expect, test } from "@playwright/test";
./tools/e2e/tests/example/patients-management.spec.ts:2:import { DashboardPage } from "../../pages/DashboardPage";
./tools/e2e/tests/example/patients-management.spec.ts:3:import { LoginPage } from "../../pages/LoginPage";
./tools/e2e/tests/example/patients-management.spec.ts:4:import { PatientsPage } from "../../pages/PatientsPage";
./tools/e2e/tests/example/patients-management.spec.ts:5:import { TEST_CONSTANTS, TestUtils } from "../../utils/test-utils";
./tools/e2e/tests/example/patients-management.spec.ts:191:  test("should import patients from CSV", async ({ page }) => {
./tools/e2e/tests/example/login-flow.spec.ts:1:import { expect, test } from "@playwright/test";
./tools/e2e/tests/example/login-flow.spec.ts:2:import { DashboardPage } from "../../pages/DashboardPage";
./tools/e2e/tests/example/login-flow.spec.ts:3:import { LoginPage } from "../../pages/LoginPage";
./tools/e2e/tests/example/login-flow.spec.ts:4:import { TEST_CONSTANTS, TestUtils } from "../../utils/test-utils";
./tools/e2e/tests/performance/patient-dashboard.performance.spec.ts:6:import { expect, test } from "@playwright/test";
./tools/e2e/tests/performance/patient-dashboard.performance.spec.ts:7:import {
./tools/e2e/tests/performance/patient-dashboard.performance.spec.ts:13:import { PerformanceMonitor, PerformanceReporter } from "../../utils/performance-metrics";
./tools/e2e/tests/performance/healthcare-critical.performance.spec.ts:6:import { expect, test } from "@playwright/test";
./tools/e2e/tests/performance/healthcare-critical.performance.spec.ts:7:import {
./tools/e2e/tests/performance/healthcare-critical.performance.spec.ts:13:import { EmergencyPage } from "../../pages/emergency.page";
./tools/e2e/tests/performance/healthcare-critical.performance.spec.ts:14:import { PatientDashboardPage } from "../../pages/patient-dashboard.page";
./tools/e2e/tests/performance/healthcare-critical.performance.spec.ts:15:import { PrescriptionPage } from "../../pages/prescription.page";
./tools/e2e/tests/performance/healthcare-critical.performance.spec.ts:16:import { PerformanceMonitor } from "../../utils/performance-metrics";
./tools/e2e/tests/performance/healthcare-critical.performance.spec.ts:17:import { PerformanceReporter } from "../../utils/performance-metrics";
./tools/e2e/global-teardown.ts:1:import { createClient } from "@supabase/supabase-js";
./tools/e2e/global-teardown.ts:2:import fs from "node:fs";
./tools/e2e/global-teardown.ts:3:import path from "node:path";
./tools/e2e/pages/BasePage.ts:6:import type { Locator, Page } from "@playwright/test";
./tools/e2e/pages/BasePage.ts:7:import { expect } from "@playwright/test";
./tools/e2e/pages/prescription.page.ts:6:import { Locator, Page } from "@playwright/test";
./tools/e2e/pages/prescription.page.ts:7:import { BasePage } from "./base.page";
./tools/e2e/pages/PatientsPage.ts:6:import type { Locator, Page } from "@playwright/test";
./tools/e2e/pages/PatientsPage.ts:7:import { BasePage } from "./BasePage";
./tools/e2e/pages/emergency.page.ts:6:import type { Locator, Page } from "@playwright/test";
./tools/e2e/pages/emergency.page.ts:7:import { BasePage } from "./base.page";
./tools/e2e/pages/LoginPage.ts:6:import type { Locator, Page } from "@playwright/test";
./tools/e2e/pages/LoginPage.ts:7:import { BasePage } from "./BasePage";
./tools/e2e/pages/DashboardPage.ts:6:import type { Locator, Page } from "@playwright/test";
./tools/e2e/pages/DashboardPage.ts:7:import { BasePage } from "./BasePage";
./tools/e2e/pages/audit.page.ts:6:import type { Locator, Page } from "@playwright/test";
./tools/e2e/pages/audit.page.ts:7:import { BasePage } from "./base.page";
./tools/e2e/pages/AppointmentsPage.ts:1:import type { Locator, Page } from "@playwright/test";
./tools/e2e/pages/AppointmentsPage.ts:2:import { expect } from "@playwright/test";
./tools/e2e/pages/AppointmentsPage.ts:3:import { BasePage } from "./BasePage";
./tools/e2e/config/performance.config.ts:6:import type { PerformanceBudget } from "../utils/performance-metrics";
./tools/e2e/pricing.spec.ts:1:import { expect, test } from "@playwright/test";
./tools/e2e/utils/test-utils.ts:1:import type { BrowserContext, Page } from "@playwright/test";
./tools/e2e/utils/test-utils.ts:2:import { expect } from "@playwright/test";
./tools/e2e/utils/test-utils.ts:3:import { DashboardPage } from "../pages/DashboardPage";
./tools/e2e/utils/test-utils.ts:4:import { LoginPage } from "../pages/LoginPage";
./tools/e2e/utils/performance-metrics.ts:6:import type { BrowserContext, Page } from "@playwright/test";
./tools/e2e/utils/performance-metrics.ts:7:import { existsSync, mkdirSync, writeFileSync } from "node:fs";
./tools/e2e/utils/performance-metrics.ts:8:import { join } from "node:path";
./tools/e2e/reports/html/trace/assets/codeMirrorModule-rKSJ91kC.js:1:import { n as Wu } from "./defaultSettingsView-CUd-tHFm.js";
./tools/e2e/reports/html/trace/assets/codeMirrorModule-rKSJ91kC.js:14729:							"alignas alignof and and_eq audit axiom bitand bitor catch class compl concept constexpr const_cast decltype delete dynamic_cast explicit export final friend import module mutable namespace new noexcept not not_eq operator or or_eq override private protected public reinterpret_cast requires static_assert static_cast template this thread_local throw try typeid typename using virtual xor xor_eq",
./tools/e2e/reports/html/trace/assets/codeMirrorModule-rKSJ91kC.js:14884:								"abstract assert break case catch class const continue default do else enum extends final finally for goto if implements import instanceof interface native new package private protected public return static strictfp super switch synchronized this throw throws transient try volatile while @interface",
./tools/e2e/reports/html/trace/assets/codeMirrorModule-rKSJ91kC.js:14963:							"abstract case catch class def do else extends final finally for forSome if implicit import lazy match new null object override package private protected return sealed super this throw trait try type val var while with yield _ assert assume require print println printf readLine readBoolean readByte readShort readChar readInt readLong readFloat readDouble",
./tools/e2e/reports/html/trace/assets/codeMirrorModule-rKSJ91kC.js:15034:							"package as typealias class interface this super val operator var fun for is in This throw return annotation break continue object if else while do try when !in !is as? file import where by get set abstract enum open inner override private public internal protected catch finally out final vararg reified dynamic companion constructor init sealed field property receiver param sparam lateinit data inline noinline tailrec external annotation crossinline const operator infix suspend actual expect setparam value",
./tools/e2e/reports/html/trace/assets/codeMirrorModule-rKSJ91kC.js:15220:							"abstracts alias assembly assert assign break case catch class continue dynamic else exists extends finally for function given if import in interface is let module new nonempty object of out outer package return satisfies super switch then this throw try value void while",
./tools/e2e/fixtures/test-fixtures.ts:1:import { expect, test as base } from "@playwright/test";
./tools/e2e/fixtures/test-fixtures.ts:2:import type { Page } from "@playwright/test";
./tools/e2e/fixtures/test-fixtures.ts:3:import { createClient } from "@supabase/supabase-js";
./tools/e2e/fixtures/test-fixtures.ts:4:import { AppointmentsPage } from "../pages/AppointmentsPage";
./tools/e2e/fixtures/test-fixtures.ts:5:import { DashboardPage } from "../pages/DashboardPage";
./tools/e2e/fixtures/test-fixtures.ts:6:import { LoginPage } from "../pages/LoginPage";
./tools/e2e/fixtures/test-fixtures.ts:7:import { PatientsPage } from "../pages/PatientsPage";
./tools/scripts/validate-github-workflows.js:8:const fs = require("node:fs");
./tools/scripts/validate-github-workflows.js:9:const path = require("node:path");
./tools/scripts/validate-github-workflows.js:10:const { execSync } = require("node:child_process");
./tools/testing/vitest.config.ts:3:import path from "node:path";
./tools/testing/vitest.config.ts:4:import { defineConfig } from "vitest/config";
./tools/testing/tests/auth/task-002-final-integration.test.ts:1:import { securityAuditFramework } from "@/lib/auth/security-audit-framework";
./tools/testing/tests/auth/task-002-final-integration.test.ts:2:import { sessionManager } from "@/lib/auth/session-manager";
./tools/testing/tests/auth/task-002-final-integration.test.ts:3:import { beforeEach, describe, expect, jest, test, vi } from "vitest";
./tools/testing/tests/auth/webauthn-verification.test.ts:8:import { describe, expect, it } from "vitest";
./tools/testing/tests/auth/webauthn-verification.test.ts:14:      require("../../lib/auth/webauthn-service");
./tools/testing/tests/auth/webauthn-verification.test.ts:18:      require("../../lib/auth/webauthn-client");
./tools/testing/tests/auth/webauthn-verification.test.ts:22:      require("../../lib/auth/performance-tracker");
./tools/testing/tests/auth/webauthn-verification.test.ts:28:    const fs = require("node:fs");
./tools/testing/tests/auth/webauthn-verification.test.ts:29:    const path = require("node:path");
./tools/testing/tests/auth/webauthn-verification.test.ts:47:    const fs = require("node:fs");
./tools/testing/tests/auth/webauthn-verification.test.ts:48:    const path = require("node:path");
./tools/testing/tests/auth/webauthn-verification.test.ts:60:      require("@simplewebauthn/server");
./tools/testing/tests/auth/webauthn-verification.test.ts:64:      require("@simplewebauthn/browser");
./tools/testing/tests/auth/webauthn-verification.test.ts:71:    } = require("../../lib/auth/performance-tracker");
./tools/testing/tests/auth/webauthn-verification.test.ts:88:    const { webAuthnService } = require("../../lib/auth/webauthn-service");
./tools/testing/tests/auth/webauthn-verification.test.ts:97:    } = require("../../lib/auth/performance-tracker");
./tools/testing/tests/auth/webauthn-verification.test.ts:111:      require("../../lib/monitoring/performance");
./tools/testing/tests/auth/webauthn-verification.test.ts:115:      require("../../lib/monitoring/analytics");
./tools/testing/tests/auth/webauthn-verification.test.ts:122:    const fs = require("node:fs");
./tools/testing/tests/auth/webauthn-verification.test.ts:123:    const path = require("node:path");
./tools/testing/tests/auth/webauthn-verification.test.ts:141:    const fs = require("node:fs");
./tools/testing/tests/auth/webauthn-verification.test.ts:142:    const path = require("node:path");
./tools/testing/tests/simple-monitoring.test.ts:1:import fs from "node:fs";
./tools/testing/tests/simple-monitoring.test.ts:2:import path from "node:path";
./tools/testing/tests/unit/monitoring.test.ts:1:import fs from "node:fs";
./tools/testing/tests/unit/monitoring.test.ts:2:import path from "node:path";
./tools/testing/tests/unit/monitoring.test.ts:3:import { describe, expect, it } from "vitest";
./tools/testing/tests/security/security-audit.test.ts:6:import { createClient } from "@supabase/supabase-js";
./tools/testing/tests/security/security-audit.test.ts:7:import { afterAll, beforeAll, describe, expect, it } from "vitest";
./tools/testing/tests/accessibility/accessibility-demo.spec.ts:1:import { expect, test } from "@playwright/test";
./tools/testing/tests/accessibility/healthcare-accessibility.spec.ts:16:import { AxeBuilder } from "@axe-core/playwright";
./tools/testing/tests/accessibility/healthcare-accessibility.spec.ts:17:import { expect, test } from "@playwright/test";
./tools/testing/tests/accessibility/healthcare-accessibility.spec.ts:18:import type { Page } from "@playwright/test";
./tools/testing/tests/accessibility/healthcare-accessibility.spec.ts:19:import { configureAxe, injectAxe } from "axe-playwright";
./tools/testing/tests/integration/monitoring.test.ts:6:import { afterAll, beforeAll, describe, expect, it } from "vitest";
./tools/testing/tests/integration/monitoring.test.ts:7:import { analytics } from "../../lib/monitoring/analytics";
./tools/testing/tests/integration/monitoring.test.ts:8:import { errorTracking } from "../../lib/monitoring/error-tracking";
./tools/testing/tests/integration/monitoring.test.ts:9:import { featureFlags } from "../../lib/monitoring/feature-flags";
./tools/testing/tests/integration/monitoring.test.ts:10:import { performance } from "../../lib/monitoring/performance";
./tools/testing/tests/integration/monitoring.test.ts:154:    it("should import FeatureFlagManager component", async () => {
./tools/testing/tests/integration/monitoring.test.ts:162:    it("should import SystemHealthWidget component", async () => {
./tools/testing/tests/integration/monitoring.test.ts:170:    it("should import PerformanceDashboard component", async () => {
./tools/testing/tests/integration/task-001-verification.test.ts:6:import { describe, expect, it } from "vitest";
./tools/testing/tests/integration/task-001-verification.test.ts:124:      import fs from "node:fs";
./tools/testing/tests/integration/task-001-verification.test.ts:125:      import path from "node:path";
./tools/testing/tests/integration/task-001-verification.test.ts:135:      import fs from "node:fs";
./tools/testing/tests/integration/task-001-verification.test.ts:136:      import path from "node:path";
./tools/testing/tests/integration/bank-reconciliation-api.test.ts:6:import { createClient } from "@supabase/supabase-js";
./tools/testing/tests/integration/bank-reconciliation-api.test.ts:7:import { afterAll, beforeAll, describe, expect, it } from "vitest";
./tools/testing/playwright-root/tests/analytics-dashboard-fixed.spec.ts:7:import { expect, test } from "@playwright/test";
./tools/testing/playwright-root/tests/analytics-dashboard-fixed.spec.ts:8:import {
./tools/testing/playwright-root/tests/bank-reconciliation.spec.ts:4:import { expect, test } from "@playwright/test";
./tools/testing/playwright-root/tests/bank-reconciliation.spec.ts:34:  test("should import bank statement successfully", async ({ page }) => {
./tools/testing/playwright-root/tests/bank-reconciliation.spec.ts:35:    // Start file import process
./tools/testing/playwright-root/tests/bank-reconciliation.spec.ts:44:    // Configure import settings
./tools/testing/playwright-root/tests/bank-reconciliation.spec.ts:52:    // Wait for import to complete
./tools/testing/playwright-root/tests/bank-reconciliation.spec.ts:71:    // First import sample data
./tools/testing/playwright-root/tests/regulatory-documents-fixed.spec.ts:7:import { expect, test } from "@playwright/test";
./tools/testing/playwright-root/tests/regulatory-documents-fixed.spec.ts:8:import {
./tools/testing/playwright-root/tests/analytics-dashboard.spec.ts:1:import { expect, test } from "@playwright/test";
./tools/testing/playwright-root/tests/bank-reconciliation-fixed.spec.ts:7:import { expect, test } from "@playwright/test";
./tools/testing/playwright-root/tests/bank-reconciliation-fixed.spec.ts:8:import {
./tools/testing/playwright-root/tests/bank-reconciliation-fixed.spec.ts:49:  test("should import bank statement with healthcare data anonymization", async ({ page }) => {
./tools/testing/playwright-root/tests/bank-reconciliation-fixed.spec.ts:51:    // Start file import process with performance validation
./tools/testing/playwright-root/tests/bank-reconciliation-fixed.spec.ts:66:    // Configure import settings with Brazilian standards
./tools/testing/playwright-root/tests/bank-reconciliation-fixed.spec.ts:73:    // Start import with progress tracking
./tools/testing/playwright-root/tests/bank-reconciliation-fixed.spec.ts:76:    // Wait for import to complete with healthcare timeout standards
./tools/testing/playwright-root/tests/bank-reconciliation-fixed.spec.ts:102:    // First import sample data with healthcare data protection
./tools/testing/playwright-root/tests/bank-reconciliation-fixed.spec.ts:110:    // Wait for import completion
./tools/testing/playwright-root/tests/bank-reconciliation-fixed.spec.ts:256:  // Execute import with healthcare timeout standards
./tools/testing/playwright-root/tests/security-healthcare.spec.ts:7:import { expect, test } from "@playwright/test";
./tools/testing/playwright-root/tests/security-healthcare.spec.ts:8:import {
./tools/testing/playwright-root/tests/regulatory-documents.spec.ts:1:import { expect, test } from "@playwright/test";
./tools/testing/playwright-root/tests/accessibility-healthcare.spec.ts:7:import { expect, test } from "@playwright/test";
./tools/testing/playwright-root/tests/accessibility-healthcare.spec.ts:8:import {
./tools/testing/playwright-root/tests/performance-healthcare.spec.ts:7:import { expect, test } from "@playwright/test";
./tools/testing/playwright-root/tests/performance-healthcare.spec.ts:8:import {
./tools/testing/playwright-root/utils/healthcare-testing-utils.ts:7:import { faker } from "@faker-js/faker/locale/pt_BR";
./tools/testing/playwright-root/utils/healthcare-testing-utils.ts:8:import { expect } from "@playwright/test";
./tools/testing/playwright-root/utils/healthcare-testing-utils.ts:9:import type { Page } from "@playwright/test";
./tools/testing/supabase-setup.ts:1:import { afterEach, beforeEach, vi } from "vitest";
./tools/testing/setup/global-setup.ts:16:import { chromium } from "@playwright/test";
./tools/testing/setup/global-setup.ts:17:import type { FullConfig } from "@playwright/test";
./tools/testing/setup/global-setup.ts:18:import path from "node:path";
./tools/testing/setup/global-teardown.ts:16:import type { FullConfig } from "@playwright/test";
./tools/testing/setup/global-teardown.ts:17:import fs from "node:fs";
./tools/testing/setup/global-teardown.ts:18:import path from "node:path";
./tools/testing/setup/test-env.ts:6:import { vi } from "vitest";
./tools/testing/setup/test-env.ts:8:import { mockSupabaseClient } from "./supabase-mock";
./tools/testing/setup/api-setup.ts:6:import { vi } from "vitest";
./tools/testing/setup/supabase-mock.ts:6:import { vi } from "vitest";
./tools/testing/setup.ts:1:import { vi } from "vitest";
./tools/testing/unit/setup/api-setup.ts:1:import { afterAll, beforeAll } from "vitest";
./tools/testing/unit/setup/api-setup.ts:2:import { setupSupabaseMock } from "./supabase-mock";
./tools/testing/unit/setup/supabase-mock.ts:1:import { vi } from "vitest";
./tools/testing/unit/setup/global-setup.js:4:import { setupHealthcareEnvironment } from "./test-env.js";
./tools/testing/unit/vitest-setup.test.ts:5:import { describe, expect, it, vi } from "vitest";
./tools/testing/unit/setup.ts:4:import { afterAll, afterEach, beforeAll, beforeEach } from "vitest";
./tools/testing/unit/setup.ts:5:import { setupSupabaseMock } from "./setup/supabase-mock";
./tools/testing/unit/setup.ts:6:import { setupHealthcareEnvironment, teardownHealthcareEnvironment } from "./setup/test-env";
./tools/testing/unit/sample.test.ts:1:import { describe, expect, it } from "vitest";
./tools/testing/performance/deployment.ts:8:import { execSync } from "node:child_process";
./tools/testing/performance/deployment.ts:9:import { promises as fs } from "node:fs";
./tools/testing/performance/deployment.ts:10:import path from "node:path";
./tools/testing/performance/bundle-analyzer.ts:8:import { promises as fs } from "node:fs";
./tools/testing/performance/bundle-analyzer.ts:9:import path from "node:path";
./tools/testing/performance/bundle-analyzer.ts:223:      '📊 Recharts detected - use selective imports: import { LineChart } from "recharts"',
./tools/testing/performance/bundle-analyzer.ts:230:      '🛠️ Lodash detected - use individual imports: import debounce from "lodash/debounce"',
./tools/testing/performance/compliance-performance.test.ts:14:import { performance } from "node:perf_hooks";
./tools/testing/performance/compliance-performance.test.ts:15:import { beforeAll, beforeEach, describe, expect, it } from "vitest";
./tools/testing/performance/performance-test-runner.ts:7:import fs from "node:fs/promises";
./tools/testing/performance/performance-test-runner.ts:8:import path from "node:path";
./tools/testing/performance/performance-test-runner.ts:9:import { ApiPerformanceTester } from "./analysis/api-performance";
./tools/testing/performance/performance-test-runner.ts:10:import { BundleOptimizer } from "./analysis/bundle-optimizer";
./tools/testing/performance/performance-test-runner.ts:11:import { DatabasePerformanceTester } from "./analysis/database-performance";
./tools/testing/performance/performance-test-runner.ts:12:import { FrontendPerformanceTester } from "./analysis/frontend-performance";
./tools/testing/performance/performance-test-runner.ts:13:import { PerformanceAuditor } from "./analysis/performance-audit";
./tools/testing/performance/caching.ts:8:import { NextResponse } from "next/server";
./tools/testing/performance/caching.ts:9:import type { NextRequest } from "next/server";
./tools/testing/performance/index.ts:98:    const { cacheManager, CachePerformanceMonitor } = require("./caching");
./tools/testing/performance/index.ts:194:// Initialize performance suite on import (client-side only)
./tools/testing/performance/stress-testing.spec.ts:14:import { expect, test } from "@playwright/test";
./tools/testing/performance/analysis/bundle-optimizer.ts:46:import gzip from "gzip-size";
./tools/testing/performance/analysis/bundle-optimizer.ts:47:import fs from "node:fs/promises";
./tools/testing/performance/analysis/bundle-optimizer.ts:48:import path from "node:path";
./tools/testing/performance/analysis/api-performance.ts:7:import { performance } from "node:perf_hooks";
./tools/testing/performance/analysis/performance-audit.ts:7:import lighthouse from "lighthouse";
./tools/testing/performance/analysis/performance-audit.ts:8:import { performance } from "node:perf_hooks";
./tools/testing/performance/analysis/performance-audit.ts:9:import puppeteer from "puppeteer";
./tools/testing/performance/hono-performance.spec.ts:14:import { expect, test } from "@playwright/test";
./tools/testing/performance/react-hooks.ts:8:import { startTransition, useCallback, useEffect, useMemo, useRef, useState } from "react";
./tools/testing/performance/react-hooks.ts:9:import type { DependencyList } from "react";
./tools/testing/performance/web-vitals.ts:8:import { getCLS, getFCP, getFID, getLCP, getTTFB } from "web-vitals";
./tools/testing/performance/web-vitals.ts:9:import type { Metric } from "web-vitals";
./tools/testing/performance/run-performance-tests.ts:12:import { performance } from "node:perf_hooks";
./tools/testing/run-tests.js:9:const { spawn } = require("node:child_process");
./tools/testing/validate-migration.js:7:import { execSync } from "node:child_process";
./tools/testing/validate-migration.js:8:import fs from "node:fs";
./tools/testing/validate-migration.js:9:import path from "node:path";
./tools/testing/visual/playwright.config.ts:1:import { defineConfig, devices } from "@playwright/test";
./tools/testing/visual/src/healthcare/visual-regression.spec.ts:8:import { expect, test } from "@playwright/test";
./tools/testing/utils/test-setup.ts:6:import { config } from "dotenv";
./tools/testing/utils/test-setup.ts:7:import { afterAll, afterEach, beforeAll, beforeEach, vi } from "vitest";
./tools/testing/utils/mock-supabase.ts:6:import type { Mock } from "vitest";
./tools/testing/utils/mock-supabase.ts:7:import { vi } from "vitest";
./tools/testing/utils/healthcare-test-utils.tsx:1:import { render } from "@testing-library/react";
./tools/testing/utils/healthcare-test-utils.tsx:2:import type { RenderOptions } from "@testing-library/react";
./tools/testing/utils/healthcare-test-utils.tsx:3:import type React from "react";
./tools/testing/utils/healthcare-test-utils.tsx:4:import type { ReactElement } from "react";
./tools/testing/utils/healthcare-test-utils.tsx:5:import { vi } from "vitest";
./tools/testing/utils/test-utils.ts:1:import { vi } from "vitest";
./tools/testing/utils/mock-data.ts:1:import type { AnalyticsData, CohortData, ExportData } from "@/types/analytics";
./tools/testing/utils/api-setup.ts:6:import { vi } from "vitest";
./tools/testing/utils/test-utils.tsx:11:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./tools/testing/utils/test-utils.tsx:12:import { render } from "@testing-library/react";
./tools/testing/utils/test-utils.tsx:13:import type { RenderOptions } from "@testing-library/react";
./tools/testing/utils/test-utils.tsx:14:import type React from "react";
./tools/testing/utils/test-utils.tsx:15:import { vi } from "vitest";
./tools/testing/security/healthcare-compliance.test.ts:15:import { Hono } from "hono";
./tools/testing/security/healthcare-compliance.test.ts:16:import { testClient } from "hono/testing";
./tools/testing/security/healthcare-compliance.test.ts:17:import { beforeEach, describe, expect, it } from "vitest";
./tools/testing/security/penetration-testing.test.ts:16:import { chromium } from "@playwright/test";
./tools/testing/security/penetration-testing.test.ts:17:import type { Browser, Page } from "@playwright/test";
./tools/testing/security/penetration-testing.test.ts:18:import { afterAll, beforeAll, describe, expect, it } from "vitest";
./tools/testing/security/lgpd-compliance.test.ts:14:import { Hono } from "hono";
./tools/testing/security/lgpd-compliance.test.ts:15:import { testClient } from "hono/testing";
./tools/testing/security/lgpd-compliance.test.ts:16:import { beforeEach, describe, expect, it } from "vitest";
./tools/testing/security/lgpd-compliance.test.ts:17:import { auditStore, lgpdAudit } from "../../../apps/api/src/middleware/audit";
./tools/testing/security/lgpd-compliance.test.ts:18:import { ConsentType, lgpdMiddleware, lgpdUtils } from "../../../apps/api/src/middleware/lgpd";
./tools/testing/security/security-assessment.test.ts:13:import { Hono } from "hono";
./tools/testing/security/security-assessment.test.ts:14:import { testClient } from "hono/testing";
./tools/testing/security/security-assessment.test.ts:15:import { beforeEach, describe, expect, it } from "vitest";
./tools/testing/security/security-assessment.test.ts:16:import {
./tools/testing/security/security-assessment.test.ts:23:import { errorHandler } from "../../../apps/api/src/middleware/error-handler";
./tools/testing/security/security-assessment.test.ts:24:import { lgpdMiddleware } from "../../../apps/api/src/middleware/lgpd";
./tools/testing/security/security-assessment.test.ts:25:import { rateLimitMiddleware } from "../../../apps/api/src/middleware/rate-limit";
./tools/testing/tests-examples/demo-todo-app.spec.ts:1:import { expect, test } from "@playwright/test";
./tools/testing/tests-examples/demo-todo-app.spec.ts:2:import type { Page } from "@playwright/test";
./tools/testing/scripts/run-reconciliation-tests.js:1:const { execSync } = require("node:child_process");
./tools/testing/scripts/run-reconciliation-tests.js:2:const path = require("node:path");
./tools/testing/scripts/run-reconciliation-tests.js:87:  const fs = require("node:fs");
./tools/testing/scripts/test-supabase-client.js:2:require("dotenv").config({ path: "./apps/web/.env.local" });
./tools/testing/scripts/test-supabase-client.js:3:const { createClient } = require("@supabase/supabase-js");
./tools/testing/scripts/test_service_copy.js:1:const fs = require("node:fs");
./tools/testing/scripts/test-prisma-supabase.js:2:const { PrismaClient } = require("@prisma/client");
./tools/testing/scripts/test-prisma-supabase.js:3:require("dotenv").config({ path: "./apps/web/.env.local" });
./tools/testing/scripts/test-quality-analyzer.js:1:const fs = require("node:fs");
./tools/testing/scripts/test-quality-analyzer.js:2:const path = require("node:path");
./tools/testing/vitest.simple.config.ts:3:import path from "node:path";
./tools/testing/vitest.simple.config.ts:4:import { defineConfig } from "vitest/config";
./tools/testing/playwright-tests/security/src/healthcare/healthcare-data-security.spec.ts:8:import { expect, test } from "@playwright/test";
./tools/testing/playwright-tests/security/src/penetration/security-penetration.spec.ts:8:import { expect, test } from "@playwright/test";
./tools/testing/playwright/tests/analytics-dashboard.spec.ts:1:import { expect, test } from "@playwright/test";
./tools/testing/__tests__/middleware/subscription.test.ts:11:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./tools/testing/__tests__/middleware/subscription.test.ts:12:import { createMockSubscription } from "../../utils/test-utils";
./tools/testing/__tests__/contexts/auth-context.test.tsx:1:import { act, cleanup, fireEvent, render, screen, waitFor } from "@testing-library/react";
./tools/testing/__tests__/contexts/auth-context.test.tsx:2:import { vi } from "vitest";
./tools/testing/__tests__/contexts/auth-context.test.tsx:3:import "@testing-library/jest-dom";
./tools/testing/__tests__/contexts/auth-context.test.tsx:27:// Now import the component AFTER the mock
./tools/testing/__tests__/contexts/auth-context.test.tsx:28:import { AuthProvider, useAuth } from "../../../../apps/web/contexts/auth-context";
./tools/testing/__tests__/e2e/auth-flow.spec.ts:1:import { expect, test } from "@playwright/test";
./tools/testing/__tests__/e2e/appointment-scheduling-flow.spec.ts:1:import { expect, test } from "@playwright/test";
./tools/testing/__tests__/components/subscription.test.tsx:11:import { screen } from "@testing-library/react";
./tools/testing/__tests__/components/subscription.test.tsx:12:import userEvent from "@testing-library/user-event";
./tools/testing/__tests__/components/subscription.test.tsx:13:import type React from "react";
./tools/testing/__tests__/components/subscription.test.tsx:14:import { beforeEach, describe, expect, it, vi } from "vitest";
./tools/testing/__tests__/components/subscription.test.tsx:15:import { renderWithProviders } from "../../utils/test-utils";
./tools/testing/__tests__/components/ProfessionalForm.test.tsx:1:import ProfessionalForm from "@/components/dashboard/ProfessionalForm";
./tools/testing/__tests__/components/ProfessionalForm.test.tsx:2:import { createProfessional, updateProfessional } from "@/lib/supabase/professionals";
./tools/testing/__tests__/components/ProfessionalForm.test.tsx:3:import { fireEvent, render, screen, waitFor } from "@testing-library/react";
./tools/testing/__tests__/components/ProfessionalForm.test.tsx:4:import { toast } from "sonner";
./tools/testing/__tests__/components/ProfessionalForm.test.tsx:5:import { vi } from "vitest";
./tools/testing/__tests__/components/dashboard/AnalyticsDashboard.test.tsx:1:import AnalyticsDashboard from "@/components/dashboard/AnalyticsDashboard";
./tools/testing/__tests__/components/dashboard/AnalyticsDashboard.test.tsx:2:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./tools/testing/__tests__/components/dashboard/AnalyticsDashboard.test.tsx:3:import { render, screen, waitFor } from "@testing-library/react";
./tools/testing/__tests__/components/dashboard/AnalyticsDashboard.test.tsx:4:import userEvent from "@testing-library/user-event";
./tools/testing/__tests__/components/dashboard/AnalyticsDashboard.test.tsx:5:import { vi } from "vitest";
./tools/testing/__tests__/components/dashboard/AnalyticsDashboard.test.tsx:6:import { mockAnalyticsData } from "../../../utils/mockData";
./tools/testing/__tests__/components/dashboard/AnalyticsDashboard.test.tsx:62:  const mockUseAnalyticsData = require("@/hooks/analytics/useAnalyticsData").useAnalyticsData;
./tools/testing/__tests__/components/dashboard/AnalyticsDashboard.test.tsx:63:  const mockUseExportData = require("@/hooks/analytics/useExportData").useExportData;
./tools/testing/__tests__/components/ProfessionalManagement.test.tsx:1:import ProfessionalManagement from "@/components/dashboard/ProfessionalManagement";
./tools/testing/__tests__/components/ProfessionalManagement.test.tsx:2:import {
./tools/testing/__tests__/components/ProfessionalManagement.test.tsx:9:import { fireEvent, render, screen, waitFor } from "@testing-library/react";
./tools/testing/__tests__/components/ProfessionalManagement.test.tsx:10:import { toast } from "sonner";
./tools/testing/__tests__/components/ProfessionalManagement.test.tsx:11:import { vi } from "vitest";
./tools/testing/__tests__/components/ui/error-boundary.test.tsx:1:import { fireEvent, render, screen } from "@testing-library/react";
./tools/testing/__tests__/components/ui/error-boundary.test.tsx:2:import { vi } from "vitest";
./tools/testing/__tests__/components/ui/error-boundary.test.tsx:3:import "@testing-library/jest-dom";
./tools/testing/__tests__/components/ui/error-boundary.test.tsx:4:import {
./tools/testing/__tests__/components/ProfessionalPerformanceDashboard.test.tsx:1:import ProfessionalPerformanceDashboard from "@/components/dashboard/ProfessionalPerformanceDashboard";
./tools/testing/__tests__/components/ProfessionalPerformanceDashboard.test.tsx:2:import { getProfessionalPerformanceMetrics } from "@/lib/supabase/professionals";
./tools/testing/__tests__/components/ProfessionalPerformanceDashboard.test.tsx:3:import { fireEvent, render, screen, waitFor } from "@testing-library/react";
./tools/testing/__tests__/components/ProfessionalPerformanceDashboard.test.tsx:4:import { vi } from "vitest";
./tools/testing/__tests__/analytics/components/analytics-dashboard.test.tsx:1:import AnalyticsDashboard from "@/components/dashboard/analytics-dashboard";
./tools/testing/__tests__/analytics/components/analytics-dashboard.test.tsx:2:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./tools/testing/__tests__/analytics/components/analytics-dashboard.test.tsx:3:import { fireEvent, render, screen, waitFor } from "@testing-library/react";
./tools/testing/__tests__/analytics/components/analytics-dashboard.test.tsx:4:import { afterEach, beforeEach, describe, expect, jest, test, vi } from "vitest";
./tools/testing/__tests__/analytics/components/analytics-dashboard.test.tsx:132:const { analyticsService } = require("@/lib/analytics/service");
./tools/testing/__tests__/analytics/utils/analytics-utils.test.ts:1:import { beforeEach, describe, expect, test, vi } from "vitest";
./tools/testing/__tests__/analytics/utils/analytics-utils.test.ts:2:import {
./tools/testing/__tests__/analytics/api/dashboard-api.test.ts:1:import { GET, POST } from "@/app/api/analytics/dashboard/route";
./tools/testing/__tests__/analytics/api/dashboard-api.test.ts:2:import { createClient } from "@/utils/supabase/server";
./tools/testing/__tests__/analytics/api/dashboard-api.test.ts:3:import { NextRequest } from "next/server";
./tools/testing/__tests__/analytics/api/dashboard-api.test.ts:4:import { afterEach, beforeEach, describe, expect, test, vi } from "vitest";
./tools/testing/__tests__/analytics/api/export-api.test.ts:1:import { GET, POST } from "@/app/api/export/route";
./tools/testing/__tests__/analytics/api/export-api.test.ts:2:import { createClient } from "@/utils/supabase/server";
./tools/testing/__tests__/analytics/api/export-api.test.ts:3:import { NextRequest } from "next/server";
./tools/testing/__tests__/analytics/api/export-api.test.ts:4:import { afterEach, beforeEach, describe, expect, test, vi } from "vitest";
./tools/testing/__tests__/analytics/services/analytics-repository.test.ts:1:import { describe, expect, it } from "vitest";
./tools/testing/__tests__/analytics/services/analytics-repository.test.ts:2:import {
./tools/testing/__tests__/analytics/services/analytics-service.test.ts:1:import { describe, expect, it } from "vitest";
./tools/testing/__tests__/analytics/services/analytics-service.test.ts:2:import {
./tools/testing/__tests__/simple-schema.test.ts:4:import { describe, expect, it } from "vitest";
./tools/testing/__tests__/simple-schema.test.ts:5:// Direct import to avoid dependency issues during testing
./tools/testing/__tests__/simple-schema.test.ts:6:import { z } from "zod";
./tools/testing/__tests__/hooks/subscription.test.ts:12:import type { QueryClient } from "@tanstack/react-query";
./tools/testing/__tests__/hooks/subscription.test.ts:13:import { act, renderHook } from "@testing-library/react";
./tools/testing/__tests__/hooks/subscription.test.ts:14:import { beforeEach, describe, expect, it, vi } from "vitest";
./tools/testing/__tests__/hooks/subscription.test.ts:15:import {
./tools/testing/__tests__/basic-utils.test.ts:1:import { describe, expect, it } from "vitest";
./tools/testing/__tests__/performance/performance.test.ts:11:import { beforeEach, describe, expect, it, vi } from "vitest";
./tools/testing/__tests__/performance/performance.test.ts:12:import { createMockSubscription } from "../../utils/test-utils";
./tools/testing/__tests__/api/analytics/export.test.ts:1:import handler from "@/app/api/analytics/export/route";
./tools/testing/__tests__/api/analytics/export.test.ts:2:import { createMocks } from "node-mocks-http";
./tools/testing/__tests__/api/analytics/export.test.ts:3:import { vi } from "vitest";
./tools/testing/__tests__/api/analytics/export.test.ts:4:import { mockExportData, mockSession } from "../../utils/mockData";
./tools/testing/__tests__/api/analytics/export.test.ts:147:    const mockSupabase = require("@/utils/supabase/server").createClient();
./tools/testing/__tests__/api/hono-rpc-client.test.ts:1:import { Hono } from "hono";
./tools/testing/__tests__/api/hono-rpc-client.test.ts:2:import { cors } from "hono/cors";
./tools/testing/__tests__/api/hono-rpc-client.test.ts:3:import { testClient } from "hono/testing";
./tools/testing/__tests__/api/hono-rpc-client.test.ts:4:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./tools/testing/__tests__/api/subscription.test.ts:11:import type { NextApiRequest, NextApiResponse } from "next";
./tools/testing/__tests__/api/subscription.test.ts:12:import { createMocks } from "node-mocks-http";
./tools/testing/__tests__/api/subscription.test.ts:13:import { beforeEach, describe, expect, it, vi } from "vitest";
./tools/testing/__tests__/api/subscription.test.ts:14:import { createMockSubscription } from "../utils/testUtils";
./tools/testing/__tests__/api/hono-validation.test.ts:1:import { Hono } from "hono";
./tools/testing/__tests__/api/hono-validation.test.ts:2:import { testClient } from "hono/testing";
./tools/testing/__tests__/api/hono-validation.test.ts:3:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./tools/testing/__tests__/api/hono-validation.test.ts:5:// Mock the Hono app (since we need to import from the actual backend)
./tools/testing/__tests__/api/hono-validation.test.ts:6:// In a real scenario, you would import: import app from '../../../../apps/api/src/index'
./tools/testing/__tests__/lib/types/stock-alerts.test.ts:5:import {
./tools/testing/__tests__/lib/types/stock-alerts.test.ts:21:import { describe, expect, it } from "vitest";
./tools/testing/__tests__/lib/professionals.test.ts:1:import { createClient } from "@/app/utils/supabase/server";
./tools/testing/__tests__/lib/professionals.test.ts:2:import {
./tools/testing/__tests__/lib/professionals.test.ts:21:import { vi } from "vitest";
./tools/testing/__tests__/regulatory-documents-integration.test.tsx:1:import "@testing-library/jest-dom";
./tools/testing/__tests__/regulatory-documents-integration.test.tsx:3:import { vi } from "vitest";
./tools/testing/__tests__/regulatory-documents-integration.test.tsx:4:import "@testing-library/jest-dom";
./tools/testing/__tests__/regulatory-documents-integration.test.tsx:5:import { RegulatoryDocumentsList } from "@/components/regulatory-documents/regulatory-documents-list";
./tools/testing/__tests__/regulatory-documents-integration.test.tsx:6:import { useRegulatoryDocuments } from "@/hooks/use-regulatory-documents";
./tools/testing/__tests__/regulatory-documents-integration.test.tsx:7:import { cleanup, fireEvent, render, screen, waitFor } from "@testing-library/react";
./tools/testing/__tests__/integration/task-002-implementation.test.ts:1:import { NextResponse } from "next/server";
./tools/testing/__tests__/integration/task-002-implementation.test.ts:2:import type { NextRequest } from "next/server";
./tools/testing/__tests__/integration/task-002-implementation.test.ts:3:import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
./tools/testing/__tests__/integration/task-002-implementation.test.ts:6:import { POST as sessionExtendHandler } from "../../app/api/auth/session/extend/route";
./tools/testing/__tests__/integration/task-002-implementation.test.ts:7:import { POST as sessionValidateHandler } from "../../app/api/auth/session/validate/route";
./tools/testing/__tests__/integration/task-002-implementation.test.ts:8:import { POST as securityAuditHandler } from "../../app/api/security/audit/route";
./tools/testing/__tests__/integration/task-002-implementation.test.ts:9:import { PerformanceTracker } from "../../lib/auth/performance-tracker";
./tools/testing/__tests__/integration/task-002-implementation.test.ts:10:import { securityAuditFramework } from "../../lib/auth/security-audit-framework";
./tools/testing/__tests__/integration/task-002-implementation.test.ts:11:import { sessionManager } from "../../lib/auth/session-manager";
./tools/testing/__tests__/integration/performance-monitoring.test.tsx:6:import { act, cleanup, fireEvent, render, screen, waitFor } from "@testing-library/react";
./tools/testing/__tests__/integration/performance-monitoring.test.tsx:7:import { vi } from "vitest";
./tools/testing/__tests__/integration/performance-monitoring.test.tsx:8:import "@testing-library/jest-dom";
./tools/testing/__tests__/integration/performance-monitoring.test.tsx:20:import PerformanceDashboard from "@/components/dashboard/performance-dashboard";
./tools/testing/__tests__/integration/performance-monitoring.test.tsx:21:import { getCLS, getFCP, getFID, getINP, getLCP, getTTFB } from "web-vitals";
./tools/testing/__tests__/integration/performance-monitoring.test.tsx:23:import { PerformanceMonitor } from "@/lib/performance/integration";
./tools/testing/__tests__/integration/analytics-dashboard.test.tsx:1:import AnalyticsDashboard from "@/components/dashboard/AnalyticsDashboard";
./tools/testing/__tests__/integration/analytics-dashboard.test.tsx:2:import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
./tools/testing/__tests__/integration/analytics-dashboard.test.tsx:3:import { render, screen, waitFor } from "@testing-library/react";
./tools/testing/__tests__/integration/analytics-dashboard.test.tsx:4:import userEvent from "@testing-library/user-event";
./tools/testing/__tests__/integration/analytics-dashboard.test.tsx:5:import { rest } from "msw";
./tools/testing/__tests__/integration/analytics-dashboard.test.tsx:6:import { setupServer } from "msw/node";
./tools/testing/__tests__/integration/analytics-dashboard.test.tsx:7:import { mockAnalyticsData } from "../../utils/mockData";
