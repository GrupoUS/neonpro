// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =============================================================================================
// üè¢ TENANT MODEL - Multi-tenancy support
// =============================================================================================
model Tenant {
  id                  String   @id @default(cuid())
  name                String
  slug                String   @unique
  description         String?
  logo_url            String?
  website_url         String?
  contact_email       String?
  contact_phone       String?
  subscription_plan   SubscriptionPlan @default(BASIC)
  subscription_status SubscriptionStatus @default(ACTIVE)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  // Relations
  profiles Profile[]
  products Product[]

  @@map("tenants")
}

// =============================================================================================
// üë§ PROFILE MODEL - User profiles linked to Supabase Auth
// =============================================================================================
model Profile {
  id         String   @id // Same as auth.users.id from Supabase
  email      String   @unique
  first_name String?
  last_name  String?
  avatar_url String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // Multi-tenancy relation
  tenant_id String?
  tenant    Tenant? @relation(fields: [tenant_id], references: [id], onDelete: SetNull)

  @@map("profiles")
}

// =============================================================================================
// üõçÔ∏è PRODUCT MODEL - Products per tenant
// =============================================================================================
model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Decimal  @db.Decimal(10, 2)
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  // Multi-tenancy relation
  tenant_id String
  tenant    Tenant @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@map("products")
}

// =============================================================================================
// üìä ENUMS
// =============================================================================================
enum SubscriptionPlan {
  BASIC
  PRO
  ENTERPRISE

  @@map("subscription_plan")
}

enum SubscriptionStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  CANCELLED

  @@map("subscription_status")
}

// =============================================================================================
// üìä INDEXES FOR PERFORMANCE
// =============================================================================================
// Index for tenant-based queries
// @@index([tenant_id]) is automatically created by Prisma for foreign keys

// Index for email lookups
// @@index([email]) is automatically created by Prisma for unique fields