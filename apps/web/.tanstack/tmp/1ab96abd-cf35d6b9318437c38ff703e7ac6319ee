/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ValidationReportRouteImport } from './routes/validation-report'
import { Route as UniversalButtonTestRouteImport } from './routes/universal-button-test'
import { Route as TestAuthRouteImport } from './routes/test-auth'
import { Route as SignupDemoRouteImport } from './routes/signup-demo'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ShineTestRouteImport } from './routes/shine-test'
import { Route as ShadcnTestRouteImport } from './routes/shadcn-test'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as ReportsRouteImport } from './routes/reports'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as ParticleTestRouteImport } from './routes/particle-test'
import { Route as LoginRouteImport } from './routes/login'
import { Route as HealthcareTestRouteImport } from './routes/healthcare-test'
import { Route as GovernanceRouteImport } from './routes/governance'
import { Route as FinancialRouteImport } from './routes/financial'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ComprehensiveButtonTestRouteImport } from './routes/comprehensive-button-test'
import { Route as ClientsRouteImport } from './routes/clients'
import { Route as ButtonTestRouteImport } from './routes/button-test'
import { Route as BentoGridTestRouteImport } from './routes/bento-grid-test'
import { Route as AppointmentsRouteImport } from './routes/appointments'
import { Route as ApiTestRouteImport } from './routes/api-test'
import { Route as AnimationValidationSuiteRouteImport } from './routes/animation-validation-suite'
import { Route as AiChatRouteImport } from './routes/ai-chat'
import { Route as AdvancedAnimationsTestRouteImport } from './routes/advanced-animations-test'
import { Route as R404RouteImport } from './routes/404'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PatientsPatientIdRouteImport } from './routes/patients/$patientId'
import { Route as AuthConfirmRouteImport } from './routes/auth/confirm'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'

const ValidationReportRoute = ValidationReportRouteImport.update({
  id: '/validation-report',
  path: '/validation-report',
  getParentRoute: () => rootRouteImport,
} as any)
const UniversalButtonTestRoute = UniversalButtonTestRouteImport.update({
  id: '/universal-button-test',
  path: '/universal-button-test',
  getParentRoute: () => rootRouteImport,
} as any)
const TestAuthRoute = TestAuthRouteImport.update({
  id: '/test-auth',
  path: '/test-auth',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupDemoRoute = SignupDemoRouteImport.update({
  id: '/signup-demo',
  path: '/signup-demo',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ShineTestRoute = ShineTestRouteImport.update({
  id: '/shine-test',
  path: '/shine-test',
  getParentRoute: () => rootRouteImport,
} as any)
const ShadcnTestRoute = ShadcnTestRouteImport.update({
  id: '/shadcn-test',
  path: '/shadcn-test',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportsRoute = ReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const ParticleTestRoute = ParticleTestRouteImport.update({
  id: '/particle-test',
  path: '/particle-test',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const HealthcareTestRoute = HealthcareTestRouteImport.update({
  id: '/healthcare-test',
  path: '/healthcare-test',
  getParentRoute: () => rootRouteImport,
} as any)
const GovernanceRoute = GovernanceRouteImport.update({
  id: '/governance',
  path: '/governance',
  getParentRoute: () => rootRouteImport,
} as any)
const FinancialRoute = FinancialRouteImport.update({
  id: '/financial',
  path: '/financial',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ComprehensiveButtonTestRoute = ComprehensiveButtonTestRouteImport.update({
  id: '/comprehensive-button-test',
  path: '/comprehensive-button-test',
  getParentRoute: () => rootRouteImport,
} as any)
const ClientsRoute = ClientsRouteImport.update({
  id: '/clients',
  path: '/clients',
  getParentRoute: () => rootRouteImport,
} as any)
const ButtonTestRoute = ButtonTestRouteImport.update({
  id: '/button-test',
  path: '/button-test',
  getParentRoute: () => rootRouteImport,
} as any)
const BentoGridTestRoute = BentoGridTestRouteImport.update({
  id: '/bento-grid-test',
  path: '/bento-grid-test',
  getParentRoute: () => rootRouteImport,
} as any)
const AppointmentsRoute = AppointmentsRouteImport.update({
  id: '/appointments',
  path: '/appointments',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiTestRoute = ApiTestRouteImport.update({
  id: '/api-test',
  path: '/api-test',
  getParentRoute: () => rootRouteImport,
} as any)
const AnimationValidationSuiteRoute =
  AnimationValidationSuiteRouteImport.update({
    id: '/animation-validation-suite',
    path: '/animation-validation-suite',
    getParentRoute: () => rootRouteImport,
  } as any)
const AiChatRoute = AiChatRouteImport.update({
  id: '/ai-chat',
  path: '/ai-chat',
  getParentRoute: () => rootRouteImport,
} as any)
const AdvancedAnimationsTestRoute = AdvancedAnimationsTestRouteImport.update({
  id: '/advanced-animations-test',
  path: '/advanced-animations-test',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PatientsPatientIdRoute = PatientsPatientIdRouteImport.update({
  id: '/patients/$patientId',
  path: '/patients/$patientId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthConfirmRoute = AuthConfirmRouteImport.update({
  id: '/auth/confirm',
  path: '/auth/confirm',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/advanced-animations-test': typeof AdvancedAnimationsTestRoute
  '/ai-chat': typeof AiChatRoute
  '/animation-validation-suite': typeof AnimationValidationSuiteRoute
  '/api-test': typeof ApiTestRoute
  '/appointments': typeof AppointmentsRoute
  '/bento-grid-test': typeof BentoGridTestRoute
  '/button-test': typeof ButtonTestRoute
  '/clients': typeof ClientsRoute
  '/comprehensive-button-test': typeof ComprehensiveButtonTestRoute
  '/dashboard': typeof DashboardRoute
  '/financial': typeof FinancialRoute
  '/governance': typeof GovernanceRoute
  '/healthcare-test': typeof HealthcareTestRoute
  '/login': typeof LoginRoute
  '/particle-test': typeof ParticleTestRoute
  '/profile': typeof ProfileRoute
  '/reports': typeof ReportsRoute
  '/settings': typeof SettingsRoute
  '/shadcn-test': typeof ShadcnTestRoute
  '/shine-test': typeof ShineTestRoute
  '/signup': typeof SignupRoute
  '/signup-demo': typeof SignupDemoRoute
  '/test-auth': typeof TestAuthRoute
  '/universal-button-test': typeof UniversalButtonTestRoute
  '/validation-report': typeof ValidationReportRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/confirm': typeof AuthConfirmRoute
  '/patients/$patientId': typeof PatientsPatientIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/advanced-animations-test': typeof AdvancedAnimationsTestRoute
  '/ai-chat': typeof AiChatRoute
  '/animation-validation-suite': typeof AnimationValidationSuiteRoute
  '/api-test': typeof ApiTestRoute
  '/appointments': typeof AppointmentsRoute
  '/bento-grid-test': typeof BentoGridTestRoute
  '/button-test': typeof ButtonTestRoute
  '/clients': typeof ClientsRoute
  '/comprehensive-button-test': typeof ComprehensiveButtonTestRoute
  '/dashboard': typeof DashboardRoute
  '/financial': typeof FinancialRoute
  '/governance': typeof GovernanceRoute
  '/healthcare-test': typeof HealthcareTestRoute
  '/login': typeof LoginRoute
  '/particle-test': typeof ParticleTestRoute
  '/profile': typeof ProfileRoute
  '/reports': typeof ReportsRoute
  '/settings': typeof SettingsRoute
  '/shadcn-test': typeof ShadcnTestRoute
  '/shine-test': typeof ShineTestRoute
  '/signup': typeof SignupRoute
  '/signup-demo': typeof SignupDemoRoute
  '/test-auth': typeof TestAuthRoute
  '/universal-button-test': typeof UniversalButtonTestRoute
  '/validation-report': typeof ValidationReportRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/confirm': typeof AuthConfirmRoute
  '/patients/$patientId': typeof PatientsPatientIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/advanced-animations-test': typeof AdvancedAnimationsTestRoute
  '/ai-chat': typeof AiChatRoute
  '/animation-validation-suite': typeof AnimationValidationSuiteRoute
  '/api-test': typeof ApiTestRoute
  '/appointments': typeof AppointmentsRoute
  '/bento-grid-test': typeof BentoGridTestRoute
  '/button-test': typeof ButtonTestRoute
  '/clients': typeof ClientsRoute
  '/comprehensive-button-test': typeof ComprehensiveButtonTestRoute
  '/dashboard': typeof DashboardRoute
  '/financial': typeof FinancialRoute
  '/governance': typeof GovernanceRoute
  '/healthcare-test': typeof HealthcareTestRoute
  '/login': typeof LoginRoute
  '/particle-test': typeof ParticleTestRoute
  '/profile': typeof ProfileRoute
  '/reports': typeof ReportsRoute
  '/settings': typeof SettingsRoute
  '/shadcn-test': typeof ShadcnTestRoute
  '/shine-test': typeof ShineTestRoute
  '/signup': typeof SignupRoute
  '/signup-demo': typeof SignupDemoRoute
  '/test-auth': typeof TestAuthRoute
  '/universal-button-test': typeof UniversalButtonTestRoute
  '/validation-report': typeof ValidationReportRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/confirm': typeof AuthConfirmRoute
  '/patients/$patientId': typeof PatientsPatientIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/advanced-animations-test'
    | '/ai-chat'
    | '/animation-validation-suite'
    | '/api-test'
    | '/appointments'
    | '/bento-grid-test'
    | '/button-test'
    | '/clients'
    | '/comprehensive-button-test'
    | '/dashboard'
    | '/financial'
    | '/governance'
    | '/healthcare-test'
    | '/login'
    | '/particle-test'
    | '/profile'
    | '/reports'
    | '/settings'
    | '/shadcn-test'
    | '/shine-test'
    | '/signup'
    | '/signup-demo'
    | '/test-auth'
    | '/universal-button-test'
    | '/validation-report'
    | '/auth/callback'
    | '/auth/confirm'
    | '/patients/$patientId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | '/advanced-animations-test'
    | '/ai-chat'
    | '/animation-validation-suite'
    | '/api-test'
    | '/appointments'
    | '/bento-grid-test'
    | '/button-test'
    | '/clients'
    | '/comprehensive-button-test'
    | '/dashboard'
    | '/financial'
    | '/governance'
    | '/healthcare-test'
    | '/login'
    | '/particle-test'
    | '/profile'
    | '/reports'
    | '/settings'
    | '/shadcn-test'
    | '/shine-test'
    | '/signup'
    | '/signup-demo'
    | '/test-auth'
    | '/universal-button-test'
    | '/validation-report'
    | '/auth/callback'
    | '/auth/confirm'
    | '/patients/$patientId'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/advanced-animations-test'
    | '/ai-chat'
    | '/animation-validation-suite'
    | '/api-test'
    | '/appointments'
    | '/bento-grid-test'
    | '/button-test'
    | '/clients'
    | '/comprehensive-button-test'
    | '/dashboard'
    | '/financial'
    | '/governance'
    | '/healthcare-test'
    | '/login'
    | '/particle-test'
    | '/profile'
    | '/reports'
    | '/settings'
    | '/shadcn-test'
    | '/shine-test'
    | '/signup'
    | '/signup-demo'
    | '/test-auth'
    | '/universal-button-test'
    | '/validation-report'
    | '/auth/callback'
    | '/auth/confirm'
    | '/patients/$patientId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  AdvancedAnimationsTestRoute: typeof AdvancedAnimationsTestRoute
  AiChatRoute: typeof AiChatRoute
  AnimationValidationSuiteRoute: typeof AnimationValidationSuiteRoute
  ApiTestRoute: typeof ApiTestRoute
  AppointmentsRoute: typeof AppointmentsRoute
  BentoGridTestRoute: typeof BentoGridTestRoute
  ButtonTestRoute: typeof ButtonTestRoute
  ClientsRoute: typeof ClientsRoute
  ComprehensiveButtonTestRoute: typeof ComprehensiveButtonTestRoute
  DashboardRoute: typeof DashboardRoute
  FinancialRoute: typeof FinancialRoute
  GovernanceRoute: typeof GovernanceRoute
  HealthcareTestRoute: typeof HealthcareTestRoute
  LoginRoute: typeof LoginRoute
  ParticleTestRoute: typeof ParticleTestRoute
  ProfileRoute: typeof ProfileRoute
  ReportsRoute: typeof ReportsRoute
  SettingsRoute: typeof SettingsRoute
  ShadcnTestRoute: typeof ShadcnTestRoute
  ShineTestRoute: typeof ShineTestRoute
  SignupRoute: typeof SignupRoute
  SignupDemoRoute: typeof SignupDemoRoute
  TestAuthRoute: typeof TestAuthRoute
  UniversalButtonTestRoute: typeof UniversalButtonTestRoute
  ValidationReportRoute: typeof ValidationReportRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  AuthConfirmRoute: typeof AuthConfirmRoute
  PatientsPatientIdRoute: typeof PatientsPatientIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/validation-report': {
      id: '/validation-report'
      path: '/validation-report'
      fullPath: '/validation-report'
      preLoaderRoute: typeof ValidationReportRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/universal-button-test': {
      id: '/universal-button-test'
      path: '/universal-button-test'
      fullPath: '/universal-button-test'
      preLoaderRoute: typeof UniversalButtonTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test-auth': {
      id: '/test-auth'
      path: '/test-auth'
      fullPath: '/test-auth'
      preLoaderRoute: typeof TestAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup-demo': {
      id: '/signup-demo'
      path: '/signup-demo'
      fullPath: '/signup-demo'
      preLoaderRoute: typeof SignupDemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shine-test': {
      id: '/shine-test'
      path: '/shine-test'
      fullPath: '/shine-test'
      preLoaderRoute: typeof ShineTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shadcn-test': {
      id: '/shadcn-test'
      path: '/shadcn-test'
      fullPath: '/shadcn-test'
      preLoaderRoute: typeof ShadcnTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports': {
      id: '/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/particle-test': {
      id: '/particle-test'
      path: '/particle-test'
      fullPath: '/particle-test'
      preLoaderRoute: typeof ParticleTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/healthcare-test': {
      id: '/healthcare-test'
      path: '/healthcare-test'
      fullPath: '/healthcare-test'
      preLoaderRoute: typeof HealthcareTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/governance': {
      id: '/governance'
      path: '/governance'
      fullPath: '/governance'
      preLoaderRoute: typeof GovernanceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/financial': {
      id: '/financial'
      path: '/financial'
      fullPath: '/financial'
      preLoaderRoute: typeof FinancialRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/comprehensive-button-test': {
      id: '/comprehensive-button-test'
      path: '/comprehensive-button-test'
      fullPath: '/comprehensive-button-test'
      preLoaderRoute: typeof ComprehensiveButtonTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clients': {
      id: '/clients'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof ClientsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/button-test': {
      id: '/button-test'
      path: '/button-test'
      fullPath: '/button-test'
      preLoaderRoute: typeof ButtonTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bento-grid-test': {
      id: '/bento-grid-test'
      path: '/bento-grid-test'
      fullPath: '/bento-grid-test'
      preLoaderRoute: typeof BentoGridTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/appointments': {
      id: '/appointments'
      path: '/appointments'
      fullPath: '/appointments'
      preLoaderRoute: typeof AppointmentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api-test': {
      id: '/api-test'
      path: '/api-test'
      fullPath: '/api-test'
      preLoaderRoute: typeof ApiTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/animation-validation-suite': {
      id: '/animation-validation-suite'
      path: '/animation-validation-suite'
      fullPath: '/animation-validation-suite'
      preLoaderRoute: typeof AnimationValidationSuiteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ai-chat': {
      id: '/ai-chat'
      path: '/ai-chat'
      fullPath: '/ai-chat'
      preLoaderRoute: typeof AiChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/advanced-animations-test': {
      id: '/advanced-animations-test'
      path: '/advanced-animations-test'
      fullPath: '/advanced-animations-test'
      preLoaderRoute: typeof AdvancedAnimationsTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/patients/$patientId': {
      id: '/patients/$patientId'
      path: '/patients/$patientId'
      fullPath: '/patients/$patientId'
      preLoaderRoute: typeof PatientsPatientIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/confirm': {
      id: '/auth/confirm'
      path: '/auth/confirm'
      fullPath: '/auth/confirm'
      preLoaderRoute: typeof AuthConfirmRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  AdvancedAnimationsTestRoute: AdvancedAnimationsTestRoute,
  AiChatRoute: AiChatRoute,
  AnimationValidationSuiteRoute: AnimationValidationSuiteRoute,
  ApiTestRoute: ApiTestRoute,
  AppointmentsRoute: AppointmentsRoute,
  BentoGridTestRoute: BentoGridTestRoute,
  ButtonTestRoute: ButtonTestRoute,
  ClientsRoute: ClientsRoute,
  ComprehensiveButtonTestRoute: ComprehensiveButtonTestRoute,
  DashboardRoute: DashboardRoute,
  FinancialRoute: FinancialRoute,
  GovernanceRoute: GovernanceRoute,
  HealthcareTestRoute: HealthcareTestRoute,
  LoginRoute: LoginRoute,
  ParticleTestRoute: ParticleTestRoute,
  ProfileRoute: ProfileRoute,
  ReportsRoute: ReportsRoute,
  SettingsRoute: SettingsRoute,
  ShadcnTestRoute: ShadcnTestRoute,
  ShineTestRoute: ShineTestRoute,
  SignupRoute: SignupRoute,
  SignupDemoRoute: SignupDemoRoute,
  TestAuthRoute: TestAuthRoute,
  UniversalButtonTestRoute: UniversalButtonTestRoute,
  ValidationReportRoute: ValidationReportRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  AuthConfirmRoute: AuthConfirmRoute,
  PatientsPatientIdRoute: PatientsPatientIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
