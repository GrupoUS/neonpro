// Treatment Success Rate Tracking & Optimization Types
export type TreatmentOutcome = {
  id: string;
  patient_id: string;
  treatment_id: string;
  provider_id: string;
  treatment_type: string;
  treatment_date: string;
  outcome_date: string;
  success_score: number;
  success_criteria: Record<string, any>;
  actual_outcomes: Record<string, any>;
  before_photos: Array<string>;
  after_photos: Array<string>;
  patient_satisfaction_score: number;
  complications: Record<string, any>;
  follow_up_required: boolean;
  notes: string;
  status: 'active' | 'completed' | 'cancelled';
  created_at: string;
  updated_at: string;
};

export type SuccessMetrics = {
  id: string;
  treatment_type: string;
  provider_id: string;
  time_period: 'monthly' | 'quarterly' | 'yearly';
  period_start: string;
  period_end: string;
  total_treatments: number;
  successful_treatments: number;
  success_rate: number;
  average_satisfaction: number;
  complication_rate: number;
  benchmarks: Record<string, any>;
  industry_comparison: Record<string, any>;
  created_at: string;
  updated_at: string;
};

export type ProviderPerformance = {
  id: string;
  provider_id: string;
  evaluation_period: string;
  period_start: string;
  period_end: string;
  overall_success_rate: number;
  patient_satisfaction_avg: number;
  total_treatments: number;
  specialties: Record<string, any>;
  performance_trends: Record<string, any>;
  improvement_areas: Record<string, any>;
  achievements: Record<string, any>;
  training_recommendations: Record<string, any>;
  certification_status: Record<string, any>;
  created_at: string;
  updated_at: string;
};

export type ProtocolOptimization = {
  id: string;
  treatment_type: string;
  current_protocol: Record<string, any>;
  recommended_changes: Record<string, any>;
  success_rate_improvement: number;
  evidence_data: Record<string, any>;
  implementation_priority: 'low' | "medium" | "high" | "critical";
  cost_impact: number;
  timeline_estimate: string;
  approval_status: 'pending' | "approved" | "rejected" | "implemented";
  approved_by: string;
  implementation_date: string;
  results_tracking: Record<string, any>;
  created_at: string;
  updated_at: string;
};

export type QualityBenchmark = {
  id: string;
  treatment_type: string;
  benchmark_type: 'industry_standard' | 'clinic_target' | 'best_practice';
  metric_name: string;
  target_value: number;
  current_value: number;
  variance_percentage: number;
  benchmark_source: string;
  update_frequency: string;
  last_updated: string;
  status: 'active' | 'inactive' | 'deprecated';
  created_at: string;
  updated_at: string;
};

export type SuccessPrediction = {
  id: string;
  patient_id: string;
  treatment_type: string;
  predicted_success_rate: number;
  prediction_factors: Record<string, any>;
  confidence_score: number;
  risk_factors: Record<string, any>;
  recommendations: Record<string, any>;
  created_at: string;
  updated_at: string;
};

export type ComplianceReport = {
  id: string;
  report_type: string;
  reporting_period: string;
  period_start: string;
  period_end: string;
  report_data: Record<string, any>;
  compliance_score: number;
  findings: Record<string, any>;
  recommendations: Record<string, any>;
  action_items: Record<string, any>;
  status: 'draft' | "review" | "approved" | "published";
  generated_by: string;
  reviewed_by: string;
  created_at: string;
  updated_at: string;
};

// API Response Typesexport type TreatmentSuccessApiResponse = {
  data: Array<TreatmentOutcome>;
  total: number;
  page: number;
  limit: number;
};

export type SuccessMetricsApiResponse = {
  data: Array<SuccessMetrics>;
  total: number;
  page: number;
  limit: number;
};

export type ProviderPerformanceApiResponse = {
  data: Array<ProviderPerformance>;
  total: number;
  page: number;
  limit: number;
};

export type ProtocolOptimizationApiResponse = {
  data: Array<ProtocolOptimization>;
  total: number;
  page: number;
  limit: number;
};

export type QualityBenchmarkApiResponse = {
  data: Array<QualityBenchmark>;
  total: number;
  page: number;
  limit: number;
};

export type SuccessPredictionApiResponse = {
  data: Array<SuccessPrediction>;
  total: number;
  page: number;
  limit: number;
};

export type ComplianceReportApiResponse = {
  data: Array<ComplianceReport>;
  total: number;
  page: number;
  limit: number;
};

// Dashboard Statistics Typesexport type SuccessRateStats = {
  overall_success_rate: number;
  total_treatments: number;
  average_satisfaction: number;
  benchmark_comparison: number;
  trend_direction: 'up' | 'down' | 'stable';
  improvement_opportunities: number;
};

export type ProviderStats = {
  total_providers: number;
  top_performer: {;
    provider_id: string;
    success_rate: number;
  };
  average_performance: number;
  improvement_needed: number;
};

export type TreatmentTypeStats = {
  treatment_type: string;
  success_rate: number;
  total_treatments: number;
  satisfaction_score: number;
  benchmark_status: 'above' | 'at' | 'below';
};

export type ComplianceStats = {
  overall_compliance: number;
  pending_reports: number;
  overdue_items: number;
  certification_status: 'current' | 'expiring' | 'expired';
};

// Filter and Search Typesexport type TreatmentSuccessFilters = {
  treatment_type: string;
  provider_id: string;
  date_from: string;
  date_to: string;
  success_rate_min: number;
  success_rate_max: number;
  satisfaction_min: number;
  status: string;
  has_complications: boolean;
};

export type SuccessMetricsFilters = {
  treatment_type: string;
  provider_id: string;
  time_period: string;
  success_rate_min: number;
  period_start: string;
  period_end: string;
};

export type ProviderPerformanceFilters = {
  provider_id: string;
  evaluation_period: string;
  success_rate_min: number;
  period_start: string;
  period_end: string;
};

export type ProtocolOptimizationFilters = {
  treatment_type: string;
  implementation_priority: string;
  approval_status: string;
  success_improvement_min: number;
};

// Form Typesexport type CreateTreatmentOutcomeData = {
  patient_id: string;
  treatment_id: string;
  provider_id: string;
  treatment_type: string;
  treatment_date: string;
  success_criteria: Record<string, any>;
  notes: string;
};

export type UpdateTreatmentOutcomeData = {
  outcome_date: string;
  success_score: number;
  actual_outcomes: Record<string, any>;
  before_photos: Array<string>;
  after_photos: Array<string>;
  patient_satisfaction_score: number;
  complications: Record<string, any>;
  follow_up_required: boolean;
  notes: string;
  status: 'active' | 'completed' | 'cancelled';
};

export type CreateProtocolOptimizationData = {
  treatment_type: string;
  current_protocol: Record<string, any>;
  recommended_changes: Record<string, any>;
  success_rate_improvement: number;
  evidence_data: Record<string, any>;
  implementation_priority: 'low' | "medium" | "high" | "critical";
  cost_impact: number;
  timeline_estimate: string;
};

export type CreateQualityBenchmarkData = {
  treatment_type: string;
  benchmark_type: 'industry_standard' | 'clinic_target' | 'best_practice';
  metric_name: string;
  target_value: number;
  benchmark_source: string;
  update_frequency: string;
};

export type CreateSuccessPredictionData = {
  patient_id: string;
  treatment_type: string;
  prediction_factors: Record<string, any>;
  confidence_score: number;
  risk_factors: Record<string, any>;
  recommendations: Record<string, any>;
};

export type CreateComplianceReportData = {
  report_type: string;
  reporting_period: string;
  period_start: string;
  period_end: string;
  report_data: Record<string, any>;
  compliance_score: number;
  findings: Record<string, any>;
  recommendations: Record<string, any>;
  action_items: Record<string, any>;
};
