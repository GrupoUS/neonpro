// =====================================================================================// EQUIPMENT MAINTENANCE TYPES// Epic 6 - Story 6.4: Comprehensive equipment maintenance types and interfaces// =====================================================================================
export type EquipmentType =
  | 'medical_device'
  | 'diagnostic'
  | 'surgical'
  | "laboratory" | "office" | "it";

export type EquipmentCategory =
  | 'x_ray'
  | 'ultrasound'
  | 'ct_scan'
  | 'mri'
  | 'lab_analyzer'
  | 'autoclave'
  | 'surgical_table'
  | 'anesthesia_machine'
  | 'ventilator'
  | 'defibrillator'
  | 'ecg_machine'
  | 'blood_pressure_monitor'
  | 'infusion_pump'
  | 'centrifuge'
  | 'microscope'
  | 'refrigerator'
  | "computer" | "printer" | "other";

export type EquipmentStatus =
  | 'active'
  | "maintenance" | "out_of_service" | "decommissioned";

export type CriticalityLevel = 'critical' | "high" | "medium" | "low";

export type MaintenanceType =
  | 'preventive'
  | 'predictive'
  | "corrective" | "emergency" | "calibration";

export type FrequencyType =
  | "fixed_interval" | "usage_based" | "condition_based";

export type WorkOrderStatus =
  | 'scheduled'
  | 'in_progress'
  | "completed" | "cancelled" | "on_hold";

export type WorkOrderPriority = 'emergency' | "high" | "medium" | "low";

export type AlertType =
  | 'scheduled_maintenance'
  | 'overdue_maintenance'
  | "emergency" | "calibration_due" | "warranty_expiring";

export type AlertSeverity = 'critical' | 'high' | "medium" | "low" | "info";

export type ContractType =
  | "warranty" | "service_agreement" | "maintenance_contract";

export type ServiceLevel = 'basic' | "standard" | "premium" | "full_service";

export type CoverageType =
  | 'parts_only'
  | "labor_only" | "parts_and_labor" | "full_coverage";

export type ComplianceStatus =
  | 'compliant'
  | "non_compliant" | "pending" | "expired";

export type RequirementType =
  | 'calibration'
  | "inspection" | "testing" | "certification";

export type ConditionTrend = 'improving' | 'stable' | 'degrading';

export type ReportingPeriod = 'daily' | "weekly" | "monthly" | "quarterly";

// =====================================================================================// CORE EQUIPMENT INTERFACE// =====================================================================================
export type Equipment = {
  id: string;
  clinic_id: string;

  // Basic information  name: string;
  model: string;
  manufacturer: string;
  serial_number: string;
  equipment_type: EquipmentType;
  category: EquipmentCategory;

  // Location  location: string;
  department: string;
  room_number: string;

  // Purchase and warranty  purchase_date: string;
  purchase_cost: number;
  warranty_start_date: string;
  warranty_end_date: string;
  vendor_id: string;

  // Status  status: EquipmentStatus;
  condition_rating: number; // 1-10  criticality_level: CriticalityLevel;

  // Usage tracking  usage_hours: number;
  usage_cycles: number;
  last_usage_date: string;
  estimated_lifespan_years: number;

  // Maintenance specifications  maintenance_frequency_days: number;
  usage_based_maintenance: boolean;
  usage_threshold_hours: number;
  usage_threshold_cycles: number;

  // Regulatory  requires_calibration: boolean;
  calibration_frequency_days: number;
  regulatory_requirements: Array<string>;

  // Documentation  manual_url: string;
  specifications: Record<string, any>;
  notes: string;

  // Audit  created_at: string;
  updated_at: string;
  created_by: string;
  updated_by: string;
};

// =====================================================================================// MAINTENANCE SCHEDULE INTERFACE// =====================================================================================
export type MaintenanceSchedule = {
  id: string;
  equipment_id: string;
  clinic_id: string;

  // Schedule information  maintenance_type: MaintenanceType;
  schedule_name: string;
  description: string;

  // Frequency  frequency_type: FrequencyType;
  frequency_days: number;
  frequency_hours: number;
  frequency_cycles: number;

  // Next scheduled maintenance  next_due_date: string;
  next_due_usage_hours: number;
  next_due_cycles: number;

  // Preferences  preferred_time_slot: string;
  estimated_duration_minutes: number;
  required_skills: Array<string>;
  required_tools: Array<string>;
  required_parts: Array<string>;

  // Cost  estimated_cost: number;
  budget_code: string;

  // Notifications  alert_days_before: number;
  critical_alert_days_before: number;
  notification_recipients: Array<string>;

  // Status  is_active: boolean;
  last_completed_date: string;
  times_completed: number;

  // Audit  created_at: string;
  updated_at: string;
  created_by: string;
  updated_by: string;
};

// =====================================================================================// WORK ORDER INTERFACE// =====================================================================================
export type MaintenanceWorkOrder = {
  id: string;
  equipment_id: string;
  schedule_id: string;
  clinic_id: string;

  // Work order information  work_order_number: string;
  title: string;
  description: string;
  maintenance_type: MaintenanceType;
  priority: WorkOrderPriority;

  // Scheduling  scheduled_date: string;
  scheduled_start_time: string;
  estimated_duration_minutes: number;

  // Assignment  assigned_technician_id: string;
  assigned_team_ids: Array<string>;
  external_vendor_id: string;

  // Status  status: WorkOrderStatus;
  actual_start_time: string;
  actual_end_time: string;
  actual_duration_minutes: number;

  // Completion  completion_notes: string;
  issues_found: string;
  actions_taken: string;
  parts_used: Record<string, any>;
  materials_cost: number;
  labor_hours: number;
  total_cost: number;

  // Quality  quality_check_passed: boolean;
  calibration_performed: boolean;
  calibration_results: Record<string, any>;
  certification_updated: boolean;

  // Follow-up  requires_follow_up: boolean;
  follow_up_date: string;
  follow_up_notes: string;

  // Documentation  photos_urls: Array<string>;
  documents_urls: Array<string>;

  // Audit  created_at: string;
  updated_at: string;
  completed_at: string;
  created_by: string;
  updated_by: string;
};

// =====================================================================================// MAINTENANCE ALERT INTERFACE// =====================================================================================
export type MaintenanceAlert = {
  id: string;
  equipment_id: string;
  schedule_id: string;
  work_order_id: string;
  clinic_id: string;

  // Alert information  alert_type: AlertType;
  severity: AlertSeverity;
  title: string;
  message: string;

  // Timing  trigger_date: string;
  due_date: string;
  days_until_due: number;

  // Status  is_active: boolean;
  is_acknowledged: boolean;
  acknowledged_by: string;
  acknowledged_at: string;

  // Notification  notification_sent: boolean;
  notification_sent_at: string;
  notification_recipients: Array<string>;
  delivery_methods: Array<string>;

  // Resolution  is_resolved: boolean;
  resolved_by: string;
  resolved_at: string;
  resolution_notes: string;

  // Audit  created_at: string;
  updated_at: string;
};

// =====================================================================================// EQUIPMENT USAGE LOG INTERFACE// =====================================================================================
export type EquipmentUsageLog = {
  id: string;
  equipment_id: string;
  clinic_id: string;

  // Usage session  session_start: string;
  session_end: string;
  duration_minutes: number;
  usage_type: string;

  // Metrics  cycles_performed: number;
  power_consumption_kwh: number;
  performance_metrics: Record<string, any>;

  // Operator  operated_by: string;
  department: string;
  patient_id: string;
  procedure_type: string;

  // Environment  ambient_temperature: number;
  humidity_percentage: number;
  environmental_conditions: Record<string, any>;

  // Performance  performance_rating: number; // 1-10  issues_reported: string;
  anomalies_detected: Record<string, any>;

  // Tracking  auto_logged: boolean;
  data_source: string;

  // Audit  created_at: string;
};

// =====================================================================================// MAINTENANCE HISTORY INTERFACE// =====================================================================================
export type MaintenanceHistory = {
  id: string;
  equipment_id: string;
  work_order_id: string;
  clinic_id: string;

  // Event  maintenance_date: string;
  maintenance_type: MaintenanceType;
  description: string;

  // Personnel  performed_by: string;
  technician_id: string;
  vendor_name: string;
  vendor_id: string;

  // Work  work_performed: string;
  parts_replaced: Record<string, any>;
  adjustments_made: string;
  issues_resolved: string;

  // Results  pre_maintenance_condition: number; // 1-10  post_maintenance_condition: number; // 1-10  performance_improvement: number;
  downtime_hours: number;

  // Costs  labor_cost: number;
  parts_cost: number;
  total_cost: number;

  // Compliance  compliance_standards_met: Array<string>;
  certifications_updated: Array<string>;
  calibration_certificates_urls: Array<string>;

  // Documentation  maintenance_report_url: string;
  photos_urls: Array<string>;
  documentation_urls: Array<string>;

  // Next maintenance  next_maintenance_recommended_date: string;
  recommendations: string;

  // Audit  created_at: string;
  created_by: string;
};

// =====================================================================================// EQUIPMENT PERFORMANCE METRICS INTERFACE// =====================================================================================
export type EquipmentPerformanceMetrics = {
  id: string;
  equipment_id: string;
  clinic_id: string;

  // Period  metric_date: string;
  reporting_period: ReportingPeriod;

  // Availability  total_scheduled_hours: number;
  actual_operational_hours: number;
  downtime_hours: number;
  availability_percentage: number;

  // Reliability  mean_time_between_failures: number; // MTBF  mean_time_to_repair: number; // MTTR  failure_rate: number;
  reliability_score: number;

  // Performance  performance_efficiency: number;
  throughput_metrics: Record<string, any>;
  quality_metrics: Record<string, any>;
  energy_efficiency: number;

  // Maintenance  scheduled_maintenance_hours: number;
  unscheduled_maintenance_hours: number;
  maintenance_cost: number;
  cost_per_operational_hour: number;

  // Usage  peak_usage_hours: Array<string>;
  utilization_rate: number;
  usage_pattern_analysis: Record<string, any>;

  // Predictive  condition_trend: ConditionTrend;
  predicted_failure_risk: number;
  recommended_actions: Array<string>;

  // Audit  created_at: string;
  calculated_at: string;
};

// =====================================================================================// VENDOR SERVICE CONTRACT INTERFACE// =====================================================================================
export type VendorServiceContract = {
  id: string;
  equipment_id: string;
  vendor_id: string;
  clinic_id: string;

  // Contract  contract_number: string;
  contract_type: ContractType;
  service_level: ServiceLevel;

  // Coverage  coverage_type: CoverageType;
  covered_services: Array<string>;
  excluded_services: Array<string>;
  response_time_hours: number;
  resolution_time_hours: number;

  // Terms  start_date: string;
  end_date: string;
  auto_renewal: boolean;
  contract_value: number;
  payment_schedule: string;

  // Performance  uptime_guarantee_percentage: number;
  performance_penalties: Record<string, any>;
  service_credits: Record<string, any>;

  // Contact  vendor_contact_name: string;
  vendor_contact_phone: string;
  vendor_contact_email: string;
  emergency_contact_phone: string;

  // Status  contract_status: string;
  last_service_date: string;
  service_calls_used: number;
  service_calls_remaining: number;

  // Documentation  contract_document_url: string;
  terms_and_conditions_url: string;

  // Audit  created_at: string;
  updated_at: string;
  created_by: string;
  updated_by: string;
};

// =====================================================================================// COMPLIANCE RECORD INTERFACE// =====================================================================================
export type EquipmentComplianceRecord = {
  id: string;
  equipment_id: string;
  clinic_id: string;

  // Requirement  regulation_name: string;
  regulation_body: string;
  requirement_type: RequirementType;
  compliance_standard: string;

  // Status  compliance_status: ComplianceStatus;
  last_compliance_date: string;
  next_compliance_due_date: string;
  compliance_frequency_days: number;

  // Documentation  certificate_number: string;
  certificate_url: string;
  compliance_report_url: string;
  test_results: Record<string, any>;

  // Responsible parties  compliance_officer_id: string;
  testing_organization: string;
  certified_by: string;

  // Notifications  reminder_days_before: number;
  critical_reminder_days_before: number;
  notification_recipients: Array<string>;

  // Audit  created_at: string;
  updated_at: string;
  created_by: string;
  updated_by: string;
};

// =====================================================================================// REQUEST/RESPONSE INTERFACES// =====================================================================================
export type CreateEquipmentRequest = {
  clinic_id: string;
  name: string;
  model: string;
  manufacturer: string;
  serial_number: string;
  equipment_type: EquipmentType;
  category: EquipmentCategory;
  location: string;
  department: string;
  room_number: string;
  purchase_date: string;
  purchase_cost: number;
  warranty_start_date: string;
  warranty_end_date: string;
  vendor_id: string;
  criticality_level: CriticalityLevel;
  estimated_lifespan_years: number;
  maintenance_frequency_days: number;
  usage_based_maintenance: boolean;
  usage_threshold_hours: number;
  usage_threshold_cycles: number;
  requires_calibration: boolean;
  calibration_frequency_days: number;
  regulatory_requirements: Array<string>;
  manual_url: string;
  specifications: Record<string, any>;
  notes: string;
};

export type UpdateEquipmentRequest = {
  name: string;
  model: string;
  manufacturer: string;
  serial_number: string;
  equipment_type: EquipmentType;
  category: EquipmentCategory;
  location: string;
  department: string;
  room_number: string;
  status: EquipmentStatus;
  condition_rating: number;
  criticality_level: CriticalityLevel;
  purchase_date: string;
  purchase_cost: number;
  warranty_start_date: string;
  warranty_end_date: string;
  vendor_id: string;
  estimated_lifespan_years: number;
  maintenance_frequency_days: number;
  usage_based_maintenance: boolean;
  usage_threshold_hours: number;
  usage_threshold_cycles: number;
  requires_calibration: boolean;
  calibration_frequency_days: number;
  regulatory_requirements: Array<string>;
  manual_url: string;
  specifications: Record<string, any>;
  notes: string;
};

export type CreateMaintenanceScheduleRequest = {
  equipment_id: string;
  clinic_id: string;
  maintenance_type: MaintenanceType;
  schedule_name: string;
  description: string;
  frequency_type: FrequencyType;
  frequency_days: number;
  frequency_hours: number;
  frequency_cycles: number;
  preferred_time_slot: string;
  estimated_duration_minutes: number;
  required_skills: Array<string>;
  required_tools: Array<string>;
  required_parts: Array<string>;
  estimated_cost: number;
  budget_code: string;
  alert_days_before: number;
  critical_alert_days_before: number;
  notification_recipients: Array<string>;
};

export type CreateWorkOrderRequest = {
  equipment_id: string;
  schedule_id: string;
  clinic_id: string;
  title: string;
  description: string;
  maintenance_type: MaintenanceType;
  priority: WorkOrderPriority;
  scheduled_date: string;
  scheduled_start_time: string;
  estimated_duration_minutes: number;
  assigned_technician_id: string;
  assigned_team_ids: Array<string>;
  external_vendor_id: string;
};

export type CreateUsageLogRequest = {
  equipment_id: string;
  clinic_id: string;
  session_start: string;
  session_end: string;
  usage_type: string;
  cycles_performed: number;
  power_consumption_kwh: number;
  performance_metrics: Record<string, any>;
  operated_by: string;
  department: string;
  patient_id: string;
  procedure_type: string;
  ambient_temperature: number;
  humidity_percentage: number;
  environmental_conditions: Record<string, any>;
  performance_rating: number;
  issues_reported: string;
  anomalies_detected: Record<string, any>;
};

// =====================================================================================// DASHBOARD AND ANALYTICS INTERFACES// =====================================================================================
export type MaintenanceDashboardData = {
  totalEquipment: number;
  activeEquipment: number;
  equipmentInMaintenance: number;
  overdueMaintenance: number;
  maintenanceDueThisWeek: number;
  pendingWorkOrders: number;
  completedWorkOrdersThisMonth: number;
  averageMaintenanceCost: number;
  equipmentAvailability: number;
  complianceRate: number;
  criticalAlerts: number;
  equipmentByType: Array<{;
    type: EquipmentType;
    count: number;
    availability: number;
  }>;
  maintenanceByType: Array<{;
    type: MaintenanceType;
    count: number;
    averageCost: number;
  }>;
  upcomingMaintenance: Array<{;
    equipmentId: string;
    equipmentName: string;
    dueDate: string;
    maintenanceType: MaintenanceType;
    daysUntilDue: number;
  }>;
  recentAlerts: Array<MaintenanceAlert>;
  performanceTrends: Array<{;
    date: string;
    availability: number;
    reliability: number;
    efficiency: number;
  }>;
};

export type EquipmentListResponse = {
  equipment: Array<Equipment>;
  page: number;
  limit: number;
  total: number;
};

export type EquipmentFilters = {
  equipment_type: Array<EquipmentType>;
  category: Array<EquipmentCategory>;
  status: Array<EquipmentStatus>;
  criticality_level: Array<CriticalityLevel>;
  department: Array<string>;
  location: Array<string>;
  requires_maintenance: boolean;
  warranty_expiring: boolean;
  search: string;
};

export type MaintenanceAnalytics = {
  totalMaintenanceCost: number;
  costTrends: Array<{;
    period: string;
    preventive: number;
    corrective: number;
    emergency: number;
  }>;
  equipmentReliability: Array<{;
    equipmentId: string;
    equipmentName: string;
    mtbf: number;
    mttr: number;
    availabilityRate: number;
  }>;
  {;
    plannedVsUnplanned: number;
    onTimeCompletion: number;
    firstTimeFixRate: number;
    averageRepairTime: number;
  };
  costPerEquipmentType: Array<{;
    equipmentType: EquipmentType;
    totalCost: number;
    averageCostPerUnit: number;
    trend: 'increasing' | 'decreasing' | 'stable';
  }>;
  {;
    overallComplianceRate: number;
    expiringSoon: number;
    overdue: number;
    byRegulation: Array<{;
      regulation: string;
      complianceRate: number;
    }>;
  };
};
