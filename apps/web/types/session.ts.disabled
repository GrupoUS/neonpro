/**
 * Session and Device Management Types
 * Types for authentication, session management, and device tracking
 */

// Device Typesexport enum DeviceType {
  DESKTOP = 'desktop',
  MOBILE = 'mobile',
  TABLET = 'tablet',
  WEB = 'web',
  API = 'api',
  UNKNOWN = 'unknown',
}

// Security Event Typesexport enum SecurityEventType {
  LOGIN_SUCCESS = 'login_success',
  LOGIN_FAILED = 'login_failed',
  LOGOUT = 'logout',
  SESSION_CREATED = 'session_created',
  SESSION_EXPIRED = 'session_expired',
  SESSION_TERMINATED = 'session_terminated',
  DEVICE_REGISTERED = 'device_registered',
  DEVICE_UPDATED = 'device_updated',
  DEVICE_REMOVED = 'device_removed',
  SUSPICIOUS_ACTIVITY = 'suspicious_activity',
  PASSWORD_CHANGED = 'password_changed',
  MFA_ENABLED = 'mfa_enabled',
  MFA_DISABLED = 'mfa_disabled',
  PERMISSION_DENIED = 'permission_denied',
  DATA_ACCESS = 'data_access',
  ADMIN_ACTION = 'admin_action',
}

// Security Severity Levelsexport enum SecuritySeverity {
  LOW = 'low',
  MEDIUM = 'medium',
  HIGH = 'high',
  CRITICAL = 'critical',
}

// Session Statusexport enum SessionStatus {
  ACTIVE = 'active',
  EXPIRED = 'expired',
  TERMINATED = 'terminated',
  SUSPENDED = 'suspended',
}

// Base Device Interfaceexport interface Device {
  id: string;
  user_id: string;
  device_name: string;
  device_type: DeviceType;
  ip_address: string;
  user_agent: string;
  trusted: boolean;
  last_seen: string;
  created_at: string;
  updated_at: string;
  fingerprint: string;
  {;
  country?: string;
  city: string;
  region: string;
};
}

// Device Registration Dataexport interface DeviceRegistrationData {
  user_id: string;
  device_name: string;
  device_type: DeviceType;
  ip_address: string;
  user_agent: string;
  trusted: boolean;
  last_seen: string;
  fingerprint: string;
}

// Device Update Dataexport interface DeviceUpdateData {
  device_name: string;
  trusted: boolean;
  last_seen: string;
  ip_address: string;
  user_agent: string;
}

// Session Interfaceexport interface Session {
  id: string;
  user_id: string;
  device_id: string;
  status: SessionStatus;
  ip_address: string;
  user_agent: string;
  created_at: string;
  updated_at: string;
  expires_at: string;
  last_activity: string;
  metadata: Record<string, any>;
}

// Security Event Interfaceexport interface SecurityEvent {
  id: string;
  session_id: string;
  user_id: string;
  event_type: SecurityEventType;
  severity: SecuritySeverity;
  description: string;
  ip_address: string;
  user_agent: string;
  created_at: string;
  metadata: Record<string, any>;
}

// Session Manager Configurationexport interface SessionManagerConfig {
  defaultTimeout: number; // in minutes  maxConcurrentSessions: number;
  enableDeviceTracking: boolean;
  enableSecurityMonitoring: boolean;
  enableSuspiciousActivityDetection: boolean;
  sessionCleanupInterval: number; // in milliseconds  securityEventRetention: number; // in milliseconds  encryptionKey: string;
}

// Session Creation Dataexport interface SessionCreationData {
  user_id: string;
  device_id: string;
  ip_address: string;
  user_agent: string;
  expires_at: string;
  metadata: Record<string, any>;
}

// Session Update Dataexport interface SessionUpdateData {
  status: SessionStatus;
  last_activity: string;
  expires_at: string;
  metadata: Record<string, any>;
}

// Security Event Creation Dataexport interface SecurityEventCreationData {
  session_id: string;
  user_id: string;
  event_type: SecurityEventType;
  severity: SecuritySeverity;
  description: string;
  ip_address: string;
  user_agent: string;
  metadata: Record<string, any>;
}

// Authentication Contextexport interface AuthContext {
  user: {;
  id: string;
  email: string;
  role: string;
  permissions: Array<string>;
} | null;
  session: Session | null;
  device: Device | null;
  isAuthenticated: boolean;
  isLoading: boolean;
}

// Login Responseexport interface LoginResponse {
  success: boolean;
  session: Session;
  device: Device;
  {;
  id: string;
  email: string;
  role: string;
  permissions: Array<string>;
};
  error: string;
  requiresMFA: boolean;
  mfaToken: string;
}

// Logout Responseexport interface LogoutResponse {
  success: boolean;
  error: string;
}

// Device List Responseexport interface DeviceListResponse {
  devices: Array<Device>;
  total: number;
}

// Session List Responseexport interface SessionListResponse {
  sessions: Array<Session>;
  total: number;
}

// Security Events Responseexport interface SecurityEventsResponse {
  events: Array<SecurityEvent>;
  total: number;
  hasMore: boolean;
}

// Suspicious Activity Detectionexport interface SuspiciousActivityRule {
  id: string;
  name: string;
  description: string;
  enabled: boolean;
  severity: SecuritySeverity;
  conditions: Record<string, any>;
  actions: Array<string>;
}

// Activity Patternexport interface ActivityPattern {
  user_id: string;
  pattern_type: string;
  frequency: number;
  last_occurrence: string;
  risk_score: number;
  metadata: Record<string, any>;
}

// Rate Limitingexport interface RateLimitRule {
  endpoint: string;
  method: string;
  limit: number;
  window: number; // in seconds  enabled: boolean;
}

// Session Analyticsexport interface SessionAnalytics {
  total_sessions: number;
  active_sessions: number;
  unique_users: number;
  unique_devices: number;
  security_events: number;
  suspicious_activities: number;
  {;
  start: string;
  end: string;
};
}

// Export all types for convenienceexport type {
  Device,
  DeviceRegistrationData,
  DeviceUpdateData,
  Session,
  SecurityEvent,
  SessionManagerConfig,
  SessionCreationData,
  SessionUpdateData,
  SecurityEventCreationData,
  AuthContext,
  LoginResponse,
  LogoutResponse,
  DeviceListResponse,
  SessionListResponse,
  SecurityEventsResponse,
  SuspiciousActivityRule,
  ActivityPattern,
  RateLimitRule,
  SessionAnalytics,
};
