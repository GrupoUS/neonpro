"use client";

import type { ChatMessage } from '@/components/chat/ChatInterface';

// Healthcare workflow types
export type HealthcareWorkflowType = 
  | 'consultation' 
  | 'emergency' 
  | 'follow-up' 
  | 'scheduling'
  | 'payment-support'
  | 'pre-procedure'
  | 'post-procedure'
  | 'general-inquiry';

export type WorkflowPriority = 'low' | 'medium' | 'high' | 'critical';

export type EscalationRule = {
  condition: 'keyword' | 'sentiment' | 'confidence' | 'time' | 'emergency';
  value: string | number;
  action: 'escalate' | 'alert' | 'transfer' | 'emergency';
  targetRole?: 'doctor' | 'nurse' | 'receptionist' | 'manager';
  specialty?: 'dermatology' | 'aesthetics' | 'plastic-surgery';
};

export interface HealthcareWorkflow {
  type: HealthcareWorkflowType;
  priority: WorkflowPriority;
  autoResponders: boolean;
  escalationRules: EscalationRule[];
  complianceRequired: Array<'cfm' | 'anvisa' | 'lgpd'>;
  maxResponseTime: number; // seconds
  healthcareContext: {
    requiresLicense?: boolean;
    medicalAdviceAllowed?: boolean;
    prescriptionAllowed?: boolean;
    emergencyProtocol?: boolean;
  };
  conversationFlow: WorkflowStep[];
}

export interface WorkflowStep {
  id: string;
  name: string;
  description: string;
  autoTrigger?: {
    keywords: string[];
    sentiment?: 'positive' | 'negative' | 'neutral' | 'urgent';
    confidence?: number;
  };
  responses: WorkflowResponse[];
  nextSteps?: string[];
  escalationTrigger?: boolean;
}

export interface WorkflowResponse {
  id: string;
  text: string;
  type: 'text' | 'quick-reply' | 'form' | 'appointment-link';
  metadata?: {
    quickReplies?: string[];
    formFields?: string[];
    appointmentTypes?: string[];
    specialties?: string[];
  };
}

// Brazilian healthcare compliance patterns
export const BRAZILIAN_HEALTHCARE_WORKFLOWS: Record<HealthcareWorkflowType, HealthcareWorkflow> = {
  consultation: {
    type: 'consultation',
    priority: 'high',
    autoResponders: true,
    escalationRules: [
      {
        condition: 'keyword',
        value: 'dor|sangramento|emerg√™ncia|urgente|grave|cr√≠tico',
        action: 'escalate',
        targetRole: 'doctor',
      },
      {
        condition: 'confidence',
        value: 0.3,
        action: 'alert',
        targetRole: 'nurse',
      },
    ],
    complianceRequired: ['cfm', 'lgpd'],
    maxResponseTime: 300, // 5 minutes
    healthcareContext: {
      requiresLicense: true,
      medicalAdviceAllowed: false, // Only licensed professionals
      prescriptionAllowed: false,
      emergencyProtocol: false,
    },
    conversationFlow: [
      {
        id: 'greeting',
        name: 'Sauda√ß√£o Inicial',
        description: 'Recep√ß√£o calorosa e identifica√ß√£o da necessidade',
        responses: [
          {
            id: 'welcome',
            text: 'üè• Ol√°! Bem-vindo √† consulta online da NeonPro. Sou seu assistente virtual especializado em est√©tica e dermatologia.\n\nPara melhor atend√™-lo, preciso de algumas informa√ß√µes:\n\nüìù Qual √© sua principal d√∫vida ou preocupa√ß√£o hoje?',
            type: 'text',
          }
        ],
        nextSteps: ['symptom-assessment'],
      },
      {
        id: 'symptom-assessment',
        name: 'Avalia√ß√£o de Sintomas',
        description: 'Coleta de informa√ß√µes sobre sintomas e hist√≥rico',
        autoTrigger: {
          keywords: ['sintoma', 'problema', 'd√∫vida', 'tratamento'],
          confidence: 0.7,
        },
        responses: [
          {
            id: 'symptom-questions',
            text: 'üìã Para uma avalia√ß√£o adequada, preciso entender melhor sua situa√ß√£o:\n\n1. H√° quanto tempo voc√™ tem essa preocupa√ß√£o?\n2. J√° fez algum tratamento similar antes?\n3. Tem alergias conhecidas a medicamentos ou produtos?\n4. Est√° tomando algum medicamento atualmente?\n\n‚ö†Ô∏è **Importante:** Esta consulta n√£o substitui uma avalia√ß√£o presencial com profissional licenciado.',
            type: 'form',
            metadata: {
              formFields: ['duration', 'previous-treatments', 'allergies', 'current-medications'],
            },
          }
        ],
        nextSteps: ['professional-recommendation'],
      },
      {
        id: 'professional-recommendation',
        name: 'Recomenda√ß√£o Profissional',
        description: 'Direcionamento para profissional adequado',
        responses: [
          {
            id: 'schedule-consultation',
            text: 'üë®‚Äç‚öïÔ∏è Com base nas informa√ß√µes fornecidas, recomendo uma consulta presencial com nosso especialista.\n\nüìÖ **Op√ß√µes de agendamento:**\n‚Ä¢ Dermatologista - Pr√≥xima disponibilidade\n‚Ä¢ M√©dico Est√©tico - Avalia√ß√£o completa\n‚Ä¢ Cirurgi√£o Pl√°stico - Consulta especializada\n\nüîí **Conformidade LGPD:** Seus dados s√£o protegidos conforme a legisla√ß√£o brasileira.',
            type: 'appointment-link',
            metadata: {
              appointmentTypes: ['dermatology', 'aesthetic-medicine', 'plastic-surgery'],
              specialties: ['skin-conditions', 'aesthetic-procedures', 'surgical-procedures'],
            },
          }
        ],
        nextSteps: ['follow-up'],
      },
    ],
  },

  emergency: {
    type: 'emergency',
    priority: 'critical',
    autoResponders: true,
    escalationRules: [
      {
        condition: 'keyword',
        value: 'emerg√™ncia|urgente|samu|192|socorro|grave|cr√≠tico|n√£o respira|inconsciente',
        action: 'emergency',
        targetRole: 'doctor',
      },
      {
        condition: 'time',
        value: 30, // 30 seconds
        action: 'escalate',
        targetRole: 'manager',
      },
    ],
    complianceRequired: ['cfm'],
    maxResponseTime: 10, // 10 seconds
    healthcareContext: {
      requiresLicense: true,
      medicalAdviceAllowed: true, // Emergency context allows guidance
      prescriptionAllowed: false,
      emergencyProtocol: true,
    },
    conversationFlow: [
      {
        id: 'emergency-assessment',
        name: 'Avalia√ß√£o de Emerg√™ncia',
        description: 'Triagem imediata da situa√ß√£o',
        responses: [
          {
            id: 'emergency-triage',
            text: 'üö® **PROTOCOLO DE EMERG√äNCIA ATIVADO**\n\n‚ö° **RESPOSTA IMEDIATA:**\n\n1. **SITUA√á√ÉO GRAVE?** Se houver risco de vida, ligue **192 (SAMU)** AGORA\n2. **Local seguro?** Certifique-se de estar em ambiente seguro\n3. **Consci√™ncia?** A pessoa est√° consciente e responsiva?\n\nüìû **Nossa equipe m√©dica foi alertada automaticamente**\n\n‚è∞ **Tempo de resposta:** < 60 segundos\n\nDescreva rapidamente a situa√ß√£o:',
            type: 'text',
          }
        ],
        nextSteps: ['emergency-instructions'],
        escalationTrigger: true,
      },
      {
        id: 'emergency-instructions',
        name: 'Instru√ß√µes de Emerg√™ncia',
        description: 'Orienta√ß√µes imediatas enquanto aguarda socorro',
        responses: [
          {
            id: 'first-aid',
            text: 'üè• **INSTRU√á√ïES ENQUANTO AGUARDA SOCORRO:**\n\n‚úÖ **Primeiros Socorros B√°sicos:**\n‚Ä¢ Mantenha a calma\n‚Ä¢ N√£o mova a pessoa se houver suspeita de trauma\n‚Ä¢ Monitore respira√ß√£o e pulso\n‚Ä¢ Mantenha vias a√©reas desobstru√≠das\n\nüì± **Contatos de Emerg√™ncia:**\n‚Ä¢ SAMU: 192\n‚Ä¢ Bombeiros: 193\n‚Ä¢ Pol√≠cia: 190\n\nüë®‚Äç‚öïÔ∏è **M√©dico NeonPro conectando em instantes...**',
            type: 'text',
          }
        ],
        nextSteps: ['professional-handoff'],
      },
    ],
  },

  scheduling: {
    type: 'scheduling',
    priority: 'medium',
    autoResponders: true,
    escalationRules: [
      {
        condition: 'time',
        value: 600, // 10 minutes
        action: 'alert',
        targetRole: 'receptionist',
      },
    ],
    complianceRequired: ['lgpd'],
    maxResponseTime: 120, // 2 minutes
    healthcareContext: {
      requiresLicense: false,
      medicalAdviceAllowed: false,
      prescriptionAllowed: false,
      emergencyProtocol: false,
    },
    conversationFlow: [
      {
        id: 'scheduling-greeting',
        name: 'Agendamento - Recep√ß√£o',
        description: 'In√≠cio do processo de agendamento',
        autoTrigger: {
          keywords: ['agendar', 'marcar', 'consulta', 'hor√°rio', 'disponibilidade'],
          confidence: 0.8,
        },
        responses: [
          {
            id: 'scheduling-options',
            text: 'üìÖ **Agendamento NeonPro - Sistema Inteligente**\n\nüéØ **Tipos de Consulta Dispon√≠veis:**\n\nüî∏ **Dermatologia:** Acne, manchas, les√µes de pele\nüî∏ **Medicina Est√©tica:** Botox, preenchimento, tratamentos faciais\nüî∏ **Cirurgia Pl√°stica:** Avalia√ß√£o para procedimentos cir√∫rgicos\nüî∏ **Retorno/Follow-up:** Acompanhamento p√≥s-procedimento\n\n‚ú® **Qual tipo de consulta voc√™ precisa?**',
            type: 'quick-reply',
            metadata: {
              quickReplies: ['Dermatologia', 'Medicina Est√©tica', 'Cirurgia Pl√°stica', 'Retorno'],
            },
          }
        ],
        nextSteps: ['availability-check'],
      },
      {
        id: 'availability-check',
        name: 'Verifica√ß√£o de Disponibilidade',
        description: 'Consulta hor√°rios dispon√≠veis',
        responses: [
          {
            id: 'available-slots',
            text: 'üóìÔ∏è **Hor√°rios Dispon√≠veis:**\n\nüìÖ **Esta Semana:**\n‚Ä¢ Ter√ßa-feira, 14:00 - Dr. Silva (Dermatologia)\n‚Ä¢ Quarta-feira, 09:30 - Dra. Santos (Est√©tica)\n‚Ä¢ Quinta-feira, 16:00 - Dr. Oliveira (Cirurgia Pl√°stica)\n\nüìÖ **Pr√≥xima Semana:**\n‚Ä¢ Segunda-feira, 08:00 - Dra. Costa (Dermatologia)\n‚Ä¢ Ter√ßa-feira, 15:30 - Dr. Lima (Est√©tica)\n\n‚≠ê **Qual hor√°rio prefere?**\n\nüí° **Dica:** Consultas matutinas t√™m 20% de desconto!',
            type: 'quick-reply',
            metadata: {
              quickReplies: ['Ter√ßa 14h', 'Quarta 09:30', 'Quinta 16h', 'Segunda 08h', 'Ter√ßa 15:30'],
            },
          }
        ],
        nextSteps: ['patient-info'],
      },
    ],
  },

  'follow-up': {
    type: 'follow-up',
    priority: 'medium',
    autoResponders: true,
    escalationRules: [
      {
        condition: 'keyword',
        value: 'complica√ß√£o|infec√ß√£o|piorou|problema|preocupado',
        action: 'escalate',
        targetRole: 'doctor',
      },
    ],
    complianceRequired: ['cfm', 'lgpd'],
    maxResponseTime: 180, // 3 minutes
    healthcareContext: {
      requiresLicense: true,
      medicalAdviceAllowed: true,
      prescriptionAllowed: false,
      emergencyProtocol: false,
    },
    conversationFlow: [
      {
        id: 'follow-up-assessment',
        name: 'Avalia√ß√£o de Follow-up',
        description: 'Verifica√ß√£o do progresso p√≥s-procedimento',
        autoTrigger: {
          keywords: ['p√≥s', 'depois', 'resultado', 'evolu√ß√£o', 'follow'],
          confidence: 0.7,
        },
        responses: [
          {
            id: 'recovery-check',
            text: 'üè• **Follow-up NeonPro - Acompanhamento Especializado**\n\nüìã **Vamos avaliar sua evolu√ß√£o:**\n\n1. **Como est√° se sentindo** ap√≥s o procedimento?\n2. **Est√° seguindo** todas as orienta√ß√µes m√©dicas?\n3. **Houve alguma rea√ß√£o** inesperada?\n4. **N√≠vel de satisfa√ß√£o** com o resultado at√© agora?\n\nüìä **Escala de 1-10, como avalia sua recupera√ß√£o?**\n\n‚öïÔ∏è Todas as informa√ß√µes s√£o registradas em seu prontu√°rio eletr√¥nico.',
            type: 'form',
            metadata: {
              formFields: ['general-feeling', 'compliance', 'reactions', 'satisfaction', 'recovery-scale'],
            },
          }
        ],
        nextSteps: ['recovery-guidance'],
      },
    ],
  },

  'pre-procedure': {
    type: 'pre-procedure',
    priority: 'high',
    autoResponders: true,
    escalationRules: [],
    complianceRequired: ['cfm', 'anvisa', 'lgpd'],
    maxResponseTime: 240, // 4 minutes
    healthcareContext: {
      requiresLicense: true,
      medicalAdviceAllowed: true,
      prescriptionAllowed: false,
      emergencyProtocol: false,
    },
    conversationFlow: [
      {
        id: 'pre-procedure-prep',
        name: 'Prepara√ß√£o Pr√©-Procedimento',
        description: 'Orienta√ß√µes e checklist pr√©-procedimento',
        responses: [
          {
            id: 'preparation-guide',
            text: 'üìã **Prepara√ß√£o para seu Procedimento - NeonPro**\n\n‚úÖ **Checklist de Prepara√ß√£o:**\n\n**24 horas antes:**\n‚Ä¢ Evite √°lcool e anti-inflamat√≥rios\n‚Ä¢ Hidrate-se bem (2-3 litros de √°gua)\n‚Ä¢ Durma pelo menos 8 horas\n\n**No dia do procedimento:**\n‚Ä¢ Tome caf√© da manh√£ leve\n‚Ä¢ Use roupas confort√°veis\n‚Ä¢ Chegue 30 minutos antes\n\n‚ö†Ô∏è **Contraindica√ß√µes tempor√°rias:**\n‚Ä¢ Gravidez ou amamenta√ß√£o\n‚Ä¢ Infec√ß√µes ativas na regi√£o\n‚Ä¢ Uso de anticoagulantes\n\nüìû **D√∫vidas?** Nossa equipe est√° dispon√≠vel 24h',
            type: 'text',
          }
        ],
        nextSteps: ['final-confirmation'],
      },
    ],
  },

  'post-procedure': {
    type: 'post-procedure',
    priority: 'high',
    autoResponders: true,
    escalationRules: [
      {
        condition: 'keyword',
        value: 'infec√ß√£o|pus|febre|dor intensa|sangramento',
        action: 'emergency',
        targetRole: 'doctor',
      },
    ],
    complianceRequired: ['cfm', 'lgpd'],
    maxResponseTime: 120, // 2 minutes
    healthcareContext: {
      requiresLicense: true,
      medicalAdviceAllowed: true,
      prescriptionAllowed: false,
      emergencyProtocol: true,
    },
    conversationFlow: [
      {
        id: 'post-care-instructions',
        name: 'Instru√ß√µes P√≥s-Procedimento',
        description: 'Cuidados essenciais p√≥s-procedimento',
        responses: [
          {
            id: 'aftercare-guide',
            text: 'üè• **Cuidados P√≥s-Procedimento - NeonPro**\n\n‚ú® **Primeiras 24 horas - CR√çTICAS:**\n\n‚ùÑÔ∏è **Gelo:** 15 min a cada hora (primeiras 6h)\nüíä **Medica√ß√£o:** Conforme prescri√ß√£o m√©dica\nüö´ **Evite:** Sol, exerc√≠cios, √°lcool\nüíß **Limpeza:** Apenas √°gua filtrada\n\n‚ö†Ô∏è **SINAIS DE ALERTA - Procure atendimento:**\n‚Ä¢ Febre acima de 38¬∞C\n‚Ä¢ Sangramento excessivo\n‚Ä¢ Dor que piora com analg√©sicos\n‚Ä¢ Sinais de infec√ß√£o (pus, vermelhid√£o)\n\nüì± **Emerg√™ncia 24h:** (11) 9999-9999\n\nüìÖ **Retorno agendado:** 7 dias',
            type: 'text',
          }
        ],
        nextSteps: ['monitoring-schedule'],
      },
    ],
  },

  'payment-support': {
    type: 'payment-support',
    priority: 'low',
    autoResponders: true,
    escalationRules: [
      {
        condition: 'sentiment',
        value: 'negative',
        action: 'alert',
        targetRole: 'manager',
      },
    ],
    complianceRequired: ['lgpd'],
    maxResponseTime: 300, // 5 minutes
    healthcareContext: {
      requiresLicense: false,
      medicalAdviceAllowed: false,
      prescriptionAllowed: false,
      emergencyProtocol: false,
    },
    conversationFlow: [
      {
        id: 'payment-options',
        name: 'Op√ß√µes de Pagamento',
        description: 'Informa√ß√µes sobre formas de pagamento e financiamento',
        autoTrigger: {
          keywords: ['pagamento', 'pre√ßo', 'valor', 'financiar', 'parcelar', 'cart√£o'],
          confidence: 0.8,
        },
        responses: [
          {
            id: 'payment-methods',
            text: 'üí≥ **Formas de Pagamento - NeonPro**\n\n‚úÖ **Op√ß√µes Dispon√≠veis:**\n\n**üí∞ √Ä Vista (10% desconto):**\n‚Ä¢ Dinheiro\n‚Ä¢ PIX\n‚Ä¢ Cart√£o de d√©bito\n\n**üì± Parcelado:**\n‚Ä¢ Cart√£o de cr√©dito (at√© 12x)\n‚Ä¢ Financiamento pr√≥prio (at√© 24x)\n‚Ä¢ Cr√©dito pessoal parceiro\n\n**üè• Conv√™nios:**\n‚Ä¢ Unimed, Bradesco Sa√∫de, Sul Am√©rica\n‚Ä¢ Reembolso parcial dispon√≠vel\n\nüí° **Simula√ß√£o gratuita dispon√≠vel!**\n\nQual op√ß√£o tem interesse em saber mais?',
            type: 'quick-reply',
            metadata: {
              quickReplies: ['√Ä Vista', 'Parcelado', 'Conv√™nio', 'Simula√ß√£o'],
            },
          }
        ],
        nextSteps: ['financial-planning'],
      },
    ],
  },

  'general-inquiry': {
    type: 'general-inquiry',
    priority: 'low',
    autoResponders: true,
    escalationRules: [
      {
        condition: 'confidence',
        value: 0.5,
        action: 'alert',
        targetRole: 'receptionist',
      },
    ],
    complianceRequired: ['lgpd'],
    maxResponseTime: 300, // 5 minutes
    healthcareContext: {
      requiresLicense: false,
      medicalAdviceAllowed: false,
      prescriptionAllowed: false,
      emergencyProtocol: false,
    },
    conversationFlow: [
      {
        id: 'general-help',
        name: 'Ajuda Geral',
        description: 'Suporte geral e direcionamento',
        responses: [
          {
            id: 'help-menu',
            text: 'ü§ù **Central de Ajuda NeonPro**\n\nüìç **Como posso ajud√°-lo?**\n\nüè• **Sobre a Cl√≠nica:**\n‚Ä¢ Localiza√ß√£o e hor√°rios\n‚Ä¢ Especialidades dispon√≠veis\n‚Ä¢ Nossa equipe m√©dica\n\nüìÖ **Agendamentos:**\n‚Ä¢ Marcar consulta\n‚Ä¢ Cancelar/reagendar\n‚Ä¢ Verificar disponibilidade\n\nüíä **Procedimentos:**\n‚Ä¢ Informa√ß√µes gerais\n‚Ä¢ Pre√ßos e formas de pagamento\n‚Ä¢ Prepara√ß√£o e cuidados\n\nüéØ **Selecione o tema da sua d√∫vida:**',
            type: 'quick-reply',
            metadata: {
              quickReplies: ['Sobre a Cl√≠nica', 'Agendamentos', 'Procedimentos', 'Outros'],
            },
          }
        ],
        nextSteps: ['specific-help'],
      },
    ],
  },
};

// Workflow execution engine
export class HealthcareWorkflowEngine {
  private currentWorkflow: HealthcareWorkflow | null = null;
  private currentStep: WorkflowStep | null = null;
  private conversationContext: Map<string, any> = new Map();

  // Initialize workflow based on message analysis
  initializeWorkflow(
    messageContent: string,
    userContext: {
      type: 'patient' | 'staff';
      previousMessages: ChatMessage[];
      healthcareContext?: any;
    }
  ): HealthcareWorkflow | null {
    // Detect workflow type from message content and context
    const workflowType = this.detectWorkflowType(messageContent, userContext);
    
    if (workflowType) {
      this.currentWorkflow = BRAZILIAN_HEALTHCARE_WORKFLOWS[workflowType];
      this.currentStep = this.currentWorkflow.conversationFlow[0];
      return this.currentWorkflow;
    }

    return null;
  }

  // Detect appropriate workflow from message
  private detectWorkflowType(
    messageContent: string,
    userContext: any
  ): HealthcareWorkflowType | null {
    const content = messageContent.toLowerCase();

    // Emergency detection - highest priority
    if (this.containsEmergencyKeywords(content)) {
      return 'emergency';
    }

    // Scheduling keywords
    if (/agendar|marcar|consulta|hor√°rio|dispon√≠vel/i.test(content)) {
      return 'scheduling';
    }

    // Payment related
    if (/pagamento|pre√ßo|valor|financiar|parcelar/i.test(content)) {
      return 'payment-support';
    }

    // Follow-up related
    if (/p√≥s|depois|resultado|evolu√ß√£o|follow/i.test(content)) {
      return 'follow-up';
    }

    // Pre-procedure
    if (/prepara√ß√£o|antes|pr√©.*procedimento/i.test(content)) {
      return 'pre-procedure';
    }

    // Post-procedure
    if (/cuidados|ap√≥s|p√≥s.*procedimento/i.test(content)) {
      return 'post-procedure';
    }

    // Medical consultation
    if (/consulta|m√©dico|sintoma|problema|tratamento/i.test(content)) {
      return 'consultation';
    }

    // Default to general inquiry
    return 'general-inquiry';
  }

  // Check for emergency keywords
  private containsEmergencyKeywords(content: string): boolean {
    const emergencyKeywords = [
      'emerg√™ncia', 'urgente', 'samu', '192', 'socorro', 'grave', 'cr√≠tico',
      'n√£o respira', 'inconsciente', 'sangramento', 'dor forte', 'desmaio'
    ];

    return emergencyKeywords.some(keyword => 
      content.includes(keyword.toLowerCase())
    );
  }

  // Get current workflow response
  getCurrentResponse(): WorkflowResponse | null {
    return this.currentStep?.responses[0] || null;
  }

  // Check if escalation is needed
  shouldEscalate(
    messageContent: string,
    confidence: number,
    timestamp: Date
  ): EscalationRule | null {
    if (!this.currentWorkflow) return null;

    for (const rule of this.currentWorkflow.escalationRules) {
      switch (rule.condition) {
        case 'keyword':
          if (new RegExp(rule.value as string, 'i').test(messageContent)) {
            return rule;
          }
          break;
        case 'confidence':
          if (confidence < (rule.value as number)) {
            return rule;
          }
          break;
        case 'time':
          // Check if response time exceeded
          const elapsed = (Date.now() - timestamp.getTime()) / 1000;
          if (elapsed > (rule.value as number)) {
            return rule;
          }
          break;
        case 'emergency':
          if (this.containsEmergencyKeywords(messageContent)) {
            return rule;
          }
          break;
      }
    }

    return null;
  }

  // Move to next step in workflow
  moveToNextStep(stepId?: string): WorkflowStep | null {
    if (!this.currentWorkflow || !this.currentStep) return null;

    const nextStepId = stepId || this.currentStep.nextSteps?.[0];
    if (nextStepId) {
      const nextStep = this.currentWorkflow.conversationFlow.find(
        step => step.id === nextStepId
      );
      
      if (nextStep) {
        this.currentStep = nextStep;
        return nextStep;
      }
    }

    return null;
  }

  // Get workflow context
  getContext(): {
    workflow: HealthcareWorkflow | null;
    step: WorkflowStep | null;
    context: Map<string, any>;
  } {
    return {
      workflow: this.currentWorkflow,
      step: this.currentStep,
      context: this.conversationContext,
    };
  }
}

export default HealthcareWorkflowEngine;