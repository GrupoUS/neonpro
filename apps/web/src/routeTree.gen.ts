/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestAuthRouteImport } from './routes/test-auth'
import { Route as SignupDemoRouteImport } from './routes/signup-demo'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as R404RouteImport } from './routes/404'
import { Route as IndexRouteImport } from './routes/index'

const TestAuthRoute = TestAuthRouteImport.update({
  id: '/test-auth',
  path: '/test-auth',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupDemoRoute = SignupDemoRouteImport.update({
  id: '/signup-demo',
  path: '/signup-demo',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/dashboard': typeof DashboardRoute
  '/signup': typeof SignupRoute
  '/signup-demo': typeof SignupDemoRoute
  '/test-auth': typeof TestAuthRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/dashboard': typeof DashboardRoute
  '/signup': typeof SignupRoute
  '/signup-demo': typeof SignupDemoRoute
  '/test-auth': typeof TestAuthRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/dashboard': typeof DashboardRoute
  '/signup': typeof SignupRoute
  '/signup-demo': typeof SignupDemoRoute
  '/test-auth': typeof TestAuthRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/dashboard'
    | '/signup'
    | '/signup-demo'
    | '/test-auth'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/404' | '/dashboard' | '/signup' | '/signup-demo' | '/test-auth'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/dashboard'
    | '/signup'
    | '/signup-demo'
    | '/test-auth'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  DashboardRoute: typeof DashboardRoute
  SignupRoute: typeof SignupRoute
  SignupDemoRoute: typeof SignupDemoRoute
  TestAuthRoute: typeof TestAuthRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test-auth': {
      id: '/test-auth'
      path: '/test-auth'
      fullPath: '/test-auth'
      preLoaderRoute: typeof TestAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup-demo': {
      id: '/signup-demo'
      path: '/signup-demo'
      fullPath: '/signup-demo'
      preLoaderRoute: typeof SignupDemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  DashboardRoute: DashboardRoute,
  SignupRoute: SignupRoute,
  SignupDemoRoute: SignupDemoRoute,
  TestAuthRoute: TestAuthRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
