/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestAuthRouteImport } from './routes/test-auth'
import { Route as SignupDemoRouteImport } from './routes/signup-demo'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as PatientsRouteImport } from './routes/patients'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AppointmentsRouteImport } from './routes/appointments'
import { Route as R404RouteImport } from './routes/404'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthConfirmRouteImport } from './routes/auth/confirm'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'

const TestAuthRoute = TestAuthRouteImport.update({
  id: '/test-auth',
  path: '/test-auth',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupDemoRoute = SignupDemoRouteImport.update({
  id: '/signup-demo',
  path: '/signup-demo',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const PatientsRoute = PatientsRouteImport.update({
  id: '/patients',
  path: '/patients',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AppointmentsRoute = AppointmentsRouteImport.update({
  id: '/appointments',
  path: '/appointments',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthConfirmRoute = AuthConfirmRouteImport.update({
  id: '/auth/confirm',
  path: '/auth/confirm',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/appointments': typeof AppointmentsRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/patients': typeof PatientsRoute
  '/signup': typeof SignupRoute
  '/signup-demo': typeof SignupDemoRoute
  '/test-auth': typeof TestAuthRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/confirm': typeof AuthConfirmRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/appointments': typeof AppointmentsRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/patients': typeof PatientsRoute
  '/signup': typeof SignupRoute
  '/signup-demo': typeof SignupDemoRoute
  '/test-auth': typeof TestAuthRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/confirm': typeof AuthConfirmRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/appointments': typeof AppointmentsRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/patients': typeof PatientsRoute
  '/signup': typeof SignupRoute
  '/signup-demo': typeof SignupDemoRoute
  '/test-auth': typeof TestAuthRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/confirm': typeof AuthConfirmRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/appointments'
    | '/dashboard'
    | '/login'
    | '/patients'
    | '/signup'
    | '/signup-demo'
    | '/test-auth'
    | '/auth/callback'
    | '/auth/confirm'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | '/appointments'
    | '/dashboard'
    | '/login'
    | '/patients'
    | '/signup'
    | '/signup-demo'
    | '/test-auth'
    | '/auth/callback'
    | '/auth/confirm'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/appointments'
    | '/dashboard'
    | '/login'
    | '/patients'
    | '/signup'
    | '/signup-demo'
    | '/test-auth'
    | '/auth/callback'
    | '/auth/confirm'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  AppointmentsRoute: typeof AppointmentsRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  PatientsRoute: typeof PatientsRoute
  SignupRoute: typeof SignupRoute
  SignupDemoRoute: typeof SignupDemoRoute
  TestAuthRoute: typeof TestAuthRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  AuthConfirmRoute: typeof AuthConfirmRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test-auth': {
      id: '/test-auth'
      path: '/test-auth'
      fullPath: '/test-auth'
      preLoaderRoute: typeof TestAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup-demo': {
      id: '/signup-demo'
      path: '/signup-demo'
      fullPath: '/signup-demo'
      preLoaderRoute: typeof SignupDemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/patients': {
      id: '/patients'
      path: '/patients'
      fullPath: '/patients'
      preLoaderRoute: typeof PatientsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/appointments': {
      id: '/appointments'
      path: '/appointments'
      fullPath: '/appointments'
      preLoaderRoute: typeof AppointmentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/confirm': {
      id: '/auth/confirm'
      path: '/auth/confirm'
      fullPath: '/auth/confirm'
      preLoaderRoute: typeof AuthConfirmRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  AppointmentsRoute: AppointmentsRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  PatientsRoute: PatientsRoute,
  SignupRoute: SignupRoute,
  SignupDemoRoute: SignupDemoRoute,
  TestAuthRoute: TestAuthRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  AuthConfirmRoute: AuthConfirmRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
