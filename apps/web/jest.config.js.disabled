/**
 * Jest Configuration for NeonPro Web Application
 *
 * Next.js 15 + Healthcare Component Testing
 * Brazilian Healthcare Compliance (LGPD + ANVISA + CFM)
 * Quality Standards: ≥9.9/10 Healthcare Validation
 */

const { createJestConfig } = require('../../jest.shared');
const nextJest = require('next/jest');

// Next.js Jest configuration
const createNextJestConfig = nextJest({
  dir: './',
});

// Healthcare-specific Jest configuration
const healthcareJestConfig = createJestConfig({
  packageName: 'neonpro-web',
  displayName: 'NeonPro Web App',
  rootDir: __dirname,

  // Additional setup files for Next.js
  additionalSetupFiles: ['<rootDir>/jest.setup.js'],

  // Healthcare coverage thresholds for web app
  coverageThreshold: {
    global: {
      branches: 92, // Higher threshold for main app
      functions: 92,
      lines: 92,
      statements: 92,
    },
    // Critical healthcare paths (100% coverage)
    '**/components/patient/**/*.{ts,tsx}': {
      branches: 100,
      functions: 100,
      lines: 100,
      statements: 100,
    },
    // Medical forms and workflows (≥95% coverage)
    '**/components/medical/**/*.{ts,tsx}': {
      branches: 95,
      functions: 95,
      lines: 95,
      statements: 95,
    },
    // LGPD compliance components (≥95% coverage)
    '**/components/lgpd/**/*.{ts,tsx}': {
      branches: 95,
      functions: 95,
      lines: 95,
      statements: 95,
    },
    // API routes (≥90% coverage)
    '**/api/**/*.{ts,js}': {
      branches: 90,
      functions: 90,
      lines: 90,
      statements: 90,
    },
  },

  // Module name mapping for Next.js
  moduleNameMapper: {
    '^@/(.*)$': '<rootDir>/$1',
    '^@/components/(.*)$': '<rootDir>/components/$1',
    '^@/pages/(.*)$': '<rootDir>/pages/$1',
    '^@/app/(.*)$': '<rootDir>/app/$1',
    '^@/lib/(.*)$': '<rootDir>/lib/$1',
    '^@/utils/(.*)$': '<rootDir>/utils/$1',
    '^@/hooks/(.*)$': '<rootDir>/hooks/$1',
    '^@/types/(.*)$': '<rootDir>/types/$1',
    // NeonPro packages
    '^@neonpro/ui$': '<rootDir>/../../packages/ui/src',
    '^@neonpro/ai$': '<rootDir>/../../packages/ai/src',
    '^@neonpro/compliance$': '<rootDir>/../../packages/compliance/src',
    '^@neonpro/db$': '<rootDir>/../../packages/db/src',
    // Test utilities
    '^@test/(.*)$': '<rootDir>/../../test-utils/$1',
    // CSS and static files
    '\\.(css|less|scss|sass)$': 'identity-obj-proxy',
    '\\.(jpg|jpeg|png|gif|svg)$': '<rootDir>/../../test-utils/file-mock.js',
  },
});

// Merge Next.js and healthcare configurations
const nextConfig = createNextJestConfig({
  ...healthcareJestConfig,

  // Next.js specific test patterns
  testMatch: [
    '<rootDir>/**/__tests__/**/*.(ts|tsx)',
    '<rootDir>/**/*.(test|spec).(ts|tsx)',
    '<rootDir>/app/**/*.test.(ts|tsx)',
    '<rootDir>/src/**/*.test.(ts|tsx)',
  ],

  // Test environment for Next.js
  testEnvironment: 'jsdom',

  // Setup files for Next.js + Healthcare
  setupFilesAfterEnv: [
    '<rootDir>/../../test-setup/healthcare-setup.js',
    '<rootDir>/../../test-setup/accessibility-matchers.js',
    '<rootDir>/../../test-setup/lgpd-compliance-helpers.js',
    '<rootDir>/jest.setup.js',
  ],

  // Coverage collection for Next.js app
  collectCoverageFrom: [
    'app/**/*.{ts,tsx}',
    'src/**/*.{ts,tsx}',
    'lib/**/*.{ts,tsx}',
    '!**/*.d.ts',
    '!**/*.stories.{ts,tsx}',
    '!**/*.config.{js,ts}',
    '!**/node_modules/**',
    '!**/.next/**',
    '!**/coverage/**',
    // Exclude non-testable Next.js files
    '!**/app/layout.tsx',
    '!**/app/loading.tsx',
    '!**/app/error.tsx',
    '!**/app/not-found.tsx',
    '!**/app/global-error.tsx',
  ],

  // Transform configuration for Next.js
  transform: {
    '^.+\\.(js|jsx|ts|tsx)$': ['babel-jest', { presets: ['next/babel'] }],
  },

  // Module directories for Next.js
  moduleDirectories: ['node_modules', '<rootDir>/'],

  // Extensions to resolve
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json'],

  // Test timeout for healthcare workflows
  testTimeout: 15000,

  // Verbose output for healthcare testing
  verbose: true,

  // Healthcare testing globals
  globals: {
    __HEALTHCARE_MODE__: true,
    __LGPD_COMPLIANCE__: true,
    __ANVISA_VALIDATION__: true,
    __CFM_STANDARDS__: true,
    __NEXT_VERSION__: '15',
  },

  // Reporters for Next.js app
  reporters: [
    'default',
    [
      'jest-junit',
      {
        outputDirectory: 'coverage',
        outputName: 'web-app-junit.xml',
        suiteNameTemplate: '{title} - Web App Tests',
      },
    ],
  ],

  // Cache directory
  cacheDirectory: '<rootDir>/../../node_modules/.cache/jest-web',

  // Clear mocks between tests
  clearMocks: true,
  restoreMocks: true,
  resetMocks: true,

  // Error handling
  errorOnDeprecated: true,

  // Module path ignore patterns
  modulePathIgnorePatterns: [
    '<rootDir>/.next/',
    '<rootDir>/dist/',
    '<rootDir>/node_modules/',
  ],

  // Transform ignore patterns for Next.js
  transformIgnorePatterns: ['/node_modules/(?!(.*\\.mjs$|@neonpro/))'],

  // Watch plugins for development
  watchPlugins: [
    'jest-watch-typeahead/filename',
    'jest-watch-typeahead/testname',
  ],

  // Max workers for parallel testing
  maxWorkers: '50%',

  // Bail on first failure in CI
  bail: process.env.CI ? 1 : 0,
});

module.exports = nextConfig;
