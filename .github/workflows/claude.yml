name: Claude Code (Enhanced)

on:
  pull_request:
    types: [opened, synchronize, edited]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  pull_request_review:
    types: [submitted]
  issues:
    types: [opened, assigned]

jobs:
  claude-enhanced:
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          # Enhanced prompt for multi-agent coordination and quality control
          prompt: |
            You are coordinating a multi-agent code review with TDD orchestration. 
            Please analyze this pull request and provide comprehensive feedback:
            
            ## 🤖 Multi-Agent Coordination Required
            
            ### Agent Activation Matrix:
            - **architect-review**: System design, patterns, scalability (always active)
            - **security-auditor**: Security, compliance, vulnerabilities (healthcare: critical)
            - **code-reviewer**: Code quality, maintainability, performance (always active)
            - **test**: TDD patterns, coverage, test quality (always active)
            - **compliance-validator**: Healthcare regulatory validation (LGPD/ANVISA/CFM)
            
            ### TDD Orchestrator Integration:
            - RED Phase: test agent coordination with failing test creation
            - GREEN Phase: code-reviewer led implementation
            - REFACTOR Phase: Multi-agent optimization
            
            ## 🏥 Healthcare Compliance (Critical)
            - LGPD compliance validation for patient data
            - RLS policy verification for multi-tenant isolation
            - Consent validation and audit trail completeness
            - PHI (Protected Health Information) handling security
            
            ## 🔍 Quality Gates to Validate:
            - Code quality and best practices
            - Security vulnerabilities and compliance
            - Performance considerations and optimization
            - Test coverage and TDD pattern compliance
            - Architecture patterns and system design
            - Error handling and edge cases
            
            ## 🛠️ Required Tools & Integration:
            - Use `sequential-thinking` for complex analysis
            - Use `archon` for task management and coordination
            - Use `serena` for codebase semantic analysis
            - Use `desktop-commander` for file operations
            - Use `context7` and `tavily` for research if complexity ≥7
            
            ## 📋 Execution Workflow:
            1. Analyze complexity and activate appropriate agents
            2. Execute TDD orchestration with RED-GREEN-REFACTOR phases
            3. Validate all quality gates (≥90% compliance)
            4. Provide specific, actionable feedback
            5. Use `gh pr comment` with your Bash tool to leave review
            
            Use the repository's CLAUDE.md and .claude/commands/quality-control.md for guidance on style, conventions, and multi-agent coordination standards.

          # Enhanced tool permissions for multi-agent coordination
          additional_permissions: |
            actions: read
            contents: read
            pull-requests: write
            issues: write

          # Comprehensive tool access for GitHub operations and multi-agent coordination
          claude_args: >-
            --model claude-3-5-sonnet-20241022
            --allowed-tools 
            Bash(gh pr comment:*),
            Bash(gh pr diff:*),
            Bash(gh pr view:*),
            Bash(gh pr list:*),
            Bash(gh issue view:*),
            Bash(gh issue list:*),
            Bash(gh search:*),
            Bash(git:*),
            Bash(pnpm:*),
            Bun,
            mcp__sequential-thinking__sequentialthinking,
            mcp__archon__*,
            mcp__serena__*,
            mcp__desktop-commander__*,
            mcp__context7__*,
            mcp__tavily__*,
            mcp__supabase__*,
            mcp__shadcn__*,
            Read,
            Write,
            Edit,
            Glob,
            Grep,
            Bash,
            Task,
            ExitPlanMode,
            TodoWrite