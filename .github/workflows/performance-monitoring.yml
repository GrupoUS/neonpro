name: Performance Monitoring & Regression Detection

on:
  schedule:
    - cron: '0 */4 * * *' # Every 4 hours
  workflow_dispatch:
    inputs:
      target_environment:
        description: 'Environment to monitor'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

concurrency:
  group: performance-monitoring-${{ github.ref }}
  cancel-in-progress: false

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  performance-monitoring:
    name: Healthcare Performance Monitoring
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright
        run: |
          cd apps/web
          pnpm exec playwright install chromium

      - name: Run Performance Tests
        run: |
          echo "üöÄ Running healthcare performance monitoring..."
          cd apps/web
          pnpm exec playwright test tests/e2e/performance --project=chromium
        env:
          TARGET_URL: ${{ github.event.inputs.target_environment == 'production' && secrets.PRODUCTION_URL || secrets.STAGING_URL }}

      - name: Lighthouse Performance Audit
        run: |
          echo "üö® Running Lighthouse audit..."
          pnpm dlx lighthouse \
            ${{ github.event.inputs.target_environment == 'production' && secrets.PRODUCTION_URL || secrets.STAGING_URL }} \
            --only-categories=performance,accessibility,best-practices \
            --output=json \
            --output-path=lighthouse-report.json

      - name: Analyze Bundle Size
        run: |
          echo "üì¶ Analyzing bundle size trends..."
          pnpm analyze:bundle --compare-with-baseline

      - name: Healthcare-Specific Metrics
        run: |
          echo "üè• Collecting healthcare performance metrics..."
          node scripts/collect-healthcare-metrics.js
        env:
          MONITORING_API_KEY: ${{ secrets.MONITORING_API_KEY }}

      - name: Performance Regression Detection
        run: |
          echo "üìä Detecting performance regressions..."
          node scripts/detect-regressions.js
        env:
          BASELINE_METRICS_URL: ${{ secrets.BASELINE_METRICS_URL }}

      - name: Upload Performance Reports
        uses: actions/upload-artifact@v4
        with:
          name: performance-reports-${{ github.run_number }}
          path: |
            lighthouse-report.json
            performance-metrics.json
            bundle-analysis.json
            healthcare-metrics.json
          retention-days: 30

      - name: Update Performance Dashboard
        run: |
          echo "üìà Updating real-time performance dashboard..."
          curl -X POST "${{ secrets.DASHBOARD_WEBHOOK_URL }}" \
            -H "Authorization: Bearer ${{ secrets.DASHBOARD_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d @performance-metrics.json

      - name: Alert on Performance Regression
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#healthcare-performance'
          text: |
            ‚ö†Ô∏è Performance Regression Detected in Healthcare Platform!
            
            Environment: ${{ github.event.inputs.target_environment || 'production' }}
            Monitoring Run: ${{ github.run_number }}
            
            Critical metrics have exceeded acceptable thresholds:
            ‚Ä¢ Page load times may impact patient experience
            ‚Ä¢ Healthcare workflow performance degraded
            ‚Ä¢ Immediate investigation required
            
            View details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  database-performance-monitoring:
    name: Database Performance Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Database Query Performance Analysis
        run: |
          echo "üóÑÔ∏è Analyzing database performance..."
          node scripts/analyze-db-performance.js
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: Healthcare Data Access Patterns
        run: |
          echo "üè• Analyzing healthcare data access patterns..."
          node scripts/healthcare-data-patterns.js
        env:
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}

      - name: LGPD Compliance Performance Check
        run: |
          echo "üîí Checking LGPD compliance performance impact..."
          node scripts/lgpd-performance-check.js

      - name: Upload Database Analysis
        uses: actions/upload-artifact@v4
        with:
          name: database-analysis-${{ github.run_number }}
          path: |
            db-performance-report.json
            query-analysis.json
            compliance-performance.json
          retention-days: 30

  security-performance-monitoring:
    name: Security Performance Monitoring
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Security Headers Performance Impact
        run: |
          echo "üîê Analyzing security headers performance impact..."
          node scripts/security-performance.js
        env:
          TARGET_URL: ${{ github.event.inputs.target_environment == 'production' && secrets.PRODUCTION_URL || secrets.STAGING_URL }}

      - name: HIPAA Encryption Performance
        run: |
          echo "üè• Checking HIPAA encryption performance..."
          node scripts/hipaa-encryption-performance.js

      - name: Authentication Flow Performance
        run: |
          echo "üë§ Testing authentication performance..."
          cd apps/web
          pnpm exec playwright test tests/e2e/auth-performance.spec.ts

      - name: Upload Security Performance Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-performance-${{ github.run_number }}
          path: |
            security-performance.json
            auth-performance.json
            encryption-metrics.json
          retention-days: 30

  generate-performance-report:
    name: Generate Comprehensive Performance Report
    runs-on: ubuntu-latest
    needs: [performance-monitoring, database-performance-monitoring, security-performance-monitoring]
    if: always()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download All Performance Artifacts
        uses: actions/download-artifact@v4

      - name: Generate Comprehensive Report
        run: |
          echo "üìä Generating comprehensive healthcare performance report..."
          node scripts/generate-performance-report.js
        env:
          REPORT_DATE: ${{ github.run_number }}
          ENVIRONMENT: ${{ github.event.inputs.target_environment || 'production' }}

      - name: Upload Final Report
        uses: actions/upload-artifact@v4
        with:
          name: healthcare-performance-report-${{ github.run_number }}
          path: |
            comprehensive-performance-report.html
            performance-trends.json
            recommendations.md
          retention-days: 90

      - name: Performance Summary Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#healthcare-performance'
          text: |
            üìà Healthcare Performance Monitoring Complete
            
            Environment: ${{ github.event.inputs.target_environment || 'production' }}
            Report ID: ${{ github.run_number }}
            
            üìä Key Metrics:
            ‚Ä¢ Page Load Time: Analyzed ‚úì
            ‚Ä¢ Database Performance: Monitored ‚úì
            ‚Ä¢ Security Impact: Assessed ‚úì
            ‚Ä¢ Healthcare Workflows: Validated ‚úì
            
            Full report available in artifacts
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}