name: CI - Healthcare Quality Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  HEALTHCARE_QUALITY_THRESHOLD: "9.9"
  LGPD_COMPLIANCE_MODE: "true"
  ANVISA_COMPLIANCE_MODE: "true"
  CFM_COMPLIANCE_MODE: "true"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.changes.outputs.packages }}
      apps: ${{ steps.changes.outputs.apps }}
      healthcare: ${{ steps.changes.outputs.healthcare }}
      compliance: ${{ steps.changes.outputs.compliance }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            packages:
              - 'packages/**'
            apps:
              - 'apps/**'
            healthcare:
              - 'packages/compliance/**'
              - 'packages/security/**'
              - 'apps/web/app/**/(dashboard|patients|medical)/**'
            compliance:
              - 'packages/compliance/**'
              - '**/*.lgpd.*'
              - '**/*.anvisa.*'
              - '**/*.cfm.*'

  quality-check:
    name: Quality Check (‚â•9.9/10 Healthcare)
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.packages == 'true' || needs.changes.outputs.apps == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Turborepo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: turbo-${{ github.sha }}
          restore-keys: |
            turbo-

      - name: Healthcare Quality Validation
        run: |
          echo "üè• Running Healthcare Quality Validation (‚â•9.9/10)"
          pnpm validate:healthcare

      - name: Type Check
        run: pnpm type-check

      - name: Lint Check
        run: pnpm lint

      - name: Format Check
        run: pnpm format:check

      - name: Build
        run: pnpm build

      - name: Unit Tests
        run: pnpm test:unit:coverage

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./tools/testing/coverage
          flags: unittests
          name: healthcare-coverage

  security-scan:
    name: Security & Compliance Scan
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.packages == 'true' || needs.changes.outputs.apps == 'true' }}
    permissions:
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: CodeQL Security Scan
        uses: github/codeql-action/init@v2
        with:
          languages: typescript, javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Dependency Audit
        run: |
          echo "üîí Running Security Audit"
          pnpm audit:security

      - name: Healthcare Security Tests
        run: |
          echo "üè• Running Healthcare Security Tests"
          pnpm test:security

  compliance-check:
    name: Healthcare Compliance Validation
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.healthcare == 'true' || needs.changes.outputs.compliance == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: LGPD Compliance Tests
        run: |
          echo "‚öñÔ∏è  Running LGPD Compliance Tests"
          pnpm test:lgpd

      - name: ANVISA Compliance Tests
        run: |
          echo "üèõÔ∏è Running ANVISA Compliance Tests"
          pnpm test:anvisa

      - name: CFM Compliance Tests
        run: |
          echo "üë®‚Äç‚öïÔ∏è Running CFM Compliance Tests"
          pnpm test:cfm

      - name: Generate Compliance Report
        run: |
          echo "üìä Generating Healthcare Compliance Report"
          pnpm claude:healthcare-compliance

  e2e-tests:
    name: End-to-End Healthcare Tests
    runs-on: ubuntu-latest
    needs: [quality-check]
    if: ${{ needs.changes.outputs.apps == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Build Application
        run: pnpm build:web

      - name: Run E2E Tests
        run: |
          echo "üß™ Running Healthcare E2E Tests"
          pnpm test:e2e

      - name: Upload E2E Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: tools/testing/reports/e2e/
          retention-days: 30

  performance-check:
    name: Performance & Accessibility
    runs-on: ubuntu-latest
    needs: [quality-check]
    if: ${{ needs.changes.outputs.apps == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Application
        run: pnpm build:web

      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          configPath: './lighthouserc.js'
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Healthcare Accessibility Tests
        run: |
          echo "‚ôø Running WCAG 2.1 AA Accessibility Tests"
          pnpm test:e2e --grep="accessibility"

  quality-gate:
    name: Healthcare Quality Gate (‚â•9.9/10)
    runs-on: ubuntu-latest
    needs: [quality-check, security-scan, compliance-check, e2e-tests, performance-check]
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate Quality Gate
        run: |
          echo "üéØ Validating Healthcare Quality Gate (‚â•9.9/10)"
          
          # Check if all jobs passed
          if [[ "${{ needs.quality-check.result }}" != "success" ]]; then
            echo "‚ùå Quality check failed"
            exit 1
          fi
          
          if [[ "${{ needs.security-scan.result }}" != "success" ]]; then
            echo "‚ùå Security scan failed"
            exit 1
          fi
          
          if [[ "${{ needs.compliance-check.result }}" != "success" ]] && [[ "${{ needs.compliance-check.result }}" != "skipped" ]]; then
            echo "‚ùå Compliance check failed"
            exit 1
          fi
          
          if [[ "${{ needs.e2e-tests.result }}" != "success" ]] && [[ "${{ needs.e2e-tests.result }}" != "skipped" ]]; then
            echo "‚ùå E2E tests failed"
            exit 1
          fi
          
          if [[ "${{ needs.performance-check.result }}" != "success" ]] && [[ "${{ needs.performance-check.result }}" != "skipped" ]]; then
            echo "‚ùå Performance check failed"
            exit 1
          fi
          
          echo "‚úÖ Healthcare Quality Gate PASSED (‚â•9.9/10)"
          echo "üè• All healthcare compliance requirements met"
          echo "‚öñÔ∏è  LGPD, ANVISA, and CFM compliance validated"

      - name: Generate Quality Report
        run: |
          echo "üìä Generating Quality Report"
          pnpm claude:test-report

      - name: Comment PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ **Healthcare Quality Gate PASSED** (‚â•9.9/10)\n\nüè• All healthcare compliance requirements validated\n‚öñÔ∏è LGPD + ANVISA + CFM compliance confirmed\nüß™ Full test suite passed with healthcare standards'
            })