openapi: 3.0.3
info:
  title: NeonPro Patient Management API
  description: |
    Patient dashboard API for NeonPro aesthetic clinic platform with Brazilian healthcare compliance (LGPD, ANVISA, CFM).
    
    Features:
    - LGPD-compliant patient data management
    - Real-time updates via WebSocket subscriptions
    - Brazilian-specific validation (CPF, phone, CEP)
    - Mobile-first optimization (<500ms response times)
    - AI-enhanced patient insights
    - Comprehensive audit trails
    
    Authentication: Bearer token with role-based access control
    Rate Limiting: 1000 requests/minute per clinic
    
  version: 2.0.0
  contact:
    name: NeonPro API Support
    url: https://neonpro.com.br/support
    email: api-support@neonpro.com.br
  license:
    name: Proprietary
    url: https://neonpro.com.br/license

servers:
  - url: https://api.neonpro.com.br/v2
    description: Production server
  - url: https://api-staging.neonpro.com.br/v2
    description: Staging server
  - url: http://localhost:3001/v2
    description: Development server

security:
  - bearerAuth: []

paths:
  /patients:
    get:
      summary: List patients with search and filtering
      description: |
        Retrieve paginated list of patients with advanced search capabilities.
        Supports full-text search, filtering by status, and Brazilian-specific search patterns.
        
        Performance target: <300ms response time
        LGPD compliance: Only returns data user has permission to access
      operationId: listPatients
      tags:
        - Patients
      parameters:
        - name: page
          in: query
          description: Page number for pagination (1-based)
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of patients per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
        - name: search
          in: query
          description: |
            Search term for patient name, CPF, or phone.
            Supports partial matching and Portuguese text search.
          required: false
          schema:
            type: string
            minLength: 2
            maxLength: 100
        - name: status
          in: query
          description: Filter by patient status
          required: false
          schema:
            $ref: '#/components/schemas/PatientStatus'
        - name: sort
          in: query
          description: Sort field and direction
          required: false
          schema:
            type: string
            enum: 
              - 'name_asc'
              - 'name_desc'
              - 'created_asc' 
              - 'created_desc'
              - 'last_visit_asc'
              - 'last_visit_desc'
            default: 'name_asc'
        - name: include_deleted
          in: query
          description: Include soft-deleted patients (admin only)
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successfully retrieved patients list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PatientSummary'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  performance:
                    $ref: '#/components/schemas/PerformanceMetrics'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      summary: Create new patient
      description: |
        Create a new patient record with LGPD compliance validation.
        Requires active LGPD consent and Brazilian data validation.
        
        Constitutional requirements:
        - LGPD consent must be provided
        - CPF validation using Brazilian algorithm
        - Audit trail automatically created
      operationId: createPatient
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatientRequest'
      responses:
        '201':
          description: Patient created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient'
                  message:
                    type: string
                    example: "Patient created successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          description: Patient already exists (CPF conflict)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          $ref: '#/components/responses/InternalError'

  /patients/{patientId}:
    parameters:
      - name: patientId
        in: path
        required: true
        description: Patient UUID
        schema:
          type: string
          format: uuid

    get:
      summary: Get patient details
      description: |
        Retrieve complete patient information including medical history and LGPD consent status.
        Field-level security applied based on user role.
      operationId: getPatient
      tags:
        - Patients
      parameters:
        - name: include
          in: query
          description: Additional data to include in response
          required: false
          schema:
            type: array
            items:
              type: string
              enum: ['medical_history', 'contact_info', 'consent_records']
      responses:
        '200':
          description: Patient details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      summary: Update patient information
      description: |
        Update patient data with LGPD compliance validation.
        All changes are audited and require appropriate permissions.
      operationId: updatePatient
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePatientRequest'
      responses:
        '200':
          description: Patient updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient'
                  message:
                    type: string
                    example: "Patient updated successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      summary: Delete patient (soft delete)
      description: |
        Soft delete patient record while maintaining data for LGPD compliance.
        Actual data deletion follows clinic retention policies.
      operationId: deletePatient
      tags:
        - Patients
      parameters:
        - name: reason
          in: query
          description: Reason for deletion (required for audit trail)
          required: true
          schema:
            type: string
            minLength: 10
            maxLength: 500
      responses:
        '200':
          description: Patient deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Patient deleted successfully"
                  deletion_id:
                    type: string
                    format: uuid
                    description: "Deletion audit ID for tracking"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /patients/{patientId}/medical-history:
    parameters:
      - name: patientId
        in: path
        required: true
        description: Patient UUID
        schema:
          type: string
          format: uuid

    get:
      summary: Get patient medical history
      description: |
        Retrieve patient's medical history with chronological ordering.
        Includes treatment outcomes and compliance documentation.
      operationId: getPatientMedicalHistory
      tags:
        - Medical History
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: event_type
          in: query
          description: Filter by medical event type
          schema:
            $ref: '#/components/schemas/MedicalEventType'
        - name: date_from
          in: query
          description: Filter events from this date
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          description: Filter events until this date
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Medical history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MedicalHistory'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      summary: Add medical history entry
      description: |
        Add new medical history entry with ANVISA compliance.
        Requires professional license validation for medical procedures.
      operationId: addMedicalHistory
      tags:
        - Medical History
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMedicalHistoryRequest'
      responses:
        '201':
          description: Medical history entry created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/MedicalHistory'
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalError'

  /patients/{patientId}/consent:
    parameters:
      - name: patientId
        in: path
        required: true
        description: Patient UUID
        schema:
          type: string
          format: uuid

    get:
      summary: Get patient LGPD consent status
      description: |
        Retrieve current LGPD consent status and history.
        Used for compliance verification and audit purposes.
      operationId: getPatientConsent
      tags:
        - LGPD Consent
      responses:
        '200':
          description: Consent information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LGPDConsent'
                  compliance_status:
                    type: object
                    properties:
                      is_compliant:
                        type: boolean
                      missing_consents:
                        type: array
                        items:
                          type: string
                      expires_soon:
                        type: array
                        items:
                          type: object
                          properties:
                            consent_type:
                              type: string
                            expires_at:
                              type: string
                              format: date-time
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      summary: Record LGPD consent
      description: |
        Record new LGPD consent with comprehensive audit trail.
        Captures legal documentation required for Brazilian data protection compliance.
      operationId: recordPatientConsent
      tags:
        - LGPD Consent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConsentRequest'
      responses:
        '201':
          description: Consent recorded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LGPDConsent'
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalError'

  /patients/search:
    post:
      summary: Advanced patient search
      description: |
        Perform advanced search with multiple criteria and fuzzy matching.
        Optimized for mobile interfaces with autocomplete suggestions.
      operationId: searchPatients
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientSearchRequest'
      responses:
        '200':
          description: Search completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PatientSearchResult'
                  suggestions:
                    type: array
                    items:
                      type: string
                    description: "Autocomplete suggestions"
                  meta:
                    type: object
                    properties:
                      total_results:
                        type: integer
                      search_time_ms:
                        type: integer
                      query_expanded:
                        type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /health:
    get:
      summary: API health check
      description: |
        Health check endpoint for monitoring and load balancer configuration.
        Includes database connectivity and performance metrics.
      operationId: healthCheck
      tags:
        - System
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: ['healthy', 'degraded', 'unhealthy']
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                  database:
                    type: object
                    properties:
                      status:
                        type: string
                        enum: ['connected', 'disconnected']
                      response_time_ms:
                        type: integer
                  performance:
                    type: object
                    properties:
                      avg_response_time_ms:
                        type: integer
                      requests_per_minute:
                        type: integer
                      error_rate_percent:
                        type: number
        '503':
          description: API is unhealthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: ['unhealthy']
                  errors:
                    type: array
                    items:
                      type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT token with clinic and user context.
        Format: Authorization: Bearer <token>
        
        Token payload includes:
        - user_id: User UUID
        - clinic_id: Clinic UUID (for RLS)
        - role: User role (admin, doctor, nurse, staff)
        - permissions: Array of specific permissions
        - exp: Token expiration

  schemas:
    Patient:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "Patient unique identifier"
        patient_number:
          type: string
          description: "Clinic-generated patient number"
          example: "P-2024-001234"
        full_name:
          type: string
          minLength: 2
          maxLength: 100
          description: "Patient's full legal name"
          example: "Maria Silva Santos"
        preferred_name:
          type: string
          maxLength: 50
          description: "Name used in clinic interactions"
          example: "Maria"
        cpf:
          type: string
          pattern: '^\d{3}\.\d{3}\.\d{3}-\d{2}$'
          description: "Brazilian CPF (masked for non-admin users)"
          example: "123.456.789-01"
        birth_date:
          type: string
          format: date
          description: "Date of birth"
        gender:
          $ref: '#/components/schemas/GenderType'
        email:
          type: string
          format: email
          description: "Primary email address"
        phone:
          type: string
          description: "Brazilian-formatted phone number"
          example: "+55 11 99999-9999"
        address:
          $ref: '#/components/schemas/Address'
        status:
          $ref: '#/components/schemas/PatientStatus'
        emergency_contact:
          $ref: '#/components/schemas/EmergencyContact'
        allergies:
          type: array
          items:
            type: string
          description: "Known allergies"
        medications:
          type: array
          items:
            type: string
          description: "Current medications"
        lgpd_consent_status:
          type: object
          properties:
            has_active_consent:
              type: boolean
            last_consent_date:
              type: string
              format: date-time
            consent_version:
              type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_visit:
          type: string
          format: date-time
          nullable: true
      required:
        - id
        - full_name
        - cpf
        - birth_date
        - gender
        - email
        - phone
        - status

    PatientSummary:
      type: object
      description: "Simplified patient data for list views"
      properties:
        id:
          type: string
          format: uuid
        patient_number:
          type: string
        full_name:
          type: string
        preferred_name:
          type: string
        phone:
          type: string
        status:
          $ref: '#/components/schemas/PatientStatus'
        last_visit:
          type: string
          format: date-time
          nullable: true
        has_pending_appointments:
          type: boolean
        consent_status:
          type: string
          enum: ['valid', 'expired', 'missing', 'withdrawn']

    CreatePatientRequest:
      type: object
      properties:
        full_name:
          type: string
          minLength: 2
          maxLength: 100
        preferred_name:
          type: string
          maxLength: 50
        cpf:
          type: string
          pattern: '^\d{11}$'
          description: "CPF without formatting (11 digits)"
        rg:
          type: string
          maxLength: 20
        birth_date:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderType'
        email:
          type: string
          format: email
        phone:
          type: string
          description: "Phone number (will be formatted)"
        whatsapp:
          type: string
          description: "WhatsApp number if different from phone"
        address:
          $ref: '#/components/schemas/CreateAddressRequest'
        emergency_contact:
          $ref: '#/components/schemas/CreateEmergencyContactRequest'
        allergies:
          type: array
          items:
            type: string
        medications:
          type: array
          items:
            type: string
        medical_conditions:
          type: array
          items:
            type: string
        insurance_provider:
          type: string
        insurance_number:
          type: string
        preferred_language:
          type: string
          default: "pt-BR"
        lgpd_consent:
          $ref: '#/components/schemas/CreateConsentRequest'
      required:
        - full_name
        - cpf
        - birth_date
        - gender
        - email
        - phone
        - address
        - emergency_contact
        - lgpd_consent

    UpdatePatientRequest:
      type: object
      properties:
        preferred_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
        phone:
          type: string
        whatsapp:
          type: string
        address:
          $ref: '#/components/schemas/CreateAddressRequest'
        emergency_contact:
          $ref: '#/components/schemas/CreateEmergencyContactRequest'
        allergies:
          type: array
          items:
            type: string
        medications:
          type: array
          items:
            type: string
        medical_conditions:
          type: array
          items:
            type: string
        insurance_provider:
          type: string
        insurance_number:
          type: string
        status:
          $ref: '#/components/schemas/PatientStatus'
        notes:
          type: string
          maxLength: 1000

    Address:
      type: object
      properties:
        street:
          type: string
        number:
          type: string
        complement:
          type: string
        neighborhood:
          type: string
        city:
          type: string
        state:
          type: string
          pattern: '^[A-Z]{2}$'
          description: "Brazilian state code (2 letters)"
        zip_code:
          type: string
          pattern: '^\d{5}-?\d{3}$'
          description: "Brazilian CEP"
        country:
          type: string
          default: "BR"
      required:
        - street
        - number
        - neighborhood
        - city
        - state
        - zip_code

    CreateAddressRequest:
      allOf:
        - $ref: '#/components/schemas/Address'

    EmergencyContact:
      type: object
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 100
        relationship:
          type: string
          maxLength: 50
        phone:
          type: string
      required:
        - name
        - relationship
        - phone

    CreateEmergencyContactRequest:
      allOf:
        - $ref: '#/components/schemas/EmergencyContact'

    MedicalHistory:
      type: object
      properties:
        id:
          type: string
          format: uuid
        patient_id:
          type: string
          format: uuid
        event_type:
          $ref: '#/components/schemas/MedicalEventType'
        event_date:
          type: string
          format: date-time
        procedure_code:
          type: string
        description:
          type: string
        treatment_area:
          type: string
        equipment_used:
          type: array
          items:
            type: string
        outcome:
          $ref: '#/components/schemas/TreatmentOutcome'
        side_effects:
          type: array
          items:
            type: string
        patient_satisfaction:
          type: integer
          minimum: 1
          maximum: 10
        follow_up_required:
          type: boolean
        follow_up_date:
          type: string
          format: date
          nullable: true
        clinical_notes:
          type: string
        performed_by:
          type: string
          format: uuid
        professional_license:
          type: string
        supervised_by:
          type: string
          format: uuid
          nullable: true
        informed_consent_signed:
          type: boolean
        anvisa_notification_id:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - patient_id
        - event_type
        - event_date
        - description
        - outcome
        - performed_by
        - professional_license
        - informed_consent_signed

    CreateMedicalHistoryRequest:
      type: object
      properties:
        event_type:
          $ref: '#/components/schemas/MedicalEventType'
        event_date:
          type: string
          format: date-time
        procedure_code:
          type: string
        description:
          type: string
          minLength: 10
          maxLength: 2000
        treatment_area:
          type: string
        equipment_used:
          type: array
          items:
            type: string
        medications_prescribed:
          type: array
          items:
            type: string
        side_effects:
          type: array
          items:
            type: string
        patient_satisfaction:
          type: integer
          minimum: 1
          maximum: 10
        follow_up_required:
          type: boolean
        follow_up_date:
          type: string
          format: date
        clinical_notes:
          type: string
          minLength: 20
          maxLength: 5000
        professional_license:
          type: string
        supervised_by:
          type: string
          format: uuid
        informed_consent_signed:
          type: boolean
        quality_indicators:
          type: object
          properties:
            pain_level:
              type: integer
              minimum: 1
              maximum: 10
            recovery_time:
              type: integer
              minimum: 0
            complications:
              type: array
              items:
                type: string
      required:
        - event_type
        - event_date
        - description
        - clinical_notes
        - professional_license
        - informed_consent_signed

    LGPDConsent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        patient_id:
          type: string
          format: uuid
        consent_version:
          type: string
        consent_type:
          $ref: '#/components/schemas/ConsentType'
        consent_status:
          $ref: '#/components/schemas/ConsentStatus'
        permissions:
          type: object
          properties:
            data_processing:
              type: boolean
            data_storage:
              type: boolean
            marketing_communication:
              type: boolean
            research_participation:
              type: boolean
            data_sharing_partners:
              type: boolean
            photo_video_usage:
              type: boolean
            treatment_reminders:
              type: boolean
            satisfaction_surveys:
              type: boolean
        consent_text:
          type: string
        consent_language:
          type: string
          default: "pt-BR"
        legal_basis:
          type: string
        ip_address:
          type: string
        user_agent:
          type: string
        consent_method:
          $ref: '#/components/schemas/ConsentMethod'
        given_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
          nullable: true
        withdrawn_at:
          type: string
          format: date-time
          nullable: true
        processing_purposes:
          type: array
          items:
            type: string
        data_categories:
          type: array
          items:
            type: string
        retention_period:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - patient_id
        - consent_version
        - consent_type
        - consent_status
        - permissions
        - consent_text
        - legal_basis
        - ip_address
        - consent_method
        - given_at

    CreateConsentRequest:
      type: object
      properties:
        consent_type:
          $ref: '#/components/schemas/ConsentType'
        permissions:
          type: object
          properties:
            data_processing:
              type: boolean
            data_storage:
              type: boolean
            marketing_communication:
              type: boolean
            research_participation:
              type: boolean
            data_sharing_partners:
              type: boolean
            photo_video_usage:
              type: boolean
            treatment_reminders:
              type: boolean
            satisfaction_surveys:
              type: boolean
          required:
            - data_processing
            - data_storage
        consent_text:
          type: string
          minLength: 100
          description: "Full consent text presented to user"
        legal_basis:
          type: string
        consent_method:
          $ref: '#/components/schemas/ConsentMethod'
        digital_signature:
          type: string
        processing_purposes:
          type: array
          items:
            type: string
          minItems: 1
        data_categories:
          type: array
          items:
            type: string
          minItems: 1
        retention_period:
          type: string
      required:
        - consent_type
        - permissions
        - consent_text
        - legal_basis
        - consent_method
        - processing_purposes
        - data_categories
        - retention_period

    PatientSearchRequest:
      type: object
      properties:
        query:
          type: string
          minLength: 2
          maxLength: 100
          description: "Search query"
        filters:
          type: object
          properties:
            status:
              type: array
              items:
                $ref: '#/components/schemas/PatientStatus'
            age_range:
              type: object
              properties:
                min:
                  type: integer
                  minimum: 0
                  maximum: 150
                max:
                  type: integer
                  minimum: 0
                  maximum: 150
            gender:
              type: array
              items:
                $ref: '#/components/schemas/GenderType'
            last_visit:
              type: object
              properties:
                from:
                  type: string
                  format: date
                to:
                  type: string
                  format: date
            has_pending_appointments:
              type: boolean
            consent_status:
              type: array
              items:
                type: string
                enum: ['valid', 'expired', 'missing', 'withdrawn']
        fuzzy_search:
          type: boolean
          default: true
          description: "Enable fuzzy matching for names"
        limit:
          type: integer
          minimum: 1
          maximum: 100
          default: 25
      required:
        - query

    PatientSearchResult:
      allOf:
        - $ref: '#/components/schemas/PatientSummary'
        - type: object
          properties:
            search_score:
              type: number
              minimum: 0
              maximum: 1
              description: "Search relevance score"
            matched_fields:
              type: array
              items:
                type: string
              description: "Fields that matched the search query"

    # Enum Types
    PatientStatus:
      type: string
      enum:
        - active
        - inactive
        - suspended
        - pending-review
      description: "Patient status in the clinic system"

    GenderType:
      type: string
      enum:
        - female
        - male
        - non-binary
        - prefer-not-to-say
      description: "Gender identity options"

    MedicalEventType:
      type: string
      enum:
        - consultation
        - treatment
        - procedure
        - follow-up
        - emergency
        - screening
      description: "Type of medical event"

    TreatmentOutcome:
      type: string
      enum:
        - excellent
        - good
        - satisfactory
        - poor
        - complications
        - pending
      description: "Treatment outcome classification"

    ConsentType:
      type: string
      enum:
        - initial_registration
        - treatment_specific
        - marketing_consent
        - research_participation
        - data_sharing
      description: "Type of LGPD consent"

    ConsentStatus:
      type: string
      enum:
        - given
        - withdrawn
        - expired
        - pending_renewal
      description: "Current status of consent"

    ConsentMethod:
      type: string
      enum:
        - online_form
        - paper_form
        - verbal_recorded
        - digital_signature
        - biometric
      description: "Method used to obtain consent"

    # Utility Types
    PaginationMeta:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
        limit:
          type: integer
          minimum: 1
        total_pages:
          type: integer
          minimum: 0
        total_count:
          type: integer
          minimum: 0
        has_next:
          type: boolean
        has_previous:
          type: boolean
      required:
        - page
        - limit
        - total_pages
        - total_count
        - has_next
        - has_previous

    PerformanceMetrics:
      type: object
      properties:
        response_time_ms:
          type: integer
          description: "Response time in milliseconds"
        database_queries:
          type: integer
          description: "Number of database queries executed"
        cache_hits:
          type: integer
          description: "Number of cache hits"
        memory_usage_mb:
          type: number
          description: "Memory usage in megabytes"
      required:
        - response_time_ms

    Error:
      type: object
      properties:
        error:
          type: string
          description: "Error type identifier"
        message:
          type: string
          description: "Human-readable error message"
        details:
          type: object
          description: "Additional error details"
        request_id:
          type: string
          format: uuid
          description: "Request ID for debugging"
        timestamp:
          type: string
          format: date-time
      required:
        - error
        - message
        - request_id
        - timestamp

    ValidationError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            validation_errors:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: "Field that failed validation"
                  code:
                    type: string
                    description: "Validation error code"
                  message:
                    type: string
                    description: "Field-specific error message"
                  value:
                    description: "Value that failed validation"
                required:
                  - field
                  - code
                  - message

  responses:
    BadRequest:
      description: Bad request - invalid parameters or malformed request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized - invalid or missing authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: Forbidden - insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      headers:
        X-RateLimit-Limit:
          description: Request limit per minute
          schema:
            type: integer
        X-RateLimit-Remaining:
          description: Remaining requests in current window
          schema:
            type: integer
        X-RateLimit-Reset:
          description: Time when rate limit resets (Unix timestamp)
          schema:
            type: integer

    ValidationError:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Patients
    description: Patient management operations
  - name: Medical History
    description: Medical history and treatment records
  - name: LGPD Consent
    description: LGPD consent management and compliance
  - name: System
    description: System health and monitoring