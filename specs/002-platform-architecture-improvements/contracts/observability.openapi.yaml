openapi: 3.1.0
info:
  title: NeonPro Observability API
  version: 1.0.0
  description: |
    Observability and monitoring API for NeonPro healthcare platform.
    Handles telemetry data, error tracking, and performance monitoring
    with LGPD compliance and healthcare data protection.
  contact:
    name: NeonPro Development Team
    email: dev@neonpro.health
  license:
    name: Proprietary
    
servers:
  - url: https://api.neonpro.health/v1/observability
    description: Production observability endpoint
  - url: https://staging-api.neonpro.health/v1/observability
    description: Staging observability endpoint

security:
  - ApiKeyAuth: []
  - BearerAuth: []

paths:
  /telemetry/performance:
    post:
      summary: Submit performance telemetry data
      description: |
        Submit Web Vitals and custom performance metrics.
        Automatically redacts PII and ensures LGPD compliance.
      operationId: submitPerformanceTelemetry
      tags:
        - Performance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformanceTelemetryRequest'
            examples:
              web_vitals:
                summary: Web Vitals metrics
                value:
                  sessionId: "sess_12345"
                  userId: "usr_anon_67890"
                  metrics:
                    - name: "CLS"
                      value: 0.05
                      timestamp: "2025-01-15T10:30:00Z"
                    - name: "LCP"
                      value: 1200
                      timestamp: "2025-01-15T10:30:00Z"
                  context:
                    userAgent: "Mozilla/5.0..."
                    viewport: "1920x1080"
                    connection: "4g"
      responses:
        '200':
          description: Telemetry data successfully received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryResponse'
        '400':
          description: Invalid telemetry data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid API key
        '429':
          description: Rate limit exceeded
          
  /telemetry/errors:
    post:
      summary: Submit error telemetry data
      description: |
        Submit application errors with automatic PII redaction.
        Includes stack traces, user context (anonymized), and error metadata.
      operationId: submitErrorTelemetry
      tags:
        - Errors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorTelemetryRequest'
      responses:
        '200':
          description: Error telemetry successfully received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryResponse'
                
  /traces:
    post:
      summary: Submit distributed tracing data
      description: |
        Submit OpenTelemetry traces for distributed request tracking.
        Automatically filters sensitive healthcare data.
      operationId: submitTraces
      tags:
        - Tracing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TracingRequest'
      responses:
        '200':
          description: Traces successfully received
          
  /health:
    get:
      summary: Health check endpoint
      description: Returns observability service health status
      operationId: getHealth
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for service-to-service authentication
      
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for user authentication

  schemas:
    PerformanceTelemetryRequest:
      type: object
      required:
        - sessionId
        - metrics
      properties:
        sessionId:
          type: string
          description: Anonymized session identifier
          pattern: '^sess_[a-zA-Z0-9]{8,}$'
          example: "sess_12345abc"
        userId:
          type: string
          description: Anonymized user identifier (optional)
          pattern: '^usr_(anon_)?[a-zA-Z0-9]{8,}$'
          example: "usr_anon_67890"
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/PerformanceMetric'
          minItems: 1
          maxItems: 50
        context:
          $ref: '#/components/schemas/TelemetryContext'
        lgpdConsent:
          $ref: '#/components/schemas/LGPDConsent'

    PerformanceMetric:
      type: object
      required:
        - name
        - value
        - timestamp
      properties:
        name:
          type: string
          enum: 
            - "CLS"
            - "FCP"
            - "FID"
            - "INP"
            - "LCP"
            - "TTFB"
            - "navigation_timing"
            - "resource_timing"
            - "custom_metric"
          description: Performance metric name
        value:
          type: number
          description: Metric value in appropriate units
          minimum: 0
        timestamp:
          type: string
          format: date-time
          description: ISO 8601 timestamp when metric was collected
        unit:
          type: string
          enum: ["ms", "score", "bytes", "count"]
          default: "ms"
        tags:
          type: object
          additionalProperties:
            type: string
          description: Additional metric tags (no PII)
          maxProperties: 10

    ErrorTelemetryRequest:
      type: object
      required:
        - sessionId
        - error
      properties:
        sessionId:
          type: string
          pattern: '^sess_[a-zA-Z0-9]{8,}$'
        userId:
          type: string
          pattern: '^usr_(anon_)?[a-zA-Z0-9]{8,}$'
        error:
          $ref: '#/components/schemas/ErrorDetails'
        context:
          $ref: '#/components/schemas/TelemetryContext'
        lgpdConsent:
          $ref: '#/components/schemas/LGPDConsent'

    ErrorDetails:
      type: object
      required:
        - message
        - timestamp
      properties:
        message:
          type: string
          description: Error message (automatically redacted)
          maxLength: 1000
        stack:
          type: string
          description: Stack trace (automatically redacted)
          maxLength: 10000
        type:
          type: string
          enum: 
            - "javascript_error"
            - "unhandled_promise_rejection"
            - "network_error"
            - "validation_error"
            - "authentication_error"
            - "authorization_error"
        severity:
          type: string
          enum: ["low", "medium", "high", "critical"]
          default: "medium"
        timestamp:
          type: string
          format: date-time
        fingerprint:
          type: string
          description: Error fingerprint for grouping
          maxLength: 64
        tags:
          type: object
          additionalProperties:
            type: string
          maxProperties: 10

    TracingRequest:
      type: object
      required:
        - spans
      properties:
        spans:
          type: array
          items:
            $ref: '#/components/schemas/TraceSpan'
          minItems: 1
          maxItems: 100

    TraceSpan:
      type: object
      required:
        - traceId
        - spanId
        - operationName
        - startTime
        - duration
      properties:
        traceId:
          type: string
          description: Unique trace identifier
          pattern: '^[a-f0-9]{32}$'
        spanId:
          type: string
          description: Unique span identifier
          pattern: '^[a-f0-9]{16}$'
        parentSpanId:
          type: string
          pattern: '^[a-f0-9]{16}$'
        operationName:
          type: string
          description: Operation being traced
          maxLength: 200
        startTime:
          type: string
          format: date-time
        duration:
          type: number
          description: Duration in microseconds
          minimum: 0
        tags:
          type: object
          additionalProperties:
            type: string
          description: Span tags (no PII)
          maxProperties: 20
        logs:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              fields:
                type: object
                additionalProperties:
                  type: string
          maxItems: 10

    TelemetryContext:
      type: object
      properties:
        userAgent:
          type: string
          description: Browser user agent string
          maxLength: 500
        viewport:
          type: string
          description: Browser viewport size
          pattern: '^\d+x\d+$'
          example: "1920x1080"
        connection:
          type: string
          enum: ["slow-2g", "2g", "3g", "4g", "5g", "wifi", "unknown"]
        timezone:
          type: string
          description: User timezone
          example: "America/Sao_Paulo"
        locale:
          type: string
          description: User locale
          pattern: '^[a-z]{2}-[A-Z]{2}$'
          example: "pt-BR"
        page:
          type: object
          properties:
            url:
              type: string
              description: Page URL (without query parameters)
              maxLength: 500
            title:
              type: string
              description: Page title
              maxLength: 200
            referrer:
              type: string
              description: Referrer URL (domain only)
              maxLength: 100

    LGPDConsent:
      type: object
      required:
        - hasConsent
        - legalBasis
      properties:
        hasConsent:
          type: boolean
          description: Whether user has given consent for data processing
        legalBasis:
          type: string
          enum: 
            - "consent"
            - "contract"
            - "legal_obligation"
            - "vital_interests"
            - "public_interest"
            - "legitimate_interests"
          description: LGPD legal basis for data processing
        consentTimestamp:
          type: string
          format: date-time
          description: When consent was given
        purposes:
          type: array
          items:
            type: string
            enum:
              - "performance_monitoring"
              - "error_tracking"
              - "security_monitoring"
              - "service_improvement"
          description: Specific purposes for data processing

    TelemetryResponse:
      type: object
      required:
        - success
        - receivedAt
      properties:
        success:
          type: boolean
          example: true
        receivedAt:
          type: string
          format: date-time
          description: When the telemetry was received
        eventId:
          type: string
          description: Unique identifier for this telemetry event
          example: "evt_67890def"
        processed:
          type: integer
          description: Number of metrics/events processed
          minimum: 0

    HealthResponse:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          enum: ["healthy", "degraded", "unhealthy"]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
          example: "1.0.0"
        checks:
          type: object
          properties:
            database:
              type: string
              enum: ["healthy", "unhealthy"]
            storage:
              type: string
              enum: ["healthy", "unhealthy"]
            external_services:
              type: object
              additionalProperties:
                type: string
                enum: ["healthy", "unhealthy"]

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: Error code
          example: "INVALID_TELEMETRY_DATA"
        message:
          type: string
          description: Human-readable error message
          example: "The provided telemetry data is invalid"
        timestamp:
          type: string
          format: date-time
        details:
          type: object
          description: Additional error details
          properties:
            field:
              type: string
              description: Field that caused the error
            reason:
              type: string
              description: Specific reason for the error
        requestId:
          type: string
          description: Unique request identifier for debugging
          example: "req_12345abc"

tags:
  - name: Performance
    description: Performance monitoring and Web Vitals
  - name: Errors
    description: Error tracking and reporting
  - name: Tracing
    description: Distributed tracing and request tracking
  - name: Health
    description: Service health and status endpoints

x-lgpd-compliance:
  dataRetention: "90 days for performance data, 1 year for critical errors"
  automaticDeletion: true
  piiRedaction: "All requests automatically processed for PII removal"
  legalBasis: "legitimate_interests for performance, consent for detailed tracking"
  dataSubjectRights: "Users can request data deletion via /privacy/delete endpoint"