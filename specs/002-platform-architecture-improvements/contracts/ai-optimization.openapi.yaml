openapi: 3.1.0
info:
  title: NeonPro AI Optimization API
  version: 1.0.0
  description: |
    AI cost and latency optimization API for NeonPro healthcare platform.
    Handles semantic caching, model routing, and AI performance monitoring
    with healthcare compliance and data protection.
  contact:
    name: NeonPro AI Team
    email: ai@neonpro.health
  license:
    name: Proprietary

servers:
  - url: https://api.neonpro.health/v1/ai
    description: Production AI optimization endpoint
  - url: https://staging-api.neonpro.health/v1/ai
    description: Staging AI optimization endpoint

security:
  - ApiKeyAuth: []
  - BearerAuth: []

paths:
  /cache/semantic:
    post:
      summary: Store semantic cache entry
      description: |
        Store AI response in semantic cache with embedding-based similarity matching.
        Includes healthcare data classification and LGPD compliance.
      operationId: storeSemanticCache
      tags:
        - Semantic Caching
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemanticCacheRequest'
      responses:
        '201':
          description: Cache entry stored successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheStoreResponse'
        '400':
          description: Invalid cache data
        '413':
          description: Cache entry too large

    get:
      summary: Search semantic cache
      description: |
        Search for cached AI responses using semantic similarity.
        Returns matches above specified similarity threshold.
      operationId: searchSemanticCache
      tags:
        - Semantic Caching
      parameters:
        - name: query
          in: query
          required: true
          description: Query text for semantic search
          schema:
            type: string
            maxLength: 2000
        - name: similarity_threshold
          in: query
          description: Minimum similarity score (0.0-1.0)
          schema:
            type: number
            minimum: 0.0
            maximum: 1.0
            default: 0.85
        - name: max_results
          in: query
          description: Maximum number of results
          schema:
            type: integer
            minimum: 1
            maximum: 20
            default: 5
        - name: model
          in: query
          description: Filter by AI model
          schema:
            type: string
            example: "gpt-4o"
        - name: data_classification
          in: query
          description: Filter by data classification level
          schema:
            type: string
            enum: ["public", "internal", "confidential", "restricted"]
      responses:
        '200':
          description: Semantic search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemanticSearchResponse'

  /cache/invalidate:
    post:
      summary: Invalidate cache entries
      description: |
        Invalidate cache entries based on criteria like TTL, tags, or patterns.
        Supports healthcare-compliant data retention policies.
      operationId: invalidateCache
      tags:
        - Cache Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CacheInvalidationRequest'
      responses:
        '200':
          description: Cache invalidation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheInvalidationResponse'

  /models/routing:
    post:
      summary: Get optimal model routing
      description: |
        Determine optimal AI model routing based on request characteristics,
        cost constraints, and performance requirements.
      operationId: getModelRouting
      tags:
        - Model Routing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRoutingRequest'
      responses:
        '200':
          description: Model routing recommendation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRoutingResponse'

  /models/fallback:
    get:
      summary: Get model fallback configuration
      description: |
        Retrieve current model fallback chains for high availability
        and cost optimization.
      operationId: getModelFallback
      tags:
        - Model Routing
      responses:
        '200':
          description: Model fallback configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelFallbackConfig'

    put:
      summary: Update model fallback configuration
      description: |
        Configure model fallback chains with health checks and
        automatic failover for healthcare reliability.
      operationId: updateModelFallback
      tags:
        - Model Routing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelFallbackUpdate'
      responses:
        '200':
          description: Fallback configuration updated

  /analytics/costs:
    get:
      summary: Get AI cost analytics
      description: |
        Retrieve AI usage costs and optimization recommendations
        with detailed breakdown by model, feature, and time period.
      operationId: getCostAnalytics
      tags:
        - Cost Analytics
      parameters:
        - name: timeRange
          in: query
          description: Time range for analytics
          schema:
            type: string
            enum: ["1h", "24h", "7d", "30d", "90d"]
            default: "30d"
        - name: groupBy
          in: query
          description: Group results by dimension
          schema:
            type: string
            enum: ["model", "feature", "user", "day", "hour"]
            default: "day"
        - name: model
          in: query
          description: Filter by specific model
          schema:
            type: string
      responses:
        '200':
          description: Cost analytics data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostAnalyticsResponse'

  /analytics/performance:
    get:
      summary: Get AI performance analytics
      description: |
        Retrieve AI performance metrics including latency, throughput,
        and cache hit rates with healthcare SLA tracking.
      operationId: getPerformanceAnalytics
      tags:
        - Performance Analytics
      parameters:
        - name: timeRange
          in: query
          schema:
            type: string
            enum: ["1h", "24h", "7d", "30d"]
            default: "24h"
        - name: metric
          in: query
          description: Specific metric to retrieve
          schema:
            type: string
            enum: ["latency", "throughput", "cache_hit_rate", "error_rate"]
      responses:
        '200':
          description: Performance analytics data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAnalyticsResponse'

  /embeddings/generate:
    post:
      summary: Generate embeddings for caching
      description: |
        Generate embeddings for text content to support semantic caching.
        Includes healthcare data classification and privacy protection.
      operationId: generateEmbeddings
      tags:
        - Embeddings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddingRequest'
      responses:
        '200':
          description: Embeddings generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SemanticCacheRequest:
      type: object
      required:
        - query
        - response
        - model
        - embedding
      properties:
        query:
          type: string
          description: Original query text
          maxLength: 2000
        response:
          type: string
          description: AI model response
          maxLength: 10000
        model:
          type: string
          description: AI model used
          example: "gpt-4o"
        embedding:
          type: array
          items:
            type: number
          description: Query embedding vector
          minItems: 1024
          maxItems: 3072
        metadata:
          $ref: '#/components/schemas/CacheMetadata'
        ttl:
          type: integer
          description: Time to live in seconds
          minimum: 60
          maximum: 2592000
          default: 3600
        dataClassification:
          type: string
          enum: ["public", "internal", "confidential", "restricted"]
          description: Healthcare data classification level
        lgpdCompliance:
          $ref: '#/components/schemas/LGPDCacheCompliance'

    CacheMetadata:
      type: object
      properties:
        userId:
          type: string
          description: Anonymized user ID
          pattern: '^usr_[a-zA-Z0-9]{8,}$'
        sessionId:
          type: string
          description: Session identifier
          pattern: '^sess_[a-zA-Z0-9]{8,}$'
        feature:
          type: string
          description: Feature that generated the query
          example: "patient_summary"
        context:
          type: object
          description: Additional context (no PII)
          additionalProperties:
            type: string
          maxProperties: 10
        tags:
          type: array
          items:
            type: string
          description: Cache tags for organization
          maxItems: 10
        cost:
          type: number
          description: Cost of original API call
          minimum: 0
        latency:
          type: number
          description: Original response latency in milliseconds
          minimum: 0

    SemanticSearchResponse:
      type: object
      required:
        - matches
        - searchTime
      properties:
        matches:
          type: array
          items:
            $ref: '#/components/schemas/CacheMatch'
        searchTime:
          type: number
          description: Search time in milliseconds
        totalMatches:
          type: integer
          description: Total available matches
        cacheStats:
          $ref: '#/components/schemas/CacheStats'

    CacheMatch:
      type: object
      required:
        - id
        - similarity
        - response
        - metadata
      properties:
        id:
          type: string
          description: Cache entry ID
        similarity:
          type: number
          description: Similarity score (0.0-1.0)
          minimum: 0.0
          maximum: 1.0
        response:
          type: string
          description: Cached AI response
        metadata:
          $ref: '#/components/schemas/CacheMetadata'
        createdAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
        hitCount:
          type: integer
          description: Number of times this entry was used

    ModelRoutingRequest:
      type: object
      required:
        - query
        - requirements
      properties:
        query:
          type: string
          description: Query to route
          maxLength: 2000
        requirements:
          $ref: '#/components/schemas/RoutingRequirements'
        context:
          type: object
          properties:
            userId:
              type: string
            feature:
              type: string
            priority:
              type: string
              enum: ["low", "normal", "high", "critical"]
            dataClassification:
              type: string
              enum: ["public", "internal", "confidential", "restricted"]

    RoutingRequirements:
      type: object
      properties:
        maxCost:
          type: number
          description: Maximum acceptable cost per request
          minimum: 0
        maxLatency:
          type: number
          description: Maximum acceptable latency in milliseconds
          minimum: 0
        minQuality:
          type: number
          description: Minimum quality score (0.0-1.0)
          minimum: 0.0
          maximum: 1.0
        capabilities:
          type: array
          items:
            type: string
            enum: 
              - "text_generation"
              - "code_generation"
              - "summarization"
              - "analysis"
              - "translation"
              - "medical_knowledge"
          description: Required AI capabilities
        healthcareCompliance:
          type: boolean
          description: Requires healthcare compliance
          default: true

    ModelRoutingResponse:
      type: object
      required:
        - primaryModel
        - estimatedCost
        - estimatedLatency
      properties:
        primaryModel:
          $ref: '#/components/schemas/ModelSelection'
        fallbackModels:
          type: array
          items:
            $ref: '#/components/schemas/ModelSelection'
        estimatedCost:
          type: number
          description: Estimated cost for this request
        estimatedLatency:
          type: number
          description: Estimated latency in milliseconds
        reasoning:
          type: string
          description: Explanation for model selection
        cacheRecommendation:
          type: boolean
          description: Whether to cache this response

    ModelSelection:
      type: object
      required:
        - name
        - provider
        - confidence
      properties:
        name:
          type: string
          description: Model name
          example: "gpt-4o"
        provider:
          type: string
          description: Model provider
          example: "openai"
        version:
          type: string
          description: Model version
        confidence:
          type: number
          description: Confidence in this selection (0.0-1.0)
          minimum: 0.0
          maximum: 1.0
        costPerToken:
          type: number
          description: Cost per token
        estimatedTokens:
          type: integer
          description: Estimated token usage
        healthcareOptimized:
          type: boolean
          description: Optimized for healthcare use cases

    CostAnalyticsResponse:
      type: object
      required:
        - totalCost
        - timeRange
        - breakdown
      properties:
        totalCost:
          type: number
          description: Total cost for the period
        timeRange:
          type: string
          description: Analyzed time range
        breakdown:
          type: array
          items:
            $ref: '#/components/schemas/CostBreakdown'
        trends:
          $ref: '#/components/schemas/CostTrends'
        optimization:
          $ref: '#/components/schemas/OptimizationRecommendations'

    CostBreakdown:
      type: object
      required:
        - dimension
        - value
        - cost
        - percentage
      properties:
        dimension:
          type: string
          description: Breakdown dimension (model, feature, etc.)
        value:
          type: string
          description: Dimension value
        cost:
          type: number
          description: Cost for this dimension
        percentage:
          type: number
          description: Percentage of total cost
        requests:
          type: integer
          description: Number of requests
        averageCost:
          type: number
          description: Average cost per request

    PerformanceAnalyticsResponse:
      type: object
      required:
        - metrics
        - timeRange
      properties:
        metrics:
          $ref: '#/components/schemas/PerformanceMetrics'
        timeRange:
          type: string
        slaCompliance:
          $ref: '#/components/schemas/SLACompliance'
        trends:
          $ref: '#/components/schemas/PerformanceTrends'

    PerformanceMetrics:
      type: object
      properties:
        averageLatency:
          type: number
          description: Average latency in milliseconds
        p95Latency:
          type: number
          description: 95th percentile latency
        p99Latency:
          type: number
          description: 99th percentile latency
        throughput:
          type: number
          description: Requests per second
        cacheHitRate:
          type: number
          description: Cache hit rate (0.0-1.0)
        errorRate:
          type: number
          description: Error rate (0.0-1.0)
        costSavings:
          type: number
          description: Cost savings from caching

    LGPDCacheCompliance:
      type: object
      required:
        - hasConsent
        - legalBasis
      properties:
        hasConsent:
          type: boolean
          description: User consent for caching
        legalBasis:
          type: string
          enum: 
            - "consent"
            - "legitimate_interests"
            - "contract"
          description: LGPD legal basis
        dataRetention:
          type: integer
          description: Retention period in seconds
        anonymized:
          type: boolean
          description: Whether data is anonymized
        purposes:
          type: array
          items:
            type: string
            enum:
              - "performance_optimization"
              - "cost_reduction"
              - "service_improvement"

tags:
  - name: Semantic Caching
    description: Semantic similarity-based response caching
  - name: Cache Management
    description: Cache lifecycle and invalidation
  - name: Model Routing
    description: Intelligent AI model selection and routing
  - name: Cost Analytics
    description: AI usage cost tracking and optimization
  - name: Performance Analytics
    description: AI performance monitoring and SLA tracking
  - name: Embeddings
    description: Text embedding generation for semantic search

x-healthcare-ai:
  lgpd:
    dataProcessing: "All AI operations include LGPD compliance validation"
    cacheRetention: "Maximum 90 days for patient data, 1 year for operational data"
    consentManagement: "User consent tracked for AI data processing"
  anvisa:
    medicalAI: "AI outputs classified as medical device software (SaMD)"
    riskManagement: "ISO 14971 risk management for AI decisions"
  performance:
    healthcareSLA: "99.9% uptime for critical healthcare AI functions"
    latencyTarget: "Sub-500ms response time for patient care AI"
    costOptimization: "Target 80% cost reduction through semantic caching"