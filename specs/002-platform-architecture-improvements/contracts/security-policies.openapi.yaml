openapi: 3.1.0
info:
  title: NeonPro Security Policies API
  version: 1.0.0
  description: |
    Security policy management API for NeonPro healthcare platform.
    Handles CSP, SRI, HSTS, and healthcare-specific security policies
    with LGPD compliance and data protection measures.
  contact:
    name: NeonPro Security Team
    email: security@neonpro.health
  license:
    name: Proprietary

servers:
  - url: https://api.neonpro.health/v1/security
    description: Production security policy endpoint
  - url: https://staging-api.neonpro.health/v1/security
    description: Staging security policy endpoint

security:
  - ApiKeyAuth: []
  - BearerAuth: []

paths:
  /policies/csp:
    get:
      summary: Get Content Security Policy
      description: |
        Retrieve current Content Security Policy configuration
        with healthcare-specific security directives.
      operationId: getCSPPolicy
      tags:
        - Content Security Policy
      parameters:
        - name: environment
          in: query
          description: Environment to get policy for
          schema:
            type: string
            enum: ["production", "staging", "development"]
            default: "production"
      responses:
        '200':
          description: CSP policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSPPolicy'
          headers:
            Content-Security-Policy:
              description: The actual CSP header value
              schema:
                type: string

    put:
      summary: Update Content Security Policy
      description: |
        Update CSP configuration with validation against
        healthcare security requirements.
      operationId: updateCSPPolicy
      tags:
        - Content Security Policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CSPPolicyUpdate'
      responses:
        '200':
          description: CSP policy updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyUpdateResponse'
        '400':
          description: Invalid CSP configuration
        '403':
          description: Insufficient permissions to update policy

  /policies/sri:
    get:
      summary: Get Subresource Integrity policies
      description: |
        Retrieve SRI hash verification policies for static assets
        including healthcare-specific integrity requirements.
      operationId: getSRIPolicy
      tags:
        - Subresource Integrity
      responses:
        '200':
          description: SRI policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SRIPolicy'

    post:
      summary: Generate SRI hashes
      description: |
        Generate SRI hashes for specified resources with
        healthcare compliance validation.
      operationId: generateSRIHashes
      tags:
        - Subresource Integrity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SRIHashRequest'
      responses:
        '200':
          description: SRI hashes generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SRIHashResponse'

  /policies/hsts:
    get:
      summary: Get HTTP Strict Transport Security policy
      description: Retrieve HSTS configuration for secure connections
      operationId: getHSTSPolicy
      tags:
        - Transport Security
      responses:
        '200':
          description: HSTS policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HSTSPolicy'

    put:
      summary: Update HSTS policy
      description: |
        Update HSTS configuration with healthcare security validation.
        Includes preload list management for production domains.
      operationId: updateHSTSPolicy
      tags:
        - Transport Security
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HSTSPolicyUpdate'
      responses:
        '200':
          description: HSTS policy updated successfully

  /policies/permissions:
    get:
      summary: Get Permissions Policy configuration
      description: |
        Retrieve browser permissions policy for healthcare applications.
        Controls access to sensitive browser APIs.
      operationId: getPermissionsPolicy
      tags:
        - Browser Permissions
      responses:
        '200':
          description: Permissions policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsPolicy'

  /authentication/argon2:
    get:
      summary: Get Argon2 configuration
      description: |
        Retrieve current Argon2id password hashing configuration
        optimized for healthcare security requirements.
      operationId: getArgon2Config
      tags:
        - Authentication
      responses:
        '200':
          description: Argon2 configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Argon2Config'

    put:
      summary: Update Argon2 configuration
      description: |
        Update Argon2id parameters with security validation.
        Includes migration strategy from bcrypt.
      operationId: updateArgon2Config
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Argon2ConfigUpdate'
      responses:
        '200':
          description: Argon2 configuration updated successfully

  /authentication/migration:
    post:
      summary: Initiate password hash migration
      description: |
        Start migration from bcrypt to Argon2id hashing.
        Supports gradual migration for production systems.
      operationId: initiateHashMigration
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashMigrationRequest'
      responses:
        '202':
          description: Migration initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationResponse'

    get:
      summary: Get migration status
      description: Check status of ongoing password hash migration
      operationId: getMigrationStatus
      tags:
        - Authentication
      responses:
        '200':
          description: Migration status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationStatus'

  /audit/violations:
    get:
      summary: Get security policy violations
      description: |
        Retrieve security policy violations and compliance issues
        with LGPD data protection analysis.
      operationId: getSecurityViolations
      tags:
        - Security Audit
      parameters:
        - name: severity
          in: query
          description: Filter by violation severity
          schema:
            type: string
            enum: ["low", "medium", "high", "critical"]
        - name: policy
          in: query
          description: Filter by policy type
          schema:
            type: string
            enum: ["csp", "sri", "hsts", "permissions", "authentication"]
        - name: timeRange
          in: query
          description: Time range for violations
          schema:
            type: string
            enum: ["1h", "24h", "7d", "30d"]
            default: "24h"
      responses:
        '200':
          description: Security violations list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityViolations'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    CSPPolicy:
      type: object
      required:
        - version
        - lastUpdated
        - directives
      properties:
        version:
          type: string
          description: Policy version
          example: "1.2.0"
        lastUpdated:
          type: string
          format: date-time
        environment:
          type: string
          enum: ["production", "staging", "development"]
        directives:
          type: object
          properties:
            default-src:
              type: array
              items:
                type: string
              example: ["'self'"]
            script-src:
              type: array
              items:
                type: string
              example: ["'self'", "'unsafe-inline'", "https://cdn.neonpro.health"]
            style-src:
              type: array
              items:
                type: string
              example: ["'self'", "'unsafe-inline'", "https://fonts.googleapis.com"]
            img-src:
              type: array
              items:
                type: string
              example: ["'self'", "data:", "https://assets.neonpro.health"]
            font-src:
              type: array
              items:
                type: string
              example: ["'self'", "https://fonts.gstatic.com"]
            connect-src:
              type: array
              items:
                type: string
              example: ["'self'", "https://api.neonpro.health", "wss://realtime.neonpro.health"]
            frame-ancestors:
              type: array
              items:
                type: string
              example: ["'none'"]
            form-action:
              type: array
              items:
                type: string
              example: ["'self'"]
            base-uri:
              type: array
              items:
                type: string
              example: ["'self'"]
            object-src:
              type: array
              items:
                type: string
              example: ["'none'"]
        reportUri:
          type: string
          description: CSP violation reporting endpoint
          example: "https://api.neonpro.health/v1/security/csp-reports"
        healthcareCompliance:
          $ref: '#/components/schemas/HealthcareCSPCompliance'

    CSPPolicyUpdate:
      type: object
      required:
        - directives
      properties:
        directives:
          type: object
          description: CSP directives to update
        environment:
          type: string
          enum: ["production", "staging", "development"]
        validateHealthcare:
          type: boolean
          description: Validate against healthcare security requirements
          default: true

    SRIPolicy:
      type: object
      required:
        - enabled
        - lastUpdated
        - resources
      properties:
        enabled:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
        resources:
          type: array
          items:
            $ref: '#/components/schemas/SRIResource'
        algorithms:
          type: array
          items:
            type: string
            enum: ["sha256", "sha384", "sha512"]
          description: Supported hash algorithms
        healthcareRequirements:
          $ref: '#/components/schemas/HealthcareSRIRequirements'

    SRIResource:
      type: object
      required:
        - url
        - hash
        - algorithm
      properties:
        url:
          type: string
          description: Resource URL
          example: "https://cdn.neonpro.health/app.js"
        hash:
          type: string
          description: Base64 encoded hash
          example: "sha384-oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC"
        algorithm:
          type: string
          enum: ["sha256", "sha384", "sha512"]
        size:
          type: integer
          description: Resource size in bytes
        lastVerified:
          type: string
          format: date-time
        critical:
          type: boolean
          description: Critical resource for healthcare functionality

    HSTSPolicy:
      type: object
      required:
        - enabled
        - maxAge
        - includeSubDomains
      properties:
        enabled:
          type: boolean
        maxAge:
          type: integer
          description: Max age in seconds
          minimum: 0
          example: 31536000
        includeSubDomains:
          type: boolean
          description: Apply to all subdomains
        preload:
          type: boolean
          description: Include in HSTS preload list
        healthcareCompliance:
          type: boolean
          description: Enforce healthcare-grade transport security

    PermissionsPolicy:
      type: object
      properties:
        camera:
          type: array
          items:
            type: string
          example: ["self"]
        microphone:
          type: array
          items:
            type: string
          example: ["self"]
        geolocation:
          type: array
          items:
            type: string
          example: ["none"]
        notifications:
          type: array
          items:
            type: string
          example: ["self"]
        payment:
          type: array
          items:
            type: string
          example: ["self"]
        usb:
          type: array
          items:
            type: string
          example: ["none"]
        healthcareRestrictions:
          $ref: '#/components/schemas/HealthcarePermissionRestrictions'

    Argon2Config:
      type: object
      required:
        - variant
        - memory
        - iterations
        - parallelism
        - hashLength
      properties:
        variant:
          type: string
          enum: ["argon2i", "argon2d", "argon2id"]
          description: Argon2 variant
          example: "argon2id"
        memory:
          type: integer
          description: Memory usage in KB
          minimum: 1024
          maximum: 1048576
          example: 65536
        iterations:
          type: integer
          description: Number of iterations
          minimum: 1
          maximum: 100
          example: 3
        parallelism:
          type: integer
          description: Degree of parallelism
          minimum: 1
          maximum: 16
          example: 4
        hashLength:
          type: integer
          description: Hash length in bytes
          minimum: 16
          maximum: 64
          example: 32
        saltLength:
          type: integer
          description: Salt length in bytes
          minimum: 16
          maximum: 64
          example: 32
        healthcareOptimized:
          type: boolean
          description: Optimized for healthcare security requirements

    HashMigrationRequest:
      type: object
      required:
        - strategy
        - batchSize
      properties:
        strategy:
          type: string
          enum: ["gradual", "immediate", "on_login"]
          description: Migration strategy
        batchSize:
          type: integer
          description: Users to migrate per batch
          minimum: 1
          maximum: 1000
          example: 100
        testMode:
          type: boolean
          description: Run in test mode without actual migration
        healthcareValidation:
          type: boolean
          description: Apply healthcare-specific validation
          default: true

    SecurityViolations:
      type: object
      required:
        - violations
        - total
        - timeRange
      properties:
        violations:
          type: array
          items:
            $ref: '#/components/schemas/SecurityViolation'
        total:
          type: integer
        timeRange:
          type: string
        summary:
          $ref: '#/components/schemas/ViolationsSummary'

    SecurityViolation:
      type: object
      required:
        - id
        - type
        - severity
        - timestamp
        - description
      properties:
        id:
          type: string
          description: Unique violation ID
        type:
          type: string
          enum: ["csp", "sri", "hsts", "permissions", "authentication"]
        severity:
          type: string
          enum: ["low", "medium", "high", "critical"]
        timestamp:
          type: string
          format: date-time
        description:
          type: string
          description: Human-readable violation description
        source:
          type: string
          description: Source of the violation
        userAgent:
          type: string
          description: User agent (if applicable)
        ipAddress:
          type: string
          description: IP address (anonymized for LGPD compliance)
        remediation:
          type: string
          description: Suggested remediation steps
        healthcareImpact:
          $ref: '#/components/schemas/HealthcareImpactAssessment'

    HealthcareCSPCompliance:
      type: object
      properties:
        lgpdCompliant:
          type: boolean
          description: LGPD data protection compliance
        anvisaCompliant:
          type: boolean
          description: ANVISA medical device compliance
        requiresAuditTrail:
          type: boolean
          description: Requires audit trail for changes
        dataClassification:
          type: array
          items:
            type: string
            enum: ["public", "internal", "confidential", "restricted"]

tags:
  - name: Content Security Policy
    description: CSP configuration and management
  - name: Subresource Integrity
    description: SRI hash management and verification
  - name: Transport Security
    description: HSTS and transport security policies
  - name: Browser Permissions
    description: Browser API permissions management
  - name: Authentication
    description: Authentication security policies
  - name: Security Audit
    description: Security violation monitoring and reporting

x-healthcare-security:
  lgpd:
    dataProtection: "All security policies include LGPD data protection measures"
    auditTrail: "Complete audit trail for all policy changes"
    dataRetention: "Security logs retained for 2 years minimum"
  anvisa:
    medicalDeviceSecurity: "Compliance with ANVISA RDC 185/2001"
    riskManagement: "ISO 14971 risk management integration"
  cfm:
    professionalStandards: "Medical professional security standards"
    ethicalCompliance: "Patient data protection ethical guidelines"