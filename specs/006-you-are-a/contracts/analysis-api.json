{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Monorepo Architecture Analysis API",
  "description": "API contracts for comprehensive monorepo architectural analysis",
  "version": "1.0.0",
  "baseUrl": "/api/analysis",
  "paths": {
    "/analyze": {
      "post": {
        "summary": "Start comprehensive monorepo analysis",
        "operationId": "startAnalysis",
        "tags": ["Analysis"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AnalysisRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Analysis started successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AnalysisResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid analysis configuration",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/analyze/{analysisId}": {
      "get": {
        "summary": "Get analysis status and results",
        "operationId": "getAnalysis",
        "tags": ["Analysis"],
        "parameters": [
          {
            "name": "analysisId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CodebaseAnalysis" }
              }
            }
          },
          "404": {
            "description": "Analysis not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/duplicate-detection": {
      "post": {
        "summary": "Run code duplication detection",
        "operationId": "detectDuplicates",
        "tags": ["Duplication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DuplicationDetectionRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Duplication analysis results",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/JscpdResult" }
              }
            }
          }
        }
      }
    },
    "/architectural-validation": {
      "post": {
        "summary": "Validate architectural patterns and principles",
        "operationId": "validateArchitecture",
        "tags": ["Architecture"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ArchitecturalValidationRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Architectural validation results",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ArchitecturalValidationResult" }
              }
            }
          }
        }
      }
    },
    "/performance-analysis": {
      "post": {
        "summary": "Analyze build and runtime performance",
        "operationId": "analyzePerformance",
        "tags": ["Performance"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PerformanceAnalysisRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Performance analysis results",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PerformanceAnalysisResult" }
              }
            }
          }
        }
      }
    },
    "/recommendations": {
      "get": {
        "summary": "Get improvement recommendations",
        "operationId": "getRecommendations",
        "tags": ["Recommendations"],
        "parameters": [
          {
            "name": "analysisId",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["IMMEDIATE", "HIGH", "MEDIUM", "LOW"]
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["STRUCTURAL", "PERFORMANCE", "MAINTAINABILITY", "SECURITY", "TYPE_SAFETY"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of recommendations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Recommendation" }
                }
              }
            }
          }
        }
      }
    },
    "/report": {
      "get": {
        "summary": "Generate comprehensive analysis report",
        "operationId": "generateReport",
        "tags": ["Reporting"],
        "parameters": [
          {
            "name": "analysisId",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["json", "pdf", "html"],
              "default": "json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis report",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AnalysisReport" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnalysisRequest": {
        "type": "object",
        "required": ["scope"],
        "properties": {
          "scope": { "$ref": "#/components/schemas/AnalysisScope" },
          "options": {
            "type": "object",
            "properties": {
              "includeTests": { "type": "boolean", "default": false },
              "parallel": { "type": "boolean", "default": true },
              "verbose": { "type": "boolean", "default": false }
            }
          }
        }
      },
      "AnalysisResponse": {
        "type": "object",
        "required": ["analysisId", "status", "estimatedDuration"],
        "properties": {
          "analysisId": { "type": "string" },
          "status": { "$ref": "#/components/schemas/AnalysisStatus" },
          "estimatedDuration": { "type": "number", "description": "Estimated duration in seconds" },
          "startedAt": { "type": "string", "format": "date-time" }
        }
      },
      "AnalysisStatus": {
        "type": "string",
        "enum": ["PENDING", "RUNNING", "COMPLETED", "FAILED", "CANCELLED"]
      },
      "CodebaseAnalysis": {
        "type": "object",
        "required": ["id", "analysisDate", "version", "scope", "findings", "metrics", "recommendations", "status"],
        "properties": {
          "id": { "type": "string" },
          "analysisDate": { "type": "string", "format": "date-time" },
          "version": { "type": "string" },
          "scope": { "$ref": "#/components/schemas/AnalysisScope" },
          "findings": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Finding" }
          },
          "metrics": { "$ref": "#/components/schemas/AnalysisMetrics" },
          "recommendations": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Recommendation" }
          },
          "status": { "$ref": "#/components/schemas/AnalysisStatus" },
          "progress": { "$ref": "#/components/schemas/AnalysisProgress" }
        }
      },
      "AnalysisScope": {
        "type": "object",
        "required": ["includePaths", "analysisTypes"],
        "properties": {
          "includePaths": {
            "type": "array",
            "items": { "type": "string" }
          },
          "excludePaths": {
            "type": "array",
            "items": { "type": "string" }
          },
          "analysisTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["DUPLICATE_DETECTION", "ARCHITECTURAL_VALIDATION", "DEPENDENCY_ANALYSIS", "PERFORMANCE_ANALYSIS", "TYPE_SAFETY_ANALYSIS"]
            }
          },
          "thresholds": { "$ref": "#/components/schemas/QualityThresholds" },
          "focusAreas": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "QualityThresholds": {
        "type": "object",
        "properties": {
          "maxDuplicationPercentage": { "type": "number", "default": 5 },
          "maxCircularDependencies": { "type": "number", "default": 0 },
          "minTypeSafetyScore": { "type": "number", "default": 95 },
          "maxBuildTimeMs": { "type": "number", "default": 2000 },
          "maxBundleSizeKB": { "type": "number", "default": 500 },
          "minTestCoverage": { "type": "number", "default": 90 }
        }
      },
      "Finding": {
        "type": "object",
        "required": ["id", "type", "severity", "location", "description", "impact", "proposedSolution"],
        "properties": {
          "id": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["CODE_DUPLICATION", "ARCHITECTURAL_VIOLATION", "PERFORMANCE_ISSUE", "TYPE_SAFETY_ISSUE", "DEPENDENCY_ISSUE", "ORGANIZATIONAL_ISSUE"]
          },
          "severity": {
            "type": "string",
            "enum": ["CRITICAL", "HIGH", "MEDIUM", "LOW"]
          },
          "location": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Location" }
          },
          "description": { "type": "string" },
          "impact": { "$ref": "#/components/schemas/ImpactAssessment" },
          "proposedSolution": { "$ref": "#/components/schemas/Solution" },
          "evidence": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "Location": {
        "type": "object",
        "required": ["filePath"],
        "properties": {
          "filePath": { "type": "string" },
          "lineNumber": { "type": "integer" },
          "columnNumber": { "type": "integer" },
          "packageName": { "type": "string" },
          "component": { "type": "string" }
        }
      },
      "ImpactAssessment": {
        "type": "object",
        "required": ["maintenanceCost", "developerExperience", "performanceImpact", "scalabilityRisk", "businessRisk"],
        "properties": {
          "maintenanceCost": { "type": "number", "description": "Estimated hours per week" },
          "developerExperience": {
            "type": "string",
            "enum": ["severe", "moderate", "minor"]
          },
          "performanceImpact": {
            "type": "string",
            "enum": ["critical", "significant", "minor"]
          },
          "scalabilityRisk": {
            "type": "string",
            "enum": ["high", "medium", "low"]
          },
          "businessRisk": {
            "type": "string",
            "enum": ["critical", "significant", "minor"]
          }
        }
      },
      "Solution": {
        "type": "object",
        "required": ["description", "steps"],
        "properties": {
          "description": { "type": "string" },
          "steps": {
            "type": "array",
            "items": { "type": "string" }
          },
          "estimatedEffort": { "type": "string" },
          "risks": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "AnalysisMetrics": {
        "type": "object",
        "required": ["totalLines", "duplicateLines", "duplicationPercentage", "packageCount", "dependencyCount", "typeSafetyScore"],
        "properties": {
          "totalLines": { "type": "integer" },
          "duplicateLines": { "type": "integer" },
          "duplicationPercentage": { "type": "number" },
          "packageCount": { "type": "integer" },
          "dependencyCount": { "type": "integer" },
          "circularDependencyCount": { "type": "integer" },
          "typeSafetyScore": { "type": "number" },
          "averageBuildTime": { "type": "number" },
          "bundleSize": { "type": "number" },
          "testCoverage": { "type": "number" },
          "technicalDebtHours": { "type": "number" }
        }
      },
      "Recommendation": {
        "type": "object",
        "required": ["id", "priority", "category", "title", "description", "implementationSteps", "estimatedEffort", "expectedBenefit"],
        "properties": {
          "id": { "type": "string" },
          "priority": {
            "type": "string",
            "enum": ["IMMEDIATE", "HIGH", "MEDIUM", "LOW"]
          },
          "category": {
            "type": "string",
            "enum": ["STRUCTURAL", "PERFORMANCE", "MAINTAINABILITY", "SECURITY", "TYPE_SAFETY"]
          },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "implementationSteps": {
            "type": "array",
            "items": { "type": "string" }
          },
          "estimatedEffort": { "type": "string" },
          "expectedBenefit": { "type": "string" },
          "dependencies": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "AnalysisProgress": {
        "type": "object",
        "required": ["currentStep", "completedSteps", "totalSteps", "percentageComplete"],
        "properties": {
          "currentStep": { "type": "string" },
          "completedSteps": { "type": "integer" },
          "totalSteps": { "type": "integer" },
          "percentageComplete": { "type": "number" },
          "estimatedTimeRemaining": { "type": "integer" },
          "currentFile": { "type": "string" }
        }
      },
      "DuplicationDetectionRequest": {
        "type": "object",
        "required": ["paths"],
        "properties": {
          "paths": {
            "type": "array",
            "items": { "type": "string" }
          },
          "options": {
            "type": "object",
            "properties": {
              "threshold": { "type": "number", "default": 0.8 },
              "ignoreLines": { "type": "array", "items": { "type": "string" } },
              "ignoreComments": { "type": "boolean", "default": true }
            }
          }
        }
      },
      "JscpdResult": {
        "type": "object",
        "required": ["totalFiles", "totalLines", "duplicateLines", "duplicationPercentage", "foundDuplication"],
        "properties": {
          "totalFiles": { "type": "integer" },
          "totalLines": { "type": "integer" },
          "duplicateLines": { "type": "integer" },
          "duplicationPercentage": { "type": "number" },
          "foundDuplication": { "type": "boolean" },
          "format": { "type": "string" },
          "files": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/JscpdFile" }
          },
          "options": { "type": "object" }
        }
      },
      "JscpdFile": {
        "type": "object",
        "required": ["path", "size", "lines"],
        "properties": {
          "path": { "type": "string" },
          "size": { "type": "integer" },
          "lines": { "type": "integer" },
          "duplication": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DuplicationBlock" }
          }
        }
      },
      "DuplicationBlock": {
        "type": "object",
        "required": ["locations", "lines", "content", "similarityIndex"],
        "properties": {
          "locations": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Location" }
          },
          "lines": { "type": "integer" },
          "content": { "type": "string" },
          "similarityIndex": { "type": "number" }
        }
      },
      "ArchitecturalValidationRequest": {
        "type": "object",
        "required": ["scope"],
        "properties": {
          "scope": { "$ref": "#/components/schemas/AnalysisScope" },
          "patterns": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["SOLID", "DRY", "SEPARATION_OF_CONCERNS", "PACKAGE_BOUNDARIES"]
            }
          }
        }
      },
      "ArchitecturalValidationResult": {
        "type": "object",
        "required": ["violations", "complianceScore"],
        "properties": {
          "violations": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ArchitecturalViolation" }
          },
          "complianceScore": { "type": "number" },
          "analyzedPatterns": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "ArchitecturalViolation": {
        "type": "object",
        "required": ["id", "type", "severity", "location", "description", "violatedPrinciple", "suggestedPattern"],
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string" },
          "severity": {
            "type": "string",
            "enum": ["CRITICAL", "HIGH", "MEDIUM", "LOW"]
          },
          "location": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Location" }
          },
          "description": { "type": "string" },
          "violatedPrinciple": {
            "type": "string",
            "enum": ["SINGLE_RESPONSIBILITY", "OPEN_CLOSED", "LISKOV_SUBSTITUTION", "INTERFACE_SEGREGATION", "DEPENDENCY_INVERSION", "DRY_PRINCIPLE", "SEPARATION_OF_CONCERNS"]
          },
          "suggestedPattern": { "type": "string" },
          "affectedComponents": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "PerformanceAnalysisRequest": {
        "type": "object",
        "required": ["scope"],
        "properties": {
          "scope": { "$ref": "#/components/schemas/AnalysisScope" },
          "metrics": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["BUILD_TIME", "BUNDLE_SIZE", "DEV_SERVER_PERFORMANCE", "RUNTIME_PERFORMANCE"]
            }
          }
        }
      },
      "PerformanceAnalysisResult": {
        "type": "object",
        "required": ["metrics", "issues", "optimizations"],
        "properties": {
          "metrics": { "$ref": "#/components/schemas/AnalysisMetrics" },
          "issues": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Finding" }
          },
          "optimizations": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Recommendation" }
          }
        }
      },
      "AnalysisReport": {
        "type": "object",
        "required": ["executiveSummary", "detailedFindings", "metricsDashboard", "recommendations", "implementationRoadmap"],
        "properties": {
          "executiveSummary": { "$ref": "#/components/schemas/ExecutiveSummary" },
          "detailedFindings": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Finding" }
          },
          "metricsDashboard": { "$ref": "#/components/schemas/AnalysisMetrics" },
          "recommendations": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Recommendation" }
          },
          "implementationRoadmap": { "$ref": "#/components/schemas/ImplementationRoadmap" },
          "appendix": { "type": "object" }
        }
      },
      "ExecutiveSummary": {
        "type": "object",
        "required": ["overallHealthScore", "criticalIssuesCount", "highPriorityIssuesCount", "estimatedTechnicalDebt", "keyRecommendations", "nextSteps"],
        "properties": {
          "overallHealthScore": { "type": "number", "minimum": 0, "maximum": 100 },
          "criticalIssuesCount": { "type": "integer" },
          "highPriorityIssuesCount": { "type": "integer" },
          "estimatedTechnicalDebt": { "type": "number", "description": "Estimated hours to resolve" },
          "businessImpact": { "type": "string" },
          "keyRecommendations": {
            "type": "array",
            "items": { "type": "string" }
          },
          "nextSteps": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "ImplementationRoadmap": {
        "type": "object",
        "required": ["phases", "estimatedTimeline", "requiredResources", "risks", "successCriteria"],
        "properties": {
          "phases": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/RoadmapPhase" }
          },
          "estimatedTimeline": { "type": "string" },
          "requiredResources": {
            "type": "array",
            "items": { "type": "string" }
          },
          "risks": {
            "type": "array",
            "items": { "type": "string" }
          },
          "successCriteria": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "RoadmapPhase": {
        "type": "object",
        "required": ["name", "duration", "objectives", "recommendations", "deliverables"],
        "properties": {
          "name": { "type": "string" },
          "duration": { "type": "string" },
          "objectives": {
            "type": "array",
            "items": { "type": "string" }
          },
          "recommendations": {
            "type": "array",
            "items": { "type": "string" }
          },
          "dependencies": {
            "type": "array",
            "items": { "type": "string" }
          },
          "deliverables": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": { "type": "string" },
          "message": { "type": "string" },
          "details": { "type": "object" }
        }
      }
    }
  }
}