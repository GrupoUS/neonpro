{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "✨ Format Code",
      "type": "shell",
      "command": "pnpm",
      "args": ["format"],
      "group": "build",
      "detail": "Format all code using dprint (respects dprint.json config and ignores)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🔍 Check Format", 
      "type": "shell",
      "command": "pnpm",
      "args": ["format:check"],
      "group": "build",
      "detail": "Check code formatting without making changes (dprint check)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🔍 Lint Code",
      "type": "shell",
      "command": "pnpm", 
      "args": ["lint"],
      "group": "build",
      "detail": "Run oxlint to check for linting issues (respects .oxlintrc.json config and ignores)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🔧 Fix Lint Issues",
      "type": "shell",
      "command": "pnpm",
      "args": ["lint:fix"],
      "group": "build", 
      "detail": "Automatically fix linting issues with oxlint",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "📝 Type Check",
      "type": "shell",
      "command": "pnpm",
      "args": ["type-check"],
      "group": "build",
      "detail": "Run TypeScript type checking (tsc --noEmit)",
      "presentation": {
        "echo": true,
        "reveal": "always", 
        "panel": "shared"
      }
    },
    {
      "label": "✅ Full Code Check",
      "type": "shell",
      "command": "pnpm",
      "args": ["ci:check"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "detail": "Run complete code validation (format check + lint + type check)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🔧 Fix All Issues",
      "type": "shell",
      "command": "pnpm",
      "args": ["ci:fix"],
      "group": "build",
      "detail": "Automatically fix all issues (format + lint fix + type check)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🧪 Run Unit Tests",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:unit"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "detail": "Run unit tests using Vitest (respects vitest.config.ts)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🧪 Watch Unit Tests",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:unit:watch"],
      "group": "test",
      "detail": "Watch and run unit tests using Vitest",
      "isBackground": true,
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "🧪 Unit Tests UI",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:unit:ui"],
      "group": "test",
      "detail": "Run unit tests with Vitest UI interface",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "📊 Test Coverage",
      "type": "shell",
      "command": "pnpm", 
      "args": ["test:unit:coverage"],
      "group": "test",
      "detail": "Run unit tests with coverage report",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🧪 Integration Tests",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:integration"],
      "group": "test",
      "detail": "Run integration tests using Vitest",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🎭 E2E Tests",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:e2e"],
      "group": "test",
      "detail": "Run all E2E tests using Playwright (respects playwright.config.ts)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🎭 E2E Tests (UI)",
      "type": "shell", 
      "command": "pnpm",
      "args": ["test:e2e:ui"],
      "group": "test",
      "detail": "Run E2E tests with Playwright UI interface",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🎭 E2E Tests (Headed)",
      "type": "shell", 
      "command": "pnpm",
      "args": ["test:e2e:headed"],
      "group": "test",
      "detail": "Run E2E tests in headed mode (visible browser)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🎭 E2E Tests (Debug)",
      "type": "shell",
      "command": "pnpm", 
      "args": ["test:e2e:debug"],
      "group": "test",
      "detail": "Run E2E tests in debug mode (interactive debugging)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🧪 Safe Test Suite",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:safe"],
      "group": "test",
      "detail": "Run safe test suite (CI check + safe unit tests)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "🧪 All Tests",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:all"],
      "group": "test",
      "detail": "Run all tests (unit + integration + E2E)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      }
    }
  ]
}