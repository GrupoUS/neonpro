{
  // Oxlint Configuration for NeonPro Healthcare Platform
  //
  // Ultra-fast linter with healthcare compliance rules
  // 50x faster than ESLint with zero-config defaults
  // Compatible with ESLint v8 format
  "$schema": "https://raw.githubusercontent.com/oxc-project/oxc/main/npm/oxlint/configuration_schema.json",
  "plugins": [
    "unicorn",
    "typescript",
    "react",
    "jsx-a11y",
    "import",
    "promise",
    "jsdoc",
    "oxc"
  ],
  "rules": {
    // Type safety and code quality
    "no-unused-vars": "error",
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "no-debugger": "error",
    "prefer-const": "error",
    "no-var": "error",
    "object-shorthand": "error",
    // TypeScript compliance for healthcare applications
    "typescript/prefer-optional-chain": "error",
    "typescript/prefer-nullish-coalescing": "error",
    "typescript/no-unsafe-assignment": "warn",
    "typescript/no-unsafe-member-access": "warn",
    "typescript/no-unsafe-call": "warn",
    "typescript/no-unsafe-return": "warn",
    // React best practices for healthcare UI
    "react/jsx-no-target-blank": "error",
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "props": "never",
        "children": "never"
      }
    ],
    "react/no-unescaped-entities": "error",
    "react/no-array-index-key": "error",
    "react/no-children-prop": "error",
    "react/prop-types": "off", // Using TypeScript instead
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    // Accessibility rules for healthcare compliance (WCAG 2.1 AA+)
    "jsx-a11y/alt-text": "error",
    "jsx-a11y/anchor-is-valid": "error",
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/aria-proptypes": "error",
    "jsx-a11y/aria-unsupported-elements": "error",
    "jsx-a11y/role-has-required-aria-props": "error",
    "jsx-a11y/role-supports-aria-props": "error",
    // Import organization and dependency management
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always"
      }
    ],
    "import/no-unresolved": "off",
    "import/no-extraneous-dependencies": "off",
    // Promise handling for async operations
    "promise/prefer-await-to-then": "error",
    "promise/no-return-wrap": "error",
    "promise/param-names": "error",
    // ES6+ features and modern JavaScript
    // JSDoc for healthcare API documentation
    "jsdoc/require-jsdoc": [
      "warn",
      {
        "contexts": [
          "FunctionExpression",
          "ClassDeclaration"
        ],
        "require": {
          "FunctionExpression": true,
          "ClassDeclaration": true
        }
      }
    ]
  },
  "overrides": [
    {
      "files": [
        "**/*.test.{ts,tsx}",
        "**/*.spec.{ts,tsx}"
      ],
      "rules": {
        "no-console": "off",
        "no-unused-vars": "off"
      }
    },
    {
      "files": [
        "**/*.config.{js,ts}"
      ],
      "rules": {
        "no-console": "off",
        "import/no-extraneous-dependencies": "off"
      }
    },
    {
      "files": [
        "src/compliance/**/*.{ts,tsx}"
      ],
      "rules": {
        "no-console": "error",
        "typescript/no-unsafe-assignment": "error",
        "typescript/no-unsafe-member-access": "error",
        "typescript/no-unsafe-call": "error",
        "typescript/no-unsafe-return": "error",
        "typescript/prefer-optional-chain": "error",
        "typescript/prefer-nullish-coalescing": "error"
      }
    },
    {
      "files": [
        "src/agents/**/*.{ts,tsx}"
      ],
      "rules": {
        "jsdoc/require-jsdoc": "error"
      }
    }
  ],
  "ignorePatterns": [
    "node_modules/**",
    "dist/**",
    "build/**",
    "coverage/**",
    "test-results/**",
    "*.min.js",
    "playwright-report/**",
    ".next/**",
    ".turbo/**",
    "tools/**/node_modules/**",
    "packages/**/dist/**",
    "apps/**/dist/**"
  ],
  "env": {
    "browser": true,
    "node": true,
    "es2022": true
  }
}
