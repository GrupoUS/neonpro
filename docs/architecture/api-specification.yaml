openapi: 3.0.3
info:
  title: NeonPro Aesthetic Health AI Services API
  description: |
    API specification for NeonPro Aesthetic Health AI Services platform.

    This API provides AI-powered aesthetic health services including:
    - Universal AI Chat for client and professional interactions
    - No-show prediction engine
    - Basic appointment management
    - Feature management and system monitoring

    For integration examples and environment setup, see the Developer Guide.

  version: 1.0.0
  contact:
    name: NeonPro API Support
    email: api-support@neonpro.app
    url: https://docs.neonpro.app
  license:
    name: Proprietary
    url: https://neonpro.app/license

servers:
  - url: https://api.neonpro.app
    description: Production server
  - url: https://staging-api.neonpro.app
    description: Staging server
  - url: http://localhost:3000
    description: Local development server

security:
  - bearerAuth: []

paths:
  # Universal AI Chat Service
  /api/ai/chat/session:
    post:
      tags:
        - AI Chat
      summary: Create new chat session
      description: Creates a new AI chat session for client interaction with LGPD compliance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - language
                - consent
              properties:
                user_id:
                  type: string
                  description: Unique identifier for the client/user
                  example: "client-12345"
                language:
                  type: string
                  enum: [pt-BR, en-US, es-ES]
                  description: Preferred language for the conversation
                  default: "pt-BR"
                context:
                  type: object
                  properties:
                    clinic_id:
                      type: string
                      example: "clinic-001"
                    specialty:
                      type: string
                      example: "dermatologia_estetica"
                consent:
                  $ref: "#/components/schemas/ConsentData"
      responses:
        "200":
          description: Chat session created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatSessionResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /api/ai/chat/message:
    post:
      tags:
        - AI Chat
      summary: Send message in chat session
      description: Sends a message to an active AI chat session and receives an AI response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - session_id
                - message
              properties:
                session_id:
                  type: string
                  example: "session-abc123xyz"
                message:
                  type: string
                  description: Client message (max 1000 characters)
                  maxLength: 1000
                  example: "Quais são os cuidados pós-tratamento para botox?"
      responses:
        "200":
          description: AI response generated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessageResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/SessionNotFound"

  /api/ai/chat/session/{session_id}:
    get:
      tags:
        - AI Chat
      summary: Get chat session details
      description: Retrieves details of an existing chat session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
          example: "session-abc123xyz"
      responses:
        "200":
          description: Session details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatSessionDetails"
        "404":
          $ref: "#/components/responses/SessionNotFound"

    delete:
      tags:
        - AI Chat
      summary: End chat session
      description: Ends an active chat session and clears sensitive data
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
          example: "session-abc123xyz"
      responses:
        "200":
          description: Session ended successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Session ended and data cleared"

  # No-Show Prediction Service
  /api/ai/predictions/no-show:
    post:
      tags:
        - Predictions
      summary: Predict appointment no-show risk
      description: Uses ML to predict the likelihood of a client not showing up for an appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - appointment_id
                - client_data
                - appointment_data
              properties:
                appointment_id:
                  type: string
                  example: "appt-789xyz"
                client_data:
                  type: object
                  properties:
                    client_id:
                      type: string
                      example: "client-12345"
                    previous_no_shows:
                      type: integer
                      minimum: 0
                      example: 1
                    total_appointments:
                      type: integer
                      minimum: 1
                      example: 15
                appointment_data:
                  type: object
                  properties:
                    scheduled_date:
                      type: string
                      format: date-time
                      example: "2024-02-15T14:30:00Z"
                    appointment_type:
                      type: string
                      example: "botox_consultation"
                    duration_minutes:
                      type: integer
                      example: 60
                    reminders_sent:
                      type: integer
                      example: 2
                    confirmation_received:
                      type: boolean
                      example: true
      responses:
        "200":
          description: No-show risk prediction generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoShowPredictionResponse"
        "400":
          $ref: "#/components/responses/BadRequest"

  # Basic Appointment Management
  /api/appointments:
    get:
      tags:
        - Appointments
      summary: List appointments
      description: Retrieve appointments for a clinic or professional
      parameters:
        - name: clinic_id
          in: query
          required: false
          schema:
            type: string
          example: "clinic-001"
        - name: professional_id
          in: query
          required: false
          schema:
            type: string
          example: "prof-123"
        - name: date_from
          in: query
          required: false
          schema:
            type: string
            format: date
          example: "2024-02-01"
        - name: date_to
          in: query
          required: false
          schema:
            type: string
            format: date
          example: "2024-02-29"
      responses:
        "200":
          description: Appointments retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Appointment"

    post:
      tags:
        - Appointments
      summary: Create new appointment
      description: Schedule a new appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAppointmentRequest"
      responses:
        "201":
          description: Appointment created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"

  /api/appointments/{appointment_id}:
    get:
      tags:
        - Appointments
      summary: Get appointment details
      parameters:
        - name: appointment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Appointment details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"

    patch:
      tags:
        - Appointments
      summary: Update appointment
      parameters:
        - name: appointment_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAppointmentRequest"
      responses:
        "200":
          description: Appointment updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"

  # Feature Management
  /api/admin/features:
    get:
      tags:
        - Feature Management
      summary: List feature flags
      description: Get current status of feature flags for the clinic
      parameters:
        - name: clinic_id
          in: query
          required: false
          schema:
            type: string
          example: "clinic-001"
      responses:
        "200":
          description: Feature flags retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/FeatureFlag"

    patch:
      tags:
        - Feature Management
      summary: Update feature flag
      description: Enable/disable a specific feature flag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - flag_name
                - enabled
              properties:
                flag_name:
                  type: string
                  example: "ai_chat"
                enabled:
                  type: boolean
                  example: true
      responses:
        "200":
          description: Feature flag updated successfully

  # System Monitoring
  /api/health:
    get:
      tags:
        - System
      summary: Health check
      description: Returns the health status of the system
      responses:
        "200":
          description: Service health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy, degraded, unhealthy]
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-01-15T10:30:00Z"
                  services:
                    type: object
                    properties:
                      ai_chat:
                        type: object
                        properties:
                          status:
                            type: string
                            example: "healthy"
                          response_time_ms:
                            type: integer
                            example: 150
                      prediction_engine:
                        type: object
                        properties:
                          status:
                            type: string
                            example: "healthy"
                      database:
                        type: object
                        properties:
                          status:
                            type: string
                            example: "healthy"
                          connection_count:
                            type: integer
                            example: 8

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ConsentData:
      type: object
      required:
        - data_processing_consent
        - ai_interaction_consent
      properties:
        data_processing_consent:
          type: boolean
          description: Required LGPD consent for data processing
        ai_interaction_consent:
          type: boolean
          description: Required consent for AI interaction
        consent_timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"

    ChatSessionResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            session_id:
              type: string
              example: "session-abc123xyz"
            status:
              type: string
              enum: [active, ended]
              example: "active"
            created_at:
              type: string
              format: date-time
              example: "2024-01-15T10:30:00Z"
            expires_at:
              type: string
              format: date-time
              example: "2024-01-15T12:30:00Z"

    ChatMessageResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            message_id:
              type: string
              example: "msg-xyz789"
            ai_response:
              type: string
              example: "Para cuidados pós-botox, evite exercícios intensos por 24h..."
            confidence_score:
              type: number
              minimum: 0
              maximum: 1
              example: 0.92
            processing_time_ms:
              type: integer
              example: 340

    ChatSessionDetails:
      type: object
      properties:
        session_id:
          type: string
          example: "session-abc123xyz"
        status:
          type: string
          enum: [active, ended]
        created_at:
          type: string
          format: date-time
        message_count:
          type: integer
          example: 5
        last_activity:
          type: string
          format: date-time

    NoShowPredictionResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            prediction_id:
              type: string
              example: "pred-abc123"
            risk_score:
              type: integer
              minimum: 0
              maximum: 100
              description: No-show risk percentage
              example: 25
            risk_level:
              type: string
              enum: [low, medium, high]
              example: "low"
            confidence:
              type: number
              minimum: 0
              maximum: 1
              example: 0.84
            recommended_actions:
              type: array
              items:
                type: string
              example: ["send_reminder_24h", "confirm_via_whatsapp"]

    Appointment:
      type: object
      properties:
        id:
          type: string
          example: "appt-123"
        client_id:
          type: string
          example: "client-456"
        professional_id:
          type: string
          example: "prof-789"
        clinic_id:
          type: string
          example: "clinic-001"
        scheduled_date:
          type: string
          format: date-time
          example: "2024-02-15T14:30:00Z"
        duration_minutes:
          type: integer
          example: 60
        appointment_type:
          type: string
          example: "botox_consultation"
        status:
          type: string
          enum: [scheduled, confirmed, completed, cancelled, no_show]
          example: "scheduled"
        notes:
          type: string
          example: "First consultation"

    CreateAppointmentRequest:
      type: object
      required:
        - client_id
        - professional_id
        - clinic_id
        - scheduled_date
        - appointment_type
      properties:
        client_id:
          type: string
          example: "client-456"
        professional_id:
          type: string
          example: "prof-789"
        clinic_id:
          type: string
          example: "clinic-001"
        scheduled_date:
          type: string
          format: date-time
          example: "2024-02-15T14:30:00Z"
        duration_minutes:
          type: integer
          default: 60
          example: 60
        appointment_type:
          type: string
          example: "botox_consultation"
        notes:
          type: string
          example: "First consultation"

    UpdateAppointmentRequest:
      type: object
      properties:
        scheduled_date:
          type: string
          format: date-time
          example: "2024-02-15T15:30:00Z"
        duration_minutes:
          type: integer
          example: 90
        status:
          type: string
          enum: [scheduled, confirmed, completed, cancelled, no_show]
          example: "confirmed"
        notes:
          type: string
          example: "Updated consultation notes"

    FeatureFlag:
      type: object
      properties:
        flag_name:
          type: string
          example: "ai_chat"
        enabled:
          type: boolean
          example: true
        description:
          type: string
          example: "AI-powered chat system"

    ApiError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: "INVALID_REQUEST"
            message:
              type: string
              example: "The request is invalid or malformed"
            details:
              type: string
              example: "Missing required field: user_id"
        timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"

  responses:
    BadRequest:
      description: Bad request - invalid input parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"

    Unauthorized:
      description: Unauthorized - invalid or missing authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"

    SessionNotFound:
      description: Chat session not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"
