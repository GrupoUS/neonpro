openapi: 3.0.3
info:
  title: NeonPro Healthcare AI Services API
  description: |
    Comprehensive API documentation for NeonPro Healthcare AI Services platform.
    
    This API provides advanced AI-powered healthcare services including:
    - Universal AI Chat for patient interactions
    - Compliance automation for LGPD, ANVISA, and CFM regulations
    - No-show prediction and appointment optimization
    - Real-time monitoring and feature management
    
    All services are designed with healthcare compliance in mind and include:
    - LGPD (Lei Geral de Proteção de Dados) compliance
    - ANVISA (Agência Nacional de Vigilância Sanitária) regulations
    - CFM (Conselho Federal de Medicina) guidelines
    - Comprehensive audit trails and data protection measures
    
    ## Authentication
    All endpoints require Bearer token authentication using JWT tokens.
    
    ## Rate Limiting
    API requests are rate limited to ensure system stability:
    - Standard endpoints: 1000 requests per minute
    - AI processing endpoints: 100 requests per minute
    - Compliance endpoints: 500 requests per minute
    
    ## Healthcare Data Protection
    This API handles sensitive healthcare data and implements:
    - End-to-end encryption for all data transmission
    - Audit logging for all operations
    - Data minimization principles
    - Patient consent tracking
    - Automatic data anonymization where applicable
    
  version: 2.0.0
  contact:
    name: NeonPro API Support
    email: api-support@neonpro.healthcare
    url: https://docs.neonpro.healthcare
  license:
    name: Proprietary
    url: https://neonpro.healthcare/license

servers:
  - url: https://api.neonpro.healthcare
    description: Production server
  - url: https://staging-api.neonpro.healthcare
    description: Staging server
  - url: http://localhost:3000
    description: Local development server

paths:
  # Universal AI Chat Service
  /api/ai/universal-chat/session:
    post:
      tags:
        - Universal AI Chat
      summary: Create new chat session
      description: |
        Creates a new AI chat session for patient interaction.
        
        **Healthcare Compliance:**
        - Requires valid patient consent
        - Automatically applies LGPD data protection
        - Generates audit trail entry
        - Implements healthcare-specific content filtering
        
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - language
              properties:
                user_id:
                  type: string
                  description: Unique identifier for the patient/user
                  example: "patient-12345"
                language:
                  type: string
                  enum: [pt-BR, en-US, es-ES]
                  description: Preferred language for the conversation
                  example: "pt-BR"
                context:
                  type: object
                  description: Additional context for the conversation
                  properties:
                    specialty:
                      type: string
                      example: "cardiology"
                    clinic_id:
                      type: string
                      example: "clinic-001"
                    patient_profile:
                      type: object
                      properties:
                        age_range:
                          type: string
                          example: "30-40"
                        medical_history_summary:
                          type: string
                          example: "Previous cardiac episodes"
                consent:
                  type: object
                  required:
                    - data_processing_consent
                    - ai_interaction_consent
                  properties:
                    data_processing_consent:
                      type: boolean
                      description: Patient consent for data processing (LGPD requirement)
                    ai_interaction_consent:
                      type: boolean
                      description: Patient consent for AI interaction
                    anonymized_analytics_consent:
                      type: boolean
                      description: Optional consent for anonymized analytics
      responses:
        '200':
          description: Chat session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      session_id:
                        type: string
                        example: "session-abc123xyz"
                      status:
                        type: string
                        enum: [active, paused, ended]
                        example: "active"
                      created_at:
                        type: string
                        format: date-time
                        example: "2024-01-15T10:30:00Z"
                      expires_at:
                        type: string
                        format: date-time
                        example: "2024-01-15T12:30:00Z"
                      compliance_status:
                        type: object
                        properties:
                          lgpd_compliant:
                            type: boolean
                            example: true
                          consent_verified:
                            type: boolean
                            example: true
                          audit_trail_id:
                            type: string
                            example: "audit-789"
                  metadata:
                    $ref: '#/components/schemas/ApiMetadata'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'

  /api/ai/universal-chat/message:
    post:
      tags:
        - Universal AI Chat
      summary: Send message in chat session
      description: |
        Sends a message to an active AI chat session and receives an AI response.
        
        **Healthcare Features:**
        - Automatic symptom detection and severity assessment
        - Emergency situation identification with escalation protocols
        - Medical terminology processing in Portuguese
        - Integration with patient medical history (when available)
        - Real-time compliance monitoring
        
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - session_id
                - message
              properties:
                session_id:
                  type: string
                  description: Active chat session ID
                  example: "session-abc123xyz"
                message:
                  type: string
                  description: Patient's message
                  example: "Estou sentindo dores no peito há 2 dias"
                  maxLength: 2000
                context:
                  type: object
                  description: Additional context for message processing
                  properties:
                    urgency_level:
                      type: string
                      enum: [low, medium, high, emergency]
                      example: "medium"
                    symptoms:
                      type: array
                      items:
                        type: string
                      example: ["chest_pain", "shortness_of_breath"]
                    duration:
                      type: string
                      example: "2 days"
                message_metadata:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
                    client_ip:
                      type: string
                      description: Client IP for audit purposes
      responses:
        '200':
          description: AI response generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      message_id:
                        type: string
                        example: "msg-456def"
                      ai_response:
                        type: string
                        example: "Compreendo sua preocupação com a dor no peito. Baseado nos sintomas descritos, recomendo que procure atendimento médico presencial para uma avaliação adequada..."
                      analysis:
                        type: object
                        properties:
                          urgency_detected:
                            type: string
                            enum: [low, medium, high, emergency]
                            example: "high"
                          symptoms_identified:
                            type: array
                            items:
                              type: string
                            example: ["chest_pain"]
                          medical_recommendations:
                            type: array
                            items:
                              type: string
                            example: ["seek_immediate_medical_attention", "avoid_physical_exertion"]
                          emergency_escalation:
                            type: boolean
                            example: false
                      compliance_check:
                        type: object
                        properties:
                          content_approved:
                            type: boolean
                            example: true
                          medical_advice_disclaimer:
                            type: boolean
                            example: true
                          data_privacy_maintained:
                            type: boolean
                            example: true
                  metadata:
                    $ref: '#/components/schemas/ApiMetadata'

  # Feature Flags Service
  /api/ai/feature-flags/evaluate:
    post:
      tags:
        - Feature Management
      summary: Evaluate feature flag
      description: |
        Evaluates whether a feature flag should be enabled for a specific context.
        
        **Use Cases:**
        - A/B testing for AI model variations
        - Gradual rollout of new healthcare features
        - Emergency feature disabling
        - User-specific feature access control
        
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - flag_name
                - context
              properties:
                flag_name:
                  type: string
                  description: Name of the feature flag to evaluate
                  example: "ai_chat_service_v2"
                context:
                  type: object
                  description: Context for flag evaluation
                  required:
                    - user_id
                  properties:
                    user_id:
                      type: string
                      example: "user-789"
                    user_role:
                      type: string
                      enum: [patient, healthcare_professional, admin]
                      example: "patient"
                    clinic_id:
                      type: string
                      example: "clinic-001"
                    experiment_group:
                      type: string
                      example: "control_group"
                default_enabled:
                  type: boolean
                  description: Default value if flag cannot be evaluated
                  default: false
      responses:
        '200':
          description: Feature flag evaluated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                        example: true
                      reason:
                        type: string
                        example: "User in rollout percentage"
                      variant:
                        type: string
                        example: "variant_a"
                      experiment_info:
                        type: object
                        properties:
                          experiment_id:
                            type: string
                          group:
                            type: string
                          allocation_id:
                            type: string

  # No-Show Prediction Service
  /api/ai/no-show-prediction/predict:
    post:
      tags:
        - Predictive Analytics
      summary: Predict appointment no-show probability
      description: |
        Analyzes patient and appointment data to predict the likelihood of a no-show.
        
        **Healthcare Applications:**
        - Optimize appointment scheduling
        - Implement proactive patient engagement
        - Reduce healthcare resource waste
        - Improve patient care continuity
        
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - patient_id
                - appointment_details
              properties:
                patient_id:
                  type: string
                  example: "patient-456"
                appointment_details:
                  type: object
                  required:
                    - appointment_datetime
                    - appointment_type
                    - healthcare_provider_id
                  properties:
                    appointment_datetime:
                      type: string
                      format: date-time
                      example: "2024-01-20T14:30:00Z"
                    appointment_type:
                      type: string
                      enum: [consultation, follow_up, procedure, emergency]
                      example: "consultation"
                    healthcare_provider_id:
                      type: string
                      example: "provider-123"
                    specialty:
                      type: string
                      example: "cardiology"
                    estimated_duration_minutes:
                      type: integer
                      example: 30
                patient_history:
                  type: object
                  description: Historical patient data for prediction
                  properties:
                    total_appointments:
                      type: integer
                      example: 10
                    no_shows:
                      type: integer
                      example: 2
                    cancellations:
                      type: integer
                      example: 1
                    last_appointment_date:
                      type: string
                      format: date
                      example: "2024-01-10"
                    days_since_last_visit:
                      type: integer
                      example: 10
                external_factors:
                  type: object
                  properties:
                    weather_forecast:
                      type: string
                      example: "rainy"
                    day_of_week:
                      type: string
                      example: "monday"
                    time_of_day:
                      type: string
                      example: "afternoon"
                    holiday_proximity:
                      type: boolean
                      example: false
      responses:
        '200':
          description: No-show prediction completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      no_show_probability:
                        type: number
                        format: float
                        minimum: 0
                        maximum: 1
                        example: 0.23
                        description: Probability of no-show (0.0 = very likely to attend, 1.0 = very likely to no-show)
                      risk_category:
                        type: string
                        enum: [low, medium, high]
                        example: "low"
                      confidence_score:
                        type: number
                        format: float
                        minimum: 0
                        maximum: 1
                        example: 0.87
                      contributing_factors:
                        type: array
                        items:
                          type: object
                          properties:
                            factor:
                              type: string
                              example: "appointment_history"
                            impact:
                              type: number
                              example: -0.15
                            description:
                              type: string
                              example: "Patient has good attendance record"
                      recommendations:
                        type: array
                        items:
                          type: object
                          properties:
                            intervention_type:
                              type: string
                              enum: [reminder_call, sms_reminder, email_reminder, no_action]
                              example: "sms_reminder"
                            timing:
                              type: string
                              example: "24_hours_before"
                            priority:
                              type: string
                              enum: [low, medium, high]
                              example: "medium"

  # Appointment Optimization Service
  /api/ai/appointment-optimization/optimize:
    post:
      tags:
        - Appointment Management
      summary: Optimize appointment scheduling
      description: |
        Uses AI to optimize appointment scheduling for maximum efficiency and patient satisfaction.
        
        **Optimization Goals:**
        - Maximize healthcare provider utilization
        - Minimize patient wait times
        - Balance appointment types throughout the day
        - Consider no-show predictions
        - Respect patient preferences and constraints
        
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - requests
                - optimization_goals
              properties:
                requests:
                  type: array
                  items:
                    type: object
                    required:
                      - patient_id
                      - appointment_type
                    properties:
                      patient_id:
                        type: string
                        example: "patient-789"
                      appointment_type:
                        type: string
                        enum: [consultation, follow_up, procedure, emergency]
                        example: "consultation"
                      preferred_dates:
                        type: array
                        items:
                          type: string
                          format: date
                        example: ["2024-01-22", "2024-01-23"]
                      preferred_times:
                        type: array
                        items:
                          type: string
                          format: time
                        example: ["09:00", "14:00"]
                      duration_minutes:
                        type: integer
                        example: 30
                      priority:
                        type: string
                        enum: [low, medium, high, urgent]
                        example: "medium"
                      healthcare_provider_preference:
                        type: string
                        example: "provider-456"
                optimization_goals:
                  type: object
                  description: Weights for optimization objectives (must sum to 1.0)
                  required:
                    - maximize_utilization
                    - minimize_wait_times
                    - maximize_satisfaction
                  properties:
                    maximize_utilization:
                      type: number
                      format: float
                      minimum: 0
                      maximum: 1
                      example: 0.4
                    minimize_wait_times:
                      type: number
                      format: float
                      minimum: 0
                      maximum: 1
                      example: 0.3
                    maximize_satisfaction:
                      type: number
                      format: float
                      minimum: 0
                      maximum: 1
                      example: 0.3
                constraints:
                  type: object
                  properties:
                    available_providers:
                      type: array
                      items:
                        type: string
                      example: ["provider-123", "provider-456"]
                    business_hours:
                      type: object
                      properties:
                        start_time:
                          type: string
                          format: time
                          example: "08:00"
                        end_time:
                          type: string
                          format: time
                          example: "18:00"
                    break_times:
                      type: array
                      items:
                        type: object
                        properties:
                          start_time:
                            type: string
                            format: time
                          end_time:
                            type: string
                            format: time
      responses:
        '200':
          description: Appointment optimization completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      optimized_appointments:
                        type: array
                        items:
                          type: object
                          properties:
                            patient_id:
                              type: string
                              example: "patient-789"
                            appointment_id:
                              type: string
                              example: "appt-abc123"
                            scheduled_datetime:
                              type: string
                              format: date-time
                              example: "2024-01-22T09:30:00Z"
                            healthcare_provider_id:
                              type: string
                              example: "provider-123"
                            optimization_score:
                              type: number
                              format: float
                              example: 0.85
                            patient_profile:
                              type: object
                              properties:
                                no_show_risk:
                                  type: number
                                  example: 0.15
                                preference_match:
                                  type: number
                                  example: 0.90
                      optimization_summary:
                        type: object
                        properties:
                          total_appointments_scheduled:
                            type: integer
                            example: 15
                          utilization_rate:
                            type: number
                            format: float
                            example: 0.92
                          average_wait_time_minutes:
                            type: number
                            example: 12.5
                          satisfaction_score:
                            type: number
                            format: float
                            example: 0.88

  # Compliance Automation Service
  /api/ai/compliance/validate-lgpd:
    post:
      tags:
        - Compliance & Regulatory
      summary: Validate LGPD compliance
      description: |
        Validates operations against LGPD (Lei Geral de Proteção de Dados) requirements.
        
        **LGPD Validation Areas:**
        - Data processing consent verification
        - Data minimization compliance
        - Purpose limitation adherence
        - Data subject rights implementation
        - Cross-border data transfer compliance
        
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - service_name
                - operation_data
                - validation_context
              properties:
                service_name:
                  type: string
                  example: "universal-chat"
                operation_data:
                  type: object
                  description: Data being processed that needs validation
                  properties:
                    data_types:
                      type: array
                      items:
                        type: string
                      example: ["personal_identification", "health_data", "conversation_history"]
                    processing_purpose:
                      type: string
                      example: "healthcare_consultation_assistance"
                    data_subjects:
                      type: array
                      items:
                        type: object
                        properties:
                          subject_id:
                            type: string
                          subject_type:
                            type: string
                            enum: [patient, healthcare_professional, legal_representative]
                validation_context:
                  type: object
                  required:
                    - user_consent_verified
                    - data_minimization_applied
                    - purpose_limitation_respected
                  properties:
                    user_consent_verified:
                      type: boolean
                      example: true
                    data_minimization_applied:
                      type: boolean
                      example: true
                    purpose_limitation_respected:
                      type: boolean
                      example: true
                    retention_period_defined:
                      type: boolean
                      example: true
                    cross_border_transfer:
                      type: boolean
                      example: false
      responses:
        '200':
          description: LGPD compliance validation completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      compliance_status:
                        type: object
                        properties:
                          lgpd_compliant:
                            type: boolean
                            example: true
                          compliance_score:
                            type: number
                            format: float
                            minimum: 0
                            maximum: 1
                            example: 0.95
                          validation_timestamp:
                            type: string
                            format: date-time
                      compliance_details:
                        type: object
                        properties:
                          consent_validation:
                            type: object
                            properties:
                              status:
                                type: string
                                enum: [compliant, non_compliant, requires_review]
                                example: "compliant"
                              details:
                                type: string
                          data_minimization:
                            type: object
                            properties:
                              status:
                                type: string
                                enum: [compliant, non_compliant, requires_review]
                                example: "compliant"
                              unnecessary_data_detected:
                                type: boolean
                                example: false
                          purpose_limitation:
                            type: object
                            properties:
                              status:
                                type: string
                                enum: [compliant, non_compliant, requires_review]
                                example: "compliant"
                              purpose_drift_detected:
                                type: boolean
                                example: false
                      audit_trail:
                        type: object
                        properties:
                          audit_id:
                            type: string
                            example: "audit-lgpd-789"
                          validation_log:
                            type: array
                            items:
                              type: object
                              properties:
                                check_type:
                                  type: string
                                result:
                                  type: string
                                timestamp:
                                  type: string
                                  format: date-time
                      recommendations:
                        type: array
                        items:
                          type: object
                          properties:
                            recommendation_type:
                              type: string
                              enum: [immediate_action, review_required, monitoring_needed]
                            description:
                              type: string
                            priority:
                              type: string
                              enum: [low, medium, high, critical]

  # Monitoring Service
  /api/ai/monitoring/services-health:
    get:
      tags:
        - Monitoring & Health
      summary: Get all services health status
      description: |
        Retrieves the current health status of all AI services.
        
        **Health Metrics:**
        - Service availability and response times
        - Error rates and success rates
        - Resource utilization
        - Dependency health
        - Recent performance trends
        
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Services health retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        service:
                          type: string
                          example: "universal-chat"
                        healthy:
                          type: boolean
                          example: true
                        status:
                          type: string
                          enum: [healthy, degraded, unhealthy]
                          example: "healthy"
                        response_time_ms:
                          type: number
                          example: 245
                        last_updated:
                          type: string
                          format: date-time
                        error_rate:
                          type: number
                          format: float
                          example: 0.02
                        uptime_percentage:
                          type: number
                          format: float
                          example: 99.95
                        details:
                          type: object
                          properties:
                            database_connectivity:
                              type: string
                              enum: [ok, error]
                            cache_connectivity:
                              type: string
                              enum: [ok, error]
                            external_dependencies:
                              type: object
                  timestamp:
                    type: string
                    format: date-time

components:
  schemas:
    ApiMetadata:
      type: object
      properties:
        service_version:
          type: string
          example: "2.0.0"
        response_time_ms:
          type: integer
          example: 234
        request_id:
          type: string
          example: "req-abc123"
        cache_hit:
          type: boolean
          example: false
        compliance_validated:
          type: boolean
          example: true
        feature_flags_applied:
          type: array
          items:
            type: string
          example: ["ai_chat_service_v2", "enhanced_compliance_checks"]

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: "VALIDATION_ERROR"
            message:
              type: string
              example: "Invalid request parameters"
            details:
              type: object
            timestamp:
              type: string
              format: date-time
        request_id:
          type: string
          example: "req-abc123"

  responses:
    BadRequest:
      description: Bad request - invalid parameters or request format
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: "BAD_REQUEST"
              message: "Invalid request parameters"
              details:
                validation_errors:
                  - field: "user_id"
                    message: "User ID is required"
              timestamp: "2024-01-15T10:30:00Z"
            request_id: "req-abc123"

    Unauthorized:
      description: Unauthorized - invalid or missing authentication token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: "UNAUTHORIZED"
              message: "Invalid authentication token"
              timestamp: "2024-01-15T10:30:00Z"
            request_id: "req-abc123"

    RateLimitExceeded:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: "RATE_LIMIT_EXCEEDED"
              message: "Rate limit exceeded. Please try again later."
              details:
                limit: 100
                window: "1 minute"
                retry_after_seconds: 60
              timestamp: "2024-01-15T10:30:00Z"
            request_id: "req-abc123"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT Bearer token authentication. 
        
        **Token Requirements:**
        - Valid JWT token with healthcare service claims
        - Must include user role and permissions
        - Tokens expire after 24 hours for security
        - Refresh tokens available for long-term access
        
        **Example:** 
        ```
        Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        ```

tags:
  - name: Universal AI Chat
    description: |
      AI-powered chat service for patient interactions with healthcare professionals.
      Provides intelligent responses, symptom analysis, and emergency detection.
  - name: Feature Management
    description: |
      Feature flag service for controlling AI service rollouts and A/B testing.
      Enables safe deployment of new features and emergency feature disabling.
  - name: Predictive Analytics
    description: |
      ML-powered prediction services for healthcare optimization.
      Includes no-show prediction and appointment optimization.
  - name: Appointment Management
    description: |
      AI-driven appointment scheduling and optimization services.
      Maximizes efficiency while respecting patient preferences.
  - name: Compliance & Regulatory
    description: |
      Automated compliance validation for Brazilian healthcare regulations.
      Covers LGPD, ANVISA, and CFM compliance requirements.
  - name: Monitoring & Health
    description: |
      Real-time monitoring and health check services for all AI components.
      Provides system observability and performance metrics.