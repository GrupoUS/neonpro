openapi: 3.0.3
info:
  title: NeonPro AI Healthcare Platform API
  description: |
    **üè• AI-First Healthcare API** for aesthetic clinics with constitutional compliance
    
    ## üöÄ Key Features
    - **AI Streaming Chat** - Real-time healthcare assistance with Vercel AI SDK 5.0
    - **No-Show Prediction** - TensorFlow.js powered appointment optimization  
    - **LGPD/ANVISA/CFM Compliance** - Built-in regulatory automation
    - **Emergency Response** - Sub-1s critical alert system
    - **Type-Safe Validation** - Zod schemas with runtime validation
    
    ## üîí Security & Compliance
    - Multi-factor authentication for PHI access
    - End-to-end encryption (AES-256-GCM)
    - Immutable audit trails for all operations
    - LGPD consent automation with real-time validation
    
    ## ‚ö° Performance Targets
    - Emergency alerts: <1000ms
    - Patient record access: <500ms  
    - AI chat first token: <200ms
    - Compliance validation: <50ms
    
  version: "2.0.0"
  contact:
    name: NeonPro Healthcare API Support
    url: https://neonpro.app/api/support
    email: api@neonpro.app
  license:
    name: Proprietary Healthcare License
    url: https://neonpro.app/license

servers:
  - url: https://api.neonpro.app/v1
    description: Production API (Brazil)
  - url: https://api-staging.neonpro.app/v1
    description: Staging Environment
  - url: http://localhost:3004/api/v1
    description: Local Development

security:
  - BearerAuth: []
  - MFARequired: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Supabase JWT token with healthcare permissions
    
    MFARequired:
      type: apiKey
      in: header
      name: X-MFA-Token
      description: Multi-factor authentication token for PHI access
    
    EmergencyOverride:
      type: apiKey
      in: header  
      name: X-Emergency-Code
      description: Emergency access override for critical situations

  schemas:
    # ========================================
    # CORE HEALTHCARE ENTITIES
    # ========================================
    Patient:
      type: object
      required: [id, name, cpf, birth_date, lgpd_consent]
      properties:
        id:
          type: string
          format: uuid
          description: Unique patient identifier
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          minLength: 2
          maxLength: 100
          description: Patient full name (encrypted at rest)
          example: "Maria Silva Santos"
        cpf:
          type: string
          pattern: '^\d{11}$'
          description: Brazilian CPF (encrypted, validated)
          example: "12345678901"
        birth_date:
          type: string
          format: date
          description: Date of birth (ISO 8601)
          example: "1985-03-15"
        email:
          type: string
          format: email
          description: Contact email (encrypted)
          example: "maria.silva@email.com"
        phone:
          type: string
          pattern: '^\+?[1-9]\d{1,14}$'
          description: Contact phone (E.164 format)
          example: "+5511999999999"
        lgpd_consent:
          $ref: '#/components/schemas/LGPDConsent'
        emergency_contact:
          $ref: '#/components/schemas/EmergencyContact'
        medical_allergies:
          type: array
          items:
            type: string
          description: Known medical allergies
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    Professional:
      type: object
      required: [id, name, crm, role, specialization]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 2
          maxLength: 100
        crm:
          type: string
          pattern: '^[0-9]{4,6}-[A-Z]{2}$'
          description: Brazilian medical license (CRM)
          example: "123456-SP"
        role:
          type: string
          enum: [doctor, nurse, physiotherapist, psychologist, nutritionist, admin]
        specialization:
          type: string
          description: Medical specialization
          example: "Dermatologia Est√©tica"
        cfm_validated:
          type: boolean
          description: CFM (Federal Council of Medicine) validation status
        anvisa_authorized:
          type: boolean
          description: ANVISA authorization for procedures
        mfa_enabled:
          type: boolean
          description: Multi-factor authentication status

    Appointment:
      type: object
      required: [id, patient_id, professional_id, scheduled_at, type]
      properties:
        id:
          type: string
          format: uuid
        patient_id:
          type: string
          format: uuid
        professional_id:
          type: string
          format: uuid
        scheduled_at:
          type: string
          format: date-time
          description: Appointment date and time (ISO 8601)
        type:
          type: string
          enum: [consultation, procedure, follow_up, emergency]
        status:
          type: string
          enum: [scheduled, confirmed, in_progress, completed, cancelled, no_show]
          default: scheduled
        duration_minutes:
          type: integer
          minimum: 15
          maximum: 480
          default: 60
        notes:
          type: string
          maxLength: 2000
          description: Appointment notes (encrypted)
        no_show_prediction:
          $ref: '#/components/schemas/NoShowPrediction'
        compliance_validated:
          type: boolean
          description: ANVISA compliance validation status
        
    # ========================================
    # AI & MACHINE LEARNING
    # ========================================