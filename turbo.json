{
  "$schema": "https://turbo.build/schema.json",
  "globalDependencies": [
    "**/.env.*local",
    "**/package.json",
    "**/tsconfig.json",
    "dprint.json",
    "bunfig.toml",
    "bun.lock"
  ],

  "daemon": true,
  "ui": "tui",
  "globalEnv": [
    "NODE_ENV",
    "VERCEL_ENV",
    "CI",
    "TURBO_TOKEN",
    "TURBO_TEAM",
    "SUPABASE_URL",
    "SUPABASE_ANON_KEY",
    "SUPABASE_SERVICE_ROLE_KEY",
    "SUPABASE_PROJECT_ID",
    "DATABASE_URL",
    "DIRECT_URL",
    "LGPD_COMPLIANCE_KEY",
    "ANVISA_API_KEY",
    "CFM_VALIDATION_KEY",
    "NEXT_PUBLIC_SUPABASE_URL",
    "NEXT_PUBLIC_SUPABASE_ANON_KEY",
    "OPENAI_API_KEY",
    "ANTHROPIC_API_KEY"
  ],
  "remoteCache": {
    "signature": true
  },
  "globalPassThroughEnv": ["CI", "NODE_ENV", "VERCEL_ENV"],
  "tasks": {
    "build": {
      "dependsOn": ["^build"],
      "inputs": [
        "src/**/*.{ts,tsx,js,jsx}",
        "styles/**/*.{css,scss}",
        "public/**/*",
        "package.json",
        "tsconfig.json",
        "next.config.*",
        "tailwind.config.*",
        "bunfig.toml",
        "!*/**/__tests__/**",
        "!*/**/*.test.*",
        "!*/**/*.spec.*"
      ],
      "outputs": [".next/**", "!.next/cache/**", "dist/**", "build/**"],
      "persistent": false,
      "cache": true,
      "env": [
        "NODE_ENV",
        "NEXT_PUBLIC_SUPABASE_URL",
        "NEXT_PUBLIC_SUPABASE_ANON_KEY",
        "SUPABASE_SERVICE_ROLE_KEY"
      ],
      "outputLogs": "hash-only"
    },
    "@neonpro/types#build": {
      "inputs": ["src/**/*.{ts,js}", "package.json", "tsconfig.json"],
      "outputs": ["dist/**"]
    },
    "@neonpro/database#build": {
      "dependsOn": ["@neonpro/types#build"],
      "inputs": [
        "src/**/*.{ts,js}",
        "prisma/**/*.prisma",
        "supabase/**/*.sql",
        "types/**/*.ts",
        "package.json",
        "tsconfig.json"
      ],
      "outputs": ["dist/**", "prisma/generated/**"]
    },
    "@neonpro/shared#build": {
      "dependsOn": [
        "@neonpro/types#build",
        "@neonpro/database#build"
      ],
      "inputs": ["src/**/*.{ts,js}", "package.json", "tsconfig.json"],
      "outputs": ["dist/**"]
    },
    "@neonpro/utils#build": {
      "dependsOn": ["@neonpro/types#build"],
      "inputs": ["src/**/*.{ts,js}", "package.json", "tsconfig.json"],
      "outputs": ["dist/**"]
    },
    "@neonpro/security#build": {
      "dependsOn": [
        "@neonpro/types#build",
        "@neonpro/database#build"
      ],
      "inputs": ["src/**/*.{ts,js}", "package.json", "tsconfig.json"],
      "outputs": ["dist/**"]
    },
    "@neonpro/domain#build": {
      "dependsOn": [
        "@neonpro/types#build",
        "@neonpro/database#build",
        "@neonpro/shared#build"
      ],
      "inputs": ["src/**/*.{ts,js}", "package.json", "tsconfig.json"],
      "outputs": ["dist/**"]
    },
    "@neonpro/ui#build": {
      "dependsOn": ["@neonpro/types#build", "@neonpro/shared#build"],
      "inputs": [
        "src/**/*.{ts,tsx,js,jsx}",
        "styles/**/*.{css,scss}",
        "package.json",
        "tsconfig.json"
      ],
      "outputs": ["dist/**"]
    },
    "@neonpro/ai#build": {
      "dependsOn": ["@neonpro/types#build"],
      "inputs": ["src/**/*.{ts,js}", "package.json", "tsconfig.json"],
      "outputs": ["dist/**"]
    },
    "@neonpro/core-services#build": {
      "dependsOn": [
        "@neonpro/types#build",
        "@neonpro/database#build",
        "@neonpro/shared#build"
      ],
      "inputs": ["src/**/*.{ts,js}", "package.json", "tsconfig.json"],
      "outputs": ["dist/**"]
    },

    "lint": {
      "inputs": ["**/*.{ts,tsx,js,jsx}", "dprint.json"],
      "outputs": [],
      "outputLogs": "new-only",
      "env": ["NODE_OPTIONS=--max-old-space-size=4096"]
    },
    "lint:fix": {
      "inputs": ["**/*.{ts,tsx,js,jsx}", "dprint.json"],
      "outputs": [],
      "outputLogs": "new-only",
      "env": ["NODE_OPTIONS=--max-old-space-size=4096"]
    },
    "type-check": {
      "dependsOn": ["^build"],
      "inputs": ["**/*.{ts,tsx}", "**/tsconfig.json"],
      "outputs": ["**/*.tsbuildinfo"],
      "outputLogs": "errors-only"
    },
    "format": {
      "inputs": [
        "**/*.{ts,tsx,js,jsx,json,md,toml,yaml,yml,css,scss,sass,less}",
        "dprint.json"
      ],
      "outputs": [],
      "outputLogs": "new-only"
    },
    "format:check": {
      "inputs": [
        "**/*.{ts,tsx,js,jsx,json,md,toml,yaml,yml,css,scss,sass,less}",
        "dprint.json"
      ],
      "outputs": [],
      "outputLogs": "new-only"
    },
    "test": {
      "dependsOn": ["build"],
      "inputs": [
        "**/*.test.*",
        "**/*.spec.*",
        "**/vitest.config.*",
        "vitest.setup.*",
        "vitest.d.ts",
        "src/**/*.{ts,tsx,js,jsx}",
        "package.json",
        "tsconfig.json"
      ],
      "outputs": [
        "coverage/**",
        "tools/testing/reports/**",
        ".vitest/**",
        "node_modules/.vitest/**"
      ],
      "env": ["CI", "NODE_ENV"],
      "cache": true,
      "outputLogs": "full"
    },
    "test:watch": {
      "cache": false,
      "persistent": true,
      "inputs": [
        "**/*.test.*",
        "**/*.spec.*",
        "**/vitest.config.*",
        "vitest.setup.*",
        "vitest.d.ts",
        "src/**/*.{ts,tsx,js,jsx}",
        "package.json",
        "tsconfig.json"
      ],
      "outputs": [],
      "env": ["NODE_ENV"]
    },
    "test:coverage": {
      "dependsOn": ["build"],
      "inputs": [
        "**/*.test.*",
        "**/*.spec.*",
        "**/vitest.config.*",
        "vitest.setup.*",
        "vitest.d.ts",
        "src/**/*.{ts,tsx,js,jsx}",
        "package.json",
        "tsconfig.json"
      ],
      "outputs": ["coverage/**", ".vitest/**", "node_modules/.vitest/**"],
      "env": ["CI", "NODE_ENV"],
      "cache": true
    },
    "test:unit": {
      "dependsOn": ["build"],
      "inputs": ["**/*.test.*", "**/*.spec.*", "vitest.config.*"],
      "outputs": ["coverage/**"]
    },
    "test:e2e": {
      "dependsOn": ["build"],
      "inputs": ["**/*.e2e.*", "**/e2e/**", "playwright.config.*"],
      "outputs": ["playwright-report/**", "test-results/**"]
    },
    "test:e2e:install": {
      "cache": false,
      "outputs": []
    },
    "dev": {
      "cache": false,
      "persistent": true,
      "env": [
        "NODE_ENV",
        "NEXT_PUBLIC_SUPABASE_URL",
        "NEXT_PUBLIC_SUPABASE_ANON_KEY",
        "SUPABASE_SERVICE_ROLE_KEY"
      ]
    },
    "clean": {
      "cache": false,
      "outputs": []
    }
  }
}
